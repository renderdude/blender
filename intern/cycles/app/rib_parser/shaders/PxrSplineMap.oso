OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -DOSX -I/Users/Shared/build/ratbuild/rman/_built/osxMonterey_x86-64_clang14_external_release/include -I/Users/Shared/build/ratbuild/rmanshare/RIS/include -I/Users/Shared/build/ratbuild/rmanshare/RIS/include/common -I/Users/Shared/build/ratbuild/rmanshare/RIS/pattern/osl -I/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl -o /Users/Shared/build/ratbuild/rmanshare/_built/osxMonterey_x86-64_clang14_external_release/osl/PxrSplineMap.osl/obj/PxrSplineMap.oso
shader PxrSplineMap	%meta{int,rfm_nodeid,1233495} %meta{string,rfm_classification,"rendernode/RenderMan/pattern/utility"} %meta{string,rfh_classification,"Pattern/Utility"} %meta{string,help,"Remap an incoming float signal through a user-defined spline with optional colorizing controls."} 
param	float	input	0		%read{3,8} %write{2147483647,-1}
param	float	inputMin	0		%meta{string,label,"Input Min"} %meta{int,slider,1} %meta{string,page,"Input Range"} %meta{int,page_open,1}  %read{1,9} %write{2147483647,-1}
param	float	inputMax	1		%meta{string,label,"Input Max"} %meta{int,slider,1} %meta{string,page,"Input Range"}  %read{1,9} %write{2147483647,-1}
param	int	inputClamp	0		%meta{string,label,"Clamp"} %meta{string,widget,"checkBox"} %meta{string,page,"Input Range"}  %read{12,12} %write{2147483647,-1}
param	int	floatRamp	4		%meta{string,widget,"floatRamp"} %meta{int,connectable,0}  %read{2147483647,-1} %write{2147483647,-1}
param	float[]	floatRamp_Knots	0 0 1 1		%meta{int,isDynamicArray,1} %meta{int,arraySize,-1} %meta{string,widget,"null"}  %read{17,54} %write{2147483647,-1}
param	float[]	floatRamp_Floats	0 0 1 1		%meta{int,isDynamicArray,1} %meta{int,arraySize,-1} %meta{string,widget,"null"}  %read{33,58} %write{2147483647,-1}
param	string	floatRamp_Interpolation	"linear"		%meta{string,label,"Color Ramp Interpolation"} %meta{string,options,"catmull-rom|linear|constant"} %meta{string,widget,"null"}  %read{23,67} %write{2147483647,-1}
param	float	outputMin	0		%meta{string,label,"Output Min"} %meta{int,slider,1} %meta{string,page,"Output Range"} %meta{int,page_open,1}  %read{70,72} %write{2147483647,-1}
param	float	outputMax	1		%meta{string,label,"Output Max"} %meta{int,slider,1} %meta{string,page,"Output Range"}  %read{70,70} %write{2147483647,-1}
param	int	outputClamp	0		%meta{string,label,"Clamp"} %meta{string,widget,"checkBox"} %meta{string,page,"Output Range"}  %read{73,73} %write{2147483647,-1}
param	int	colorRamp	4		%meta{string,widget,"colorRamp"} %meta{int,connectable,0}  %read{2147483647,-1} %write{2147483647,-1}
param	float[]	colorRamp_Knots	0 0 1 1		%meta{int,isDynamicArray,1} %meta{int,arraySize,-1} %meta{string,widget,"null"}  %read{78,115} %write{2147483647,-1}
param	color[]	colorRamp_Colors	0 0 0 0 0 0 1 1 1 1 1 1		%meta{int,isDynamicArray,1} %meta{int,arraySize,-1} %meta{string,widget,"null"}  %read{94,119} %write{2147483647,-1}
param	string	colorRamp_Interpolation	"linear"		%meta{string,label,"Color Ramp Interpolation"} %meta{string,options,"catmull-rom|linear|constant"} %meta{string,widget,"null"}  %read{84,128} %write{2147483647,-1}
oparam	float	resultF	0		%read{14,127} %write{5,76}
oparam	color	resultRGB	0 0 0		%read{131,135} %write{82,129}
oparam	color	resultR	0 0 0		%read{2147483647,-1} %write{132,132}
oparam	color	resultG	0 0 0		%read{2147483647,-1} %write{134,134}
oparam	color	resultB	0 0 0		%read{2147483647,-1} %write{136,136}
local	int	___336_nknots	%read{19,65} %write{18,18}
local	float[68]	___336_ka	%read{66,66} %write{29,63}
local	float[68]	___336_va	%read{67,67} %write{29,63}
local	int	___336_offset	%read{29,64} %write{25,26}
local	int	___337_i	%read{29,36} %write{28,36}
local	int	___339_i	%read{39,48} %write{38,48}
local	int	___336_last	%read{52,63} %write{49,49}
local	int	___341_i	%read{52,63} %write{51,63}
local	int	___336_nk	%read{66,67} %write{65,65}
local	float	___336_k	%read{67,67} %write{66,66}
local	int	___343_nknots	%read{80,126} %write{79,79}
local	float[68]	___343_ka	%read{127,127} %write{90,124}
local	color[68]	___343_va	%read{128,128} %write{90,124}
local	int	___343_offset	%read{90,125} %write{86,87}
local	int	___344_i	%read{90,97} %write{89,97}
local	int	___346_i	%read{100,109} %write{99,109}
local	int	___343_last	%read{113,124} %write{110,110}
local	int	___348_i	%read{113,124} %write{112,124}
local	int	___343_nk	%read{127,128} %write{126,126}
local	float	___343_k	%read{128,128} %write{127,127}
const	string	$const1	"expand"		%read{0,0} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
temp	int	$tmp2	%read{4,4} %write{3,3}
const	float	$const2	0		%read{5,76} %write{2147483647,-1}
const	float	$const3	1		%read{6,75} %write{2147483647,-1}
temp	float	$tmp3	%read{10,10} %write{8,8}
temp	float	$tmp4	%read{10,10} %write{9,9}
const	int	$const4	0		%read{28,131} %write{2147483647,-1}
const	int	$const5	1		%read{19,133} %write{2147483647,-1}
const	string	$const6	"clamp"		%read{13,74} %write{2147483647,-1}
temp	float	$tmp5	%read{15,15} %write{14,14}
const	string	$const7	"float_ramp"		%read{16,16} %write{2147483647,-1}
const	int	$const8	64		%read{18,79} %write{2147483647,-1}
temp	int	$tmp6	%read{18,18} %write{17,17}
temp	int	$tmp7	%read{20,20} %write{19,19}
const	string	$const9	"bezier"		%read{23,84} %write{2147483647,-1}
temp	int	$tmp8	%read{24,24} %write{23,23}
const	int	$const10	2		%read{25,135} %write{2147483647,-1}
temp	int	$tmp9	%read{29,36} %write{29,36}
temp	int	$tmp10	%read{27,36} %write{28,36}
temp	float	$tmp11	%read{29,36} %write{29,36}
temp	float	$tmp12	%read{29,36} %write{29,36}
temp	int	$tmp13	%read{2147483647,-1} %write{29,36}
temp	int	$tmp14	%read{39,48} %write{39,48}
temp	int	$tmp15	%read{37,48} %write{38,48}
temp	float	$tmp16	%read{39,48} %write{39,48}
temp	int	$tmp17	%read{39,48} %write{39,48}
temp	float	$tmp18	%read{39,48} %write{39,48}
temp	int	$tmp19	%read{39,48} %write{39,48}
temp	int	$tmp20	%read{2147483647,-1} %write{39,48}
temp	int	$tmp21	%read{52,63} %write{52,63}
temp	int	$tmp22	%read{50,63} %write{51,63}
temp	float	$tmp23	%read{52,63} %write{52,63}
temp	int	$tmp24	%read{52,63} %write{52,63}
temp	int	$tmp25	%read{52,63} %write{52,63}
temp	float	$tmp26	%read{52,63} %write{52,63}
temp	int	$tmp27	%read{52,63} %write{52,63}
temp	int	$tmp28	%read{52,63} %write{52,63}
temp	int	$tmp29	%read{2147483647,-1} %write{52,63}
temp	int	$tmp30	%read{65,65} %write{64,64}
const	string	$const11	"compress"		%read{69,69} %write{2147483647,-1}
temp	float	$tmp31	%read{71,71} %write{70,70}
temp	float	$tmp32	%read{72,72} %write{71,71}
temp	float	$tmp33	%read{76,76} %write{75,75}
const	string	$const12	"color_ramp"		%read{77,77} %write{2147483647,-1}
temp	int	$tmp34	%read{79,79} %write{78,78}
temp	int	$tmp35	%read{81,81} %write{80,80}
temp	int	$tmp36	%read{85,85} %write{84,84}
temp	int	$tmp37	%read{90,97} %write{90,97}
temp	int	$tmp38	%read{88,97} %write{89,97}
temp	float	$tmp39	%read{90,97} %write{90,97}
temp	color	$tmp40	%read{90,97} %write{90,97}
temp	int	$tmp41	%read{2147483647,-1} %write{90,97}
temp	int	$tmp42	%read{100,109} %write{100,109}
temp	int	$tmp43	%read{98,109} %write{99,109}
temp	float	$tmp44	%read{100,109} %write{100,109}
temp	int	$tmp45	%read{100,109} %write{100,109}
temp	color	$tmp46	%read{100,109} %write{100,109}
temp	int	$tmp47	%read{100,109} %write{100,109}
temp	int	$tmp48	%read{2147483647,-1} %write{100,109}
temp	int	$tmp49	%read{113,124} %write{113,124}
temp	int	$tmp50	%read{111,124} %write{112,124}
temp	float	$tmp51	%read{113,124} %write{113,124}
temp	int	$tmp52	%read{113,124} %write{113,124}
temp	int	$tmp53	%read{113,124} %write{113,124}
temp	color	$tmp54	%read{113,124} %write{113,124}
temp	int	$tmp55	%read{113,124} %write{113,124}
temp	int	$tmp56	%read{113,124} %write{113,124}
temp	int	$tmp57	%read{2147483647,-1} %write{113,124}
temp	int	$tmp58	%read{126,126} %write{125,125}
temp	color	$tmp59	%read{129,129} %write{128,128}
temp	float	$tmp60	%read{132,132} %write{131,131}
temp	float	$tmp61	%read{134,134} %write{133,133}
temp	float	$tmp62	%read{136,136} %write{135,135}
code ___main___
# PxrSplineMap.osl:187
#     resultF = expand(input, inputMin, inputMax);
	functioncall	$const1 12 	%filename{"PxrSplineMap.osl"} %line{187} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLUtils.h:172
# 	if (lo == hi) return x < lo ? 0.0 : 1.0;
	eq		$tmp1 inputMin inputMax 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLUtils.h"} %line{172} %argrw{"wrr"}
	if		$tmp1 8 8 	%argrw{"r"}
	lt		$tmp2 input inputMin 	%argrw{"wrr"}
	if		$tmp2 6 7 	%argrw{"r"}
	assign		resultF $const2 	%argrw{"wr"}
	assign		resultF $const3 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLUtils.h:173
# 	return (x - lo) / (hi - lo);
	sub		$tmp3 input inputMin 	%line{173} %argrw{"wrr"}
	sub		$tmp4 inputMax inputMin 	%argrw{"wrr"}
	div		resultF $tmp3 $tmp4 	%argrw{"wrr"}
	return
# PxrSplineMap.osl:188
#     if (inputClamp) resultF = clamp(resultF, 0, 1);
	if		inputClamp 16 16 	%filename{"PxrSplineMap.osl"} %line{188} %argrw{"r"}
	functioncall	$const6 16 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rman/_built/osxMonterey_x86-64_clang14_external_release/include/shaders/stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp5 resultF $const3 	%filename{"/Users/Shared/build/ratbuild/rman/_built/osxMonterey_x86-64_clang14_external_release/include/shaders/stdosl.h"} %line{163} %argrw{"wrr"}
	max		resultF $tmp5 $const2 	%argrw{"wrr"}
# PxrSplineMap.osl:189
#     resultF = float_ramp(resultF, floatRamp_Knots, floatRamp_Floats, floatRamp_Interpolation);
	functioncall	$const7 69 	%filename{"PxrSplineMap.osl"} %line{189} %argrw{"r"}
# PxrSplineMap.osl:17
#     int nknots = min(k_max_num_knots, arraylength(knots));
	arraylength	$tmp6 floatRamp_Knots 	%line{17} %argrw{"wr"}
	min		___336_nknots $const8 $tmp6 	%argrw{"wrr"}
# PxrSplineMap.osl:18
#     if (nknots < 1) return input;
	lt		$tmp7 ___336_nknots $const5 	%line{18} %argrw{"wrr"}
	if		$tmp7 23 23 	%argrw{"r"}
	assign		resultF resultF 	%argrw{"wr"}
	return
# PxrSplineMap.osl:23
#     int offset = interp == "bezier" ? k_bezier_xtra : k_spline_xtra;
	eq		$tmp8 floatRamp_Interpolation $const9 	%line{23} %argrw{"wrr"}
	if		$tmp8 26 27 	%argrw{"r"}
	assign		___336_offset $const10 	%argrw{"wr"}
	assign		___336_offset $const5 	%argrw{"wr"}
# PxrSplineMap.osl:24
#     for (int i = 0; i < offset; i++)
	for		$tmp10 29 31 35 37 	%line{24} %argrw{"r"}
	assign		___337_i $const4 	%argrw{"wr"}
	lt		$tmp9 ___337_i ___336_offset 	%argrw{"wrr"}
	neq		$tmp10 $tmp9 $const4 	%argrw{"wrr"}
# PxrSplineMap.osl:26
#         ka[i] = knots[0];
	aref		$tmp11 floatRamp_Knots $const4 	%line{26} %argrw{"wrr"}
	aassign		___336_ka ___337_i $tmp11 	%argrw{"wrr"}
# PxrSplineMap.osl:27
#         va[i] = vals[0];
	aref		$tmp12 floatRamp_Floats $const4 	%line{27} %argrw{"wrr"}
	aassign		___336_va ___337_i $tmp12 	%argrw{"wrr"}
# PxrSplineMap.osl:24
#     for (int i = 0; i < offset; i++)
	assign		$tmp13 ___337_i 	%line{24} %argrw{"wr"}
	add		___337_i ___337_i $const5 	%argrw{"wrr"}
# PxrSplineMap.osl:29
#     for (int i = 0; i < nknots; i++)
	for		$tmp15 39 41 47 49 	%line{29} %argrw{"r"}
	assign		___339_i $const4 	%argrw{"wr"}
	lt		$tmp14 ___339_i ___336_nknots 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const4 	%argrw{"wrr"}
# PxrSplineMap.osl:31
#         ka[i + offset] = knots[i];
	aref		$tmp16 floatRamp_Knots ___339_i 	%line{31} %argrw{"wrr"}
	add		$tmp17 ___339_i ___336_offset 	%argrw{"wrr"}
	aassign		___336_ka $tmp17 $tmp16 	%argrw{"wrr"}
# PxrSplineMap.osl:32
#         va[i + offset] = vals[i];
	aref		$tmp18 floatRamp_Floats ___339_i 	%line{32} %argrw{"wrr"}
	add		$tmp19 ___339_i ___336_offset 	%argrw{"wrr"}
	aassign		___336_va $tmp19 $tmp18 	%argrw{"wrr"}
# PxrSplineMap.osl:29
#     for (int i = 0; i < nknots; i++)
	assign		$tmp20 ___339_i 	%line{29} %argrw{"wr"}
	add		___339_i ___339_i $const5 	%argrw{"wrr"}
# PxrSplineMap.osl:34
#     int last = nknots - 1;
	sub		___336_last ___336_nknots $const5 	%line{34} %argrw{"wrr"}
# PxrSplineMap.osl:35
#     for (int i = 0; i < offset; i++)
	for		$tmp22 52 54 62 64 	%line{35} %argrw{"r"}
	assign		___341_i $const4 	%argrw{"wr"}
	lt		$tmp21 ___341_i ___336_offset 	%argrw{"wrr"}
	neq		$tmp22 $tmp21 $const4 	%argrw{"wrr"}
# PxrSplineMap.osl:37
#         ka[nknots + offset + i] = knots[last];
	aref		$tmp23 floatRamp_Knots ___336_last 	%line{37} %argrw{"wrr"}
	add		$tmp24 ___336_nknots ___336_offset 	%argrw{"wrr"}
	add		$tmp25 $tmp24 ___341_i 	%argrw{"wrr"}
	aassign		___336_ka $tmp25 $tmp23 	%argrw{"wrr"}
# PxrSplineMap.osl:38
#         va[nknots + offset + i] = vals[last];
	aref		$tmp26 floatRamp_Floats ___336_last 	%line{38} %argrw{"wrr"}
	add		$tmp27 ___336_nknots ___336_offset 	%argrw{"wrr"}
	add		$tmp28 $tmp27 ___341_i 	%argrw{"wrr"}
	aassign		___336_va $tmp28 $tmp26 	%argrw{"wrr"}
# PxrSplineMap.osl:35
#     for (int i = 0; i < offset; i++)
	assign		$tmp29 ___341_i 	%line{35} %argrw{"wr"}
	add		___341_i ___341_i $const5 	%argrw{"wrr"}
# PxrSplineMap.osl:40
#     int nk = nknots + offset * 2;
	mul		$tmp30 ___336_offset $const10 	%line{40} %argrw{"wrr"}
	add		___336_nk ___336_nknots $tmp30 	%argrw{"wrr"}
# PxrSplineMap.osl:42
#     float k = splineinverse(interp, input, nk, ka);
	splineinverse	___336_k floatRamp_Interpolation resultF ___336_nk ___336_ka 	%line{42} %argrw{"wrrrr"}
# PxrSplineMap.osl:43
#     return float(spline(interp, k, nk, va));
	spline		resultF floatRamp_Interpolation ___336_k ___336_nk ___336_va 	%line{43} %argrw{"wrrrr"}
	return
# PxrSplineMap.osl:190
#     resultF = compress(resultF, outputMin, outputMax);
	functioncall	$const11 73 	%line{190} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLUtils.h:158
#     return (hi - lo) * x + lo;
	sub		$tmp31 outputMax outputMin 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLUtils.h"} %line{158} %argrw{"wrr"}
	mul		$tmp32 $tmp31 resultF 	%argrw{"wrr"}
	add		resultF $tmp32 outputMin 	%argrw{"wrr"}
# PxrSplineMap.osl:191
#     if (outputClamp) resultF = clamp(resultF, 0, 1);
	if		outputClamp 77 77 	%filename{"PxrSplineMap.osl"} %line{191} %argrw{"r"}
	functioncall	$const6 77 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rman/_built/osxMonterey_x86-64_clang14_external_release/include/shaders/stdosl.h:163
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp33 resultF $const3 	%filename{"/Users/Shared/build/ratbuild/rman/_built/osxMonterey_x86-64_clang14_external_release/include/shaders/stdosl.h"} %line{163} %argrw{"wrr"}
	max		resultF $tmp33 $const2 	%argrw{"wrr"}
# PxrSplineMap.osl:192
#     resultRGB = color_ramp(resultF, colorRamp_Knots, colorRamp_Colors, colorRamp_Interpolation);
	functioncall	$const12 131 	%filename{"PxrSplineMap.osl"} %line{192} %argrw{"r"}
# PxrSplineMap.osl:48
#     int nknots = min(k_max_num_knots, arraylength(knots));
	arraylength	$tmp34 colorRamp_Knots 	%line{48} %argrw{"wr"}
	min		___343_nknots $const8 $tmp34 	%argrw{"wrr"}
# PxrSplineMap.osl:49
#     if (nknots < 1) return color(input);
	lt		$tmp35 ___343_nknots $const5 	%line{49} %argrw{"wrr"}
	if		$tmp35 84 84 	%argrw{"r"}
	assign		resultRGB resultF 	%argrw{"wr"}
	return
# PxrSplineMap.osl:54
#     int offset = interp == "bezier" ? k_bezier_xtra : k_spline_xtra;
	eq		$tmp36 colorRamp_Interpolation $const9 	%line{54} %argrw{"wrr"}
	if		$tmp36 87 88 	%argrw{"r"}
	assign		___343_offset $const10 	%argrw{"wr"}
	assign		___343_offset $const5 	%argrw{"wr"}
# PxrSplineMap.osl:55
#     for (int i = 0; i < offset; i++)
	for		$tmp38 90 92 96 98 	%line{55} %argrw{"r"}
	assign		___344_i $const4 	%argrw{"wr"}
	lt		$tmp37 ___344_i ___343_offset 	%argrw{"wrr"}
	neq		$tmp38 $tmp37 $const4 	%argrw{"wrr"}
# PxrSplineMap.osl:57
#         ka[i] = knots[0];
	aref		$tmp39 colorRamp_Knots $const4 	%line{57} %argrw{"wrr"}
	aassign		___343_ka ___344_i $tmp39 	%argrw{"wrr"}
# PxrSplineMap.osl:58
#         va[i] = vals[0];
	aref		$tmp40 colorRamp_Colors $const4 	%line{58} %argrw{"wrr"}
	aassign		___343_va ___344_i $tmp40 	%argrw{"wrr"}
# PxrSplineMap.osl:55
#     for (int i = 0; i < offset; i++)
	assign		$tmp41 ___344_i 	%line{55} %argrw{"wr"}
	add		___344_i ___344_i $const5 	%argrw{"wrr"}
# PxrSplineMap.osl:60
#     for (int i = 0; i < nknots; i++)
	for		$tmp43 100 102 108 110 	%line{60} %argrw{"r"}
	assign		___346_i $const4 	%argrw{"wr"}
	lt		$tmp42 ___346_i ___343_nknots 	%argrw{"wrr"}
	neq		$tmp43 $tmp42 $const4 	%argrw{"wrr"}
# PxrSplineMap.osl:62
#         ka[i + offset] = knots[i];
	aref		$tmp44 colorRamp_Knots ___346_i 	%line{62} %argrw{"wrr"}
	add		$tmp45 ___346_i ___343_offset 	%argrw{"wrr"}
	aassign		___343_ka $tmp45 $tmp44 	%argrw{"wrr"}
# PxrSplineMap.osl:63
#         va[i + offset] = vals[i];
	aref		$tmp46 colorRamp_Colors ___346_i 	%line{63} %argrw{"wrr"}
	add		$tmp47 ___346_i ___343_offset 	%argrw{"wrr"}
	aassign		___343_va $tmp47 $tmp46 	%argrw{"wrr"}
# PxrSplineMap.osl:60
#     for (int i = 0; i < nknots; i++)
	assign		$tmp48 ___346_i 	%line{60} %argrw{"wr"}
	add		___346_i ___346_i $const5 	%argrw{"wrr"}
# PxrSplineMap.osl:65
#     int last = nknots - 1;
	sub		___343_last ___343_nknots $const5 	%line{65} %argrw{"wrr"}
# PxrSplineMap.osl:66
#     for (int i = 0; i < offset; i++)
	for		$tmp50 113 115 123 125 	%line{66} %argrw{"r"}
	assign		___348_i $const4 	%argrw{"wr"}
	lt		$tmp49 ___348_i ___343_offset 	%argrw{"wrr"}
	neq		$tmp50 $tmp49 $const4 	%argrw{"wrr"}
# PxrSplineMap.osl:68
#         ka[nknots + offset + i] = knots[last];
	aref		$tmp51 colorRamp_Knots ___343_last 	%line{68} %argrw{"wrr"}
	add		$tmp52 ___343_nknots ___343_offset 	%argrw{"wrr"}
	add		$tmp53 $tmp52 ___348_i 	%argrw{"wrr"}
	aassign		___343_ka $tmp53 $tmp51 	%argrw{"wrr"}
# PxrSplineMap.osl:69
#         va[nknots + offset + i] = vals[last];
	aref		$tmp54 colorRamp_Colors ___343_last 	%line{69} %argrw{"wrr"}
	add		$tmp55 ___343_nknots ___343_offset 	%argrw{"wrr"}
	add		$tmp56 $tmp55 ___348_i 	%argrw{"wrr"}
	aassign		___343_va $tmp56 $tmp54 	%argrw{"wrr"}
# PxrSplineMap.osl:66
#     for (int i = 0; i < offset; i++)
	assign		$tmp57 ___348_i 	%line{66} %argrw{"wr"}
	add		___348_i ___348_i $const5 	%argrw{"wrr"}
# PxrSplineMap.osl:71
#     int nk = nknots + offset * 2;
	mul		$tmp58 ___343_offset $const10 	%line{71} %argrw{"wrr"}
	add		___343_nk ___343_nknots $tmp58 	%argrw{"wrr"}
# PxrSplineMap.osl:73
#     float k = splineinverse(interp, input, nk, ka);
	splineinverse	___343_k colorRamp_Interpolation resultF ___343_nk ___343_ka 	%line{73} %argrw{"wrrrr"}
# PxrSplineMap.osl:74
#     return color(spline(interp, k, nk, va));
	spline		$tmp59 colorRamp_Interpolation ___343_k ___343_nk ___343_va 	%line{74} %argrw{"wrrrr"}
	assign		resultRGB $tmp59 	%argrw{"wr"}
	return
# PxrSplineMap.osl:193
#     resultR = resultRGB[0];
	compref		$tmp60 resultRGB $const4 	%line{193} %argrw{"wrr"}
	assign		resultR $tmp60 	%argrw{"wr"}
# PxrSplineMap.osl:194
#     resultG = resultRGB[1];
	compref		$tmp61 resultRGB $const5 	%line{194} %argrw{"wrr"}
	assign		resultG $tmp61 	%argrw{"wr"}
# PxrSplineMap.osl:195
#     resultB = resultRGB[2];
	compref		$tmp62 resultRGB $const10 	%line{195} %argrw{"wrr"}
	assign		resultB $tmp62 	%argrw{"wr"}
	end

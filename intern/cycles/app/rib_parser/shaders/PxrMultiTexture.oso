OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: -DOSX -I/Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include -I/Users/Shared/build/ratbuild/rmanshare/RIS/include -I/Users/Shared/build/ratbuild/rmanshare/RIS/include/common -I/Users/Shared/build/ratbuild/rmanshare/RIS/pattern/osl -I/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl -o /Users/Shared/build/ratbuild/rmanshare/_built/osxSonoma_x86-64_clang15_external_release/osl/PxrMultiTexture.osl/obj/PxrMultiTexture.oso
shader PxrMultiTexture	%meta{int,rfm_nodeid,1200402} %meta{string,rfm_classification,"rendernode/RenderMan/pattern/texture"} %meta{string,rfh_classification,"Pattern/Texture"} %meta{string,help,"Read a texture file."} 
param	struct PxrManifoldMulti	manifoldMulti			%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{50,50} %write{2147483647,-1} %struct{"PxrManifoldMulti"} %structfields{minNumTextures,numTextures,textureOrder,stAlpha0,stAlpha1,stAlpha2,stAlpha3,tileidRunflag0,tileidRunflag1,tileidRunflag2,tileidRunflag3,Tn,Bn,radius,hextile0,hextile1,hextile2,hextile3} %structfieldtypes{"iiippppppppv[4]v[4]fp[4]p[4]p[4]p[4]"} %structnfields{18}
param	int	manifoldMulti.minNumTextures	0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{338,338} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{0}
param	int	manifoldMulti.numTextures	0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{339,1199} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{1}
param	int	manifoldMulti.textureOrder	0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{1169,1212} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{2}
param	point	manifoldMulti.stAlpha0	-1 -1 -1		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{236,236} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{3} %derivs
param	point	manifoldMulti.stAlpha1	-1 -1 -1		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{237,237} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{4} %derivs
param	point	manifoldMulti.stAlpha2	-1 -1 -1		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{238,238} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{5} %derivs
param	point	manifoldMulti.stAlpha3	-1 -1 -1		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{239,239} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{6} %derivs
param	point	manifoldMulti.tileidRunflag0	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{240,240} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{7} %derivs
param	point	manifoldMulti.tileidRunflag1	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{241,241} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{8} %derivs
param	point	manifoldMulti.tileidRunflag2	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{242,242} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{9} %derivs
param	point	manifoldMulti.tileidRunflag3	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{243,243} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{10} %derivs
param	vector[4]	manifoldMulti.Tn	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{1148,7175} %write{0,3} %mystruct{manifoldMulti} %mystructfield{11} %initexpr
param	vector[4]	manifoldMulti.Bn	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{1148,7175} %write{4,7} %mystruct{manifoldMulti} %mystructfield{12} %initexpr
param	float	manifoldMulti.radius	0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{244,244} %write{2147483647,-1} %mystruct{manifoldMulti} %mystructfield{13}
param	point[4]	manifoldMulti.hextile0	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{255,261} %write{8,11} %mystruct{manifoldMulti} %mystructfield{14} %derivs %initexpr
param	point[4]	manifoldMulti.hextile1	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{263,269} %write{12,15} %mystruct{manifoldMulti} %mystructfield{15} %derivs %initexpr
param	point[4]	manifoldMulti.hextile2	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{271,277} %write{16,19} %mystruct{manifoldMulti} %mystructfield{16} %derivs %initexpr
param	point[4]	manifoldMulti.hextile3	0 0 0		%meta{string,widget,"default"} %meta{string,help,"manifoldMulti (struct)"} %meta{string,label,"Multi Manifold"} %meta{string,readOnly,"True"}  %read{279,285} %write{20,23} %mystruct{manifoldMulti} %mystructfield{17} %derivs %initexpr
param	float	blendingContrast	0		%meta{string,label,"Blending Contrast"} %meta{float,min,0} %meta{float,max,1}  %read{1469,7226} %write{2147483647,-1} %derivs
param	string	filename0	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{int,page_open,1} %meta{string,help,"filename0 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 0"}  %read{185,6775} %write{2147483647,-1} %derivs
param	string	filename1	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename1 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 1"}  %read{246,6781} %write{2147483647,-1} %derivs
param	string	filename2	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename2 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 2"}  %read{247,6787} %write{2147483647,-1} %derivs
param	string	filename3	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename3 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 3"}  %read{248,6793} %write{2147483647,-1} %derivs
param	string	filename4	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename4 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 4"}  %read{249,6799} %write{2147483647,-1} %derivs
param	string	filename5	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename5 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 5"}  %read{250,6805} %write{2147483647,-1} %derivs
param	string	filename6	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename6 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 6"}  %read{251,6811} %write{2147483647,-1} %derivs
param	string	filename7	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename7 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 7"}  %read{252,6817} %write{2147483647,-1} %derivs
param	string	filename8	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename8 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 8"}  %read{253,6823} %write{2147483647,-1} %derivs
param	string	filename9	""		%meta{string,widget,"assetIdInput"} %meta{string,page,"Textures"} %meta{string,help,"filename9 (string)"} %meta{string,options,"texture"} %meta{int,connectable,0} %meta{string,label,"Filename 9"}  %read{254,6829} %write{2147483647,-1} %derivs
param	int	firstChannel	0		%meta{string,widget,"default"} %meta{string,page,"Texture params"} %meta{string,help,"First channel offset to be looked up for Filename.<br><br>firstChannel (int)"} %meta{int,connectable,0} %meta{string,label,"First Channel Offset"}  %read{37,37} %write{2147483647,-1} %derivs
param	int	invertT	1		%meta{string,widget,"checkBox"} %meta{string,page,"Texture params"} %meta{int,page_open,1} %meta{string,help,"invertT (int)"} %meta{int,connectable,0} %meta{string,label,"Invert T"}  %read{58,6136} %write{2147483647,-1}
param	int	filter	1		%meta{string,widget,"mapper"} %meta{string,page,"Texture params"} %meta{string,help,"filter (int)"} %meta{string,options,"Nearest:0|Box:1|Bilinear:2|Bspline:3|Gaussian:6|Lagrangian:7"} %meta{int,connectable,0} %meta{string,label,"Filter"}  %read{30,33} %write{2147483647,-1}
param	int	smoothRayDerivs	1		%meta{string,widget,"checkBox"} %meta{string,page,"Texture"} %meta{string,help,"Compute texture filter widths at ray hit points in a more robust manner, providing consistent widths independent of the rotation of the underlying surface."} %meta{int,connectable,0} %meta{string,label,"Smooth Ray Derivs"}  %read{67,6145} %write{2147483647,-1}
param	float	blur	0		%meta{string,widget,"default"} %meta{string,page,"Texture params"} %meta{string,help,"blur (float)"} %meta{string,label,"Blur"}  %read{38,38} %write{2147483647,-1} %derivs
param	int	lerp	1		%meta{string,widget,"checkBox"} %meta{string,page,"Texture params"} %meta{string,help,"lerp (int)"} %meta{int,connectable,0} %meta{string,label,"Mip Interpolate"}  %read{2147483647,-1} %write{2147483647,-1}
param	color	missingColor	1 0 1		%meta{string,widget,"color"} %meta{string,page,"Texture params"} %meta{string,help,"missingColor (color)"} %meta{string,label,"Missing Color"}  %read{39,39} %write{2147483647,-1} %derivs
param	float	missingAlpha	1		%meta{string,widget,"default"} %meta{string,page,"Texture params"} %meta{string,help,"missingAlpha (float)"} %meta{string,label,"Missing Alpha"}  %read{40,40} %write{2147483647,-1}
param	int	linearize	0		%meta{string,widget,"checkBox"} %meta{string,page,"Texture params"} %meta{string,help,"linearize (int)"} %meta{int,connectable,0} %meta{string,label,"Linearize"}  %read{211,6670} %write{2147483647,-1}
param	int	mipBias	0		%meta{string,page,"Texture params.Advanced Texture Settings"} %meta{int,page_open,1} %meta{string,help,"Offset the selected MIP level picked by the renderer.<br>Positive values will bias toward lower resolution MIPs.<br>Negative values will bias toward higher resolution MIPs.<br><br>mipBias (int)"} %meta{int,connectable,0} %meta{string,label,"MIP bias"} %meta{int,slidermax,10} %meta{int,slidermin,-10}  %read{2023,6268} %write{2147483647,-1} %derivs
param	float	maxResolution	0		%meta{string,widget,"mapper"} %meta{string,page,"Texture params.Advanced Texture Settings"} %meta{string,help,"Clamp the resolution to a maximum value.<br><br>maxResolution (float)"} %meta{string,options,"Unlimited:0|32:32|64:64|128:128|256:256|512:512|1024:1024|2048:2048|4096:4096|8192:8192"} %meta{string,label,"Max Resolution"}  %read{2026,6275} %write{2147483647,-1} %derivs
param	int	optimizeIndirect	1		%meta{string,widget,"checkBox"} %meta{string,page,"Texture params.Advanced Texture Settings"} %meta{string,help,"Make indirect hits use a box filter rather than the selected one.<br><br>optimizeIndirect (int)"} %meta{int,connectable,0} %meta{string,label,"Optimize Indirect"}  %read{2147483647,-1} %write{2147483647,-1}
param	int	randomSource	0		%meta{string,widget,"mapper"} %meta{string,page,"Randomize"} %meta{int,page_open,1} %meta{string,help,"randomSource (int)"} %meta{string,options,"Object Id:0|Object Name:1"} %meta{int,connectable,0} %meta{string,label,"Random Source"}  %read{345,369} %write{2147483647,-1}
param	float	randomSeed	0		%meta{string,widget,"default"} %meta{string,page,"Randomize"} %meta{string,help,"randomSeed (float)"} %meta{int,connectable,0} %meta{string,label,"Seed"}  %read{385,1121} %write{2147483647,-1} %derivs
param	float	randomHue	0		%meta{string,widget,"default"} %meta{string,page,"Randomize"} %meta{string,help,"randomHue (float)"} %meta{int,connectable,0} %meta{string,label,"Hue"} %meta{float,max,1} %meta{float,min,0}  %read{1125,1142} %write{2147483647,-1} %derivs
param	float	randomSaturation	0		%meta{string,widget,"default"} %meta{string,page,"Randomize"} %meta{string,help,"randomSaturation (float)"} %meta{int,connectable,0} %meta{string,label,"Saturation"} %meta{float,max,1} %meta{float,min,0}  %read{1127,1143} %write{2147483647,-1} %derivs
param	float	randomLuminance	0		%meta{string,widget,"default"} %meta{string,page,"Randomize"} %meta{string,help,"randomLuminance (float)"} %meta{int,connectable,0} %meta{string,label,"Luminance"} %meta{float,max,1} %meta{float,min,0}  %read{1131,1144} %write{2147483647,-1} %derivs
param	float	randomGamma	0		%meta{string,widget,"default"} %meta{string,page,"Randomize"} %meta{string,help,"randomGamma (float)"} %meta{int,connectable,0} %meta{string,label,"Gamma"} %meta{float,max,1} %meta{float,min,0}  %read{1135,1145} %write{2147483647,-1} %derivs
param	int	hueMode	0		%meta{string,widget,"mapper"} %meta{string,page,"Randomize"} %meta{string,help,"Centered: The amount of variation will be centered around the current value.<br><br>hueMode (int)"} %meta{string,options,"Centered:0|Additive:1|Subtractive:2"} %meta{int,connectable,0} %meta{string,label,"Hue Mode"}  %read{7092,7096} %write{2147483647,-1}
param	int	saturationMode	0		%meta{string,widget,"mapper"} %meta{string,page,"Randomize"} %meta{string,help,"Centered: The amount of variation will be centered around the current value.<br><br>saturationMode (int)"} %meta{string,options,"Centered:0|Additive:1|Subtractive:2"} %meta{int,connectable,0} %meta{string,label,"Saturation Mode"}  %read{7102,7106} %write{2147483647,-1}
param	int	luminanceMode	0		%meta{string,widget,"mapper"} %meta{string,page,"Randomize"} %meta{string,help,"Centered: The amount of variation will be centered around the current value.<br><br>luminanceMode (int)"} %meta{string,options,"Centered:0|Additive:1|Subtractive:2"} %meta{int,connectable,0} %meta{string,label,"Luminance Mode"}  %read{7112,7116} %write{2147483647,-1}
param	int	gammaMode	0		%meta{string,widget,"mapper"} %meta{string,page,"Randomize"} %meta{string,help,"Centered: The amount of variation will be centered around the current value.<br><br>gammaMode (int)"} %meta{string,options,"Centered:0|Additive:1|Subtractive:2"} %meta{int,connectable,0} %meta{string,label,"Gamma Mode"}  %read{7122,7125} %write{2147483647,-1}
param	int	texturesAreNormalMaps	0		%meta{string,page,"Bump Output"} %meta{int,page_open,1} %meta{string,label,"Textures Are Normal Maps"} %meta{string,widget,"checkBox"} %meta{int,connectable,0}  %read{24,7332} %write{2147483647,-1}
param	int	orientation	2		%meta{string,widget,"mapper"} %meta{string,page,"Bump Output"} %meta{string,help,"Some texturing applications offer different orientations,<br>like OpenGL or DirectX. You can also go manual to try to<br>fix your normal map's appearance.<br><br>orientation (int)"} %meta{string,options,"OpenGL:0|DirectX:1|Custom:2"} %meta{int,connectable,0} %meta{string,label,"Orientation"}  %read{25,25} %write{2147483647,-1}
param	int	flipX	0		%meta{string,widget,"checkBox"} %meta{string,page,"Bump Output"} %meta{string,help,"Invert the bump orientation.<br>Concave becomes convex and vice versa.<br><br>flipX (int)"} %meta{string,conditionalVisOp,"equalTo"} %meta{string,conditionalVisPath,"../orientation"} %meta{string,conditionalVisValue,"2"} %meta{int,connectable,0} %meta{string,label,"Flip X"}  %read{26,26} %write{2147483647,-1}
param	int	flipY	0		%meta{string,widget,"checkBox"} %meta{string,page,"Bump Output"} %meta{string,help,"Invert the bump orientation.<br>Concave becomes convex and vice versa.<br><br>flipY (int)"} %meta{string,conditionalVisOp,"equalTo"} %meta{string,conditionalVisPath,"../orientation"} %meta{string,conditionalVisValue,"2"} %meta{int,connectable,0} %meta{string,label,"Flip Y"}  %read{27,27} %write{2147483647,-1}
param	color	colorScale	1 1 1		%meta{string,page,"Adjust Output"} %meta{int,page_open,1} %meta{string,help,"colorScale (color)"} %meta{string,label,"Color Scale"}  %read{7354,7354} %write{2147483647,-1} %derivs
param	color	colorOffset	0 0 0		%meta{string,page,"Adjust Output"} %meta{string,help,"colorOffset (color)"} %meta{string,label,"Color Offset"}  %read{7355,7355} %write{2147483647,-1} %derivs
param	float	saturation	1		%meta{string,page,"Adjust Output"} %meta{string,help,"saturation (float)"} %meta{string,label,"Saturation"} %meta{float,min,0} %meta{float,slidermax,2}  %read{7353,7353} %write{2147483647,-1} %derivs
param	float	alphaScale	1		%meta{string,page,"Adjust Output"} %meta{string,help,"alphaScale (float)"} %meta{string,label,"Alpha Scale"}  %read{7356,7356} %write{2147483647,-1}
param	float	alphaOffset	0		%meta{string,page,"Adjust Output"} %meta{string,help,"alphaOffset (float)"} %meta{string,label,"Alpha Offset"}  %read{7357,7357} %write{2147483647,-1}
param	int	showGrid	0		%meta{string,page,"Hexagonal Tiling"} %meta{string,label,"Show Grid"} %meta{string,widget,"checkBox"} %meta{int,connectable,0}  %read{7271,7271} %write{2147483647,-1}
param	color	gridColor	0.899999976 0.899999976 0.899999976		%meta{string,page,"Hexagonal Tiling"} %meta{string,label,"Grid Color"}  %read{7328,7328} %write{2147483647,-1} %derivs
param	int	matchCppPattern	0		%meta{string,widget,"checkBox"} %meta{string,label,"Match C++ patterns"} %meta{int,connectable,0} %meta{string,help,"Match RenderMan 23 C++ scenes but may slow down your render. Use only when necessary."}  %read{353,6845} %write{2147483647,-1}
oparam	color	resultRGB	0 0 0		%meta{string,help,"resultRGB (color)"}  %read{221,7360} %write{188,7355} %derivs
oparam	float	resultR	0		%meta{string,help,"resultR (float)"}  %read{2147483647,-1} %write{7358,7358}
oparam	float	resultG	0		%meta{string,help,"resultG (float)"}  %read{2147483647,-1} %write{7359,7359}
oparam	float	resultB	0		%meta{string,help,"resultB (float)"}  %read{2147483647,-1} %write{7360,7360}
oparam	float	resultA	0		%meta{string,help,"resultA (float)"}  %read{49,7356} %write{7254,7357}
oparam	color	resultMask	0 0 0		%meta{string,help,"resultMask (color)"}  %read{2147483647,-1} %write{2147483647,-1}
oparam	vector	resultNG	0 0 0		%meta{string,help,"Surface gradient from bump map.<br>resultSGB (vector)"}  %read{6696,7329} %write{7229,7348}
global	point	P	%read{7339,7339} %write{2147483647,-1} %derivs
global	normal	N	%read{2132,7344} %write{2147483647,-1} %derivs
global	vector	dPdu	%read{68,6194} %write{2147483647,-1} %derivs
global	vector	dPdv	%read{69,6185} %write{2147483647,-1} %derivs
local	float[4096]	___558_rxcellrandtable	%read{424,7175} %write{404,7175} %derivs
local	int[4096]	___558_rxcellpermute	%read{424,7175} %write{405,7175} %derivs
local	int	___558_i	%read{424,7175} %write{423,7175}
local	int	___558_iz	%read{523,7175} %write{523,7175} %derivs
local	int	___558_iy	%read{465,7175} %write{465,7175} %derivs
local	float	___558_v0	%read{411,7175} %write{410,7175} %derivs
local	int	___558_int00	%read{424,7175} %write{415,7175} %derivs
local	int	___558_int01	%read{465,7175} %write{456,7175} %derivs
local	int	___558_int02	%read{523,7175} %write{514,7175} %derivs
local	int	___558_int03	%read{598,7175} %write{589,7175} %derivs
local	int	___558_k	%read{424,7175} %write{406,7175} %derivs
local	int	___621_np.domain	%read{407,7175} %write{388,7175} %mystruct{___621_np} %mystructfield{0}
local	int	___621_np.range	%read{423,7175} %write{389,7175} %mystruct{___621_np} %mystructfield{1}
local	float[4]	___621_np.input	%read{409,7175} %write{392,7175} %mystruct{___621_np} %mystructfield{2} %derivs
local	point	___621_np.result	%read{621,7175} %write{400,7175} %mystruct{___621_np} %mystructfield{3} %derivs
local	int	___621_np.periodic	%read{2147483647,-1} %write{401,7175} %mystruct{___621_np} %mystructfield{4}
local	int[4]	___621_np.period	%read{2147483647,-1} %write{402,7175} %mystruct{___621_np} %mystructfield{5}
local	int	___622_np.domain	%read{1148,7175} %write{1148,7175} %mystruct{___622_np} %mystructfield{0}
local	int	___622_np.range	%read{1148,7175} %write{1148,7175} %mystruct{___622_np} %mystructfield{1}
local	float[4]	___622_np.input	%read{1148,7175} %write{1148,7175} %mystruct{___622_np} %mystructfield{2} %derivs
local	point	___622_np.result	%read{1148,7175} %write{1148,7175} %mystruct{___622_np} %mystructfield{3}
local	int	___622_np.periodic	%read{2147483647,-1} %write{1148,7175} %mystruct{___622_np} %mystructfield{4}
local	int[4]	___622_np.period	%read{2147483647,-1} %write{1148,7175} %mystruct{___622_np} %mystructfield{5}
local	int	___624_np.domain	%read{906,1041} %write{893,893} %mystruct{___624_np} %mystructfield{0}
local	int	___624_np.range	%read{922,1119} %write{894,894} %mystruct{___624_np} %mystructfield{1}
local	float[4]	___624_np.input	%read{908,1082} %write{895,898} %mystruct{___624_np} %mystructfield{2} %derivs
local	point	___624_np.result	%read{1120,1120} %write{899,1119} %mystruct{___624_np} %mystructfield{3} %derivs
local	int	___624_np.periodic	%read{2147483647,-1} %write{900,900} %mystruct{___624_np} %mystructfield{4}
local	int[4]	___624_np.period	%read{2147483647,-1} %write{901,901} %mystruct{___624_np} %mystructfield{5}
local	string	___654_interp	%read{41,41} %write{32,36} %derivs
local	int	___654_params.firstchannel	%read{43,43} %write{37,37} %mystruct{___654_params} %mystructfield{0} %derivs
local	float	___654_params.blur	%read{44,44} %write{38,38} %mystruct{___654_params} %mystructfield{1} %derivs
local	color	___654_params.missingcolor	%read{45,45} %write{39,39} %mystruct{___654_params} %mystructfield{2} %derivs
local	float	___654_params.missingalpha	%read{46,46} %write{40,40} %mystruct{___654_params} %mystructfield{3}
local	string	___654_params.interp	%read{47,47} %write{41,41} %mystruct{___654_params} %mystructfield{4} %derivs
local	float	___654_params.width	%read{48,48} %write{42,42} %mystruct{___654_params} %mystructfield{5} %derivs
local	float	___656_coords.s	%read{172,7175} %write{151,7175} %mystruct{___656_coords} %mystructfield{0} %derivs
local	float	___656_coords.t	%read{173,7175} %write{152,7175} %mystruct{___656_coords} %mystructfield{1} %derivs
local	float	___656_coords.dsdx	%read{174,7175} %write{153,7175} %mystruct{___656_coords} %mystructfield{2} %derivs
local	float	___656_coords.dtdx	%read{175,7175} %write{154,7175} %mystruct{___656_coords} %mystructfield{3} %derivs
local	float	___656_coords.dsdy	%read{176,7175} %write{155,7175} %mystruct{___656_coords} %mystructfield{4} %derivs
local	float	___656_coords.dtdy	%read{177,7175} %write{156,7175} %mystruct{___656_coords} %mystructfield{5} %derivs
local	float	___656_coords.blur	%read{178,7175} %write{157,7175} %mystruct{___656_coords} %mystructfield{6} %derivs
local	float	___656__tt	%read{74,7175} %write{64,7175} %derivs
local	float	___656_blur0	%read{157,7175} %write{66,7175} %derivs
local	float	___657_du	%read{71,7175} %write{68,7175} %derivs
local	float	___657_dv	%read{73,7175} %write{69,7175} %derivs
local	float	___657_dsdu	%read{78,7175} %write{71,7175} %derivs
local	float	___657_dsdv	%read{79,7175} %write{73,7175} %derivs
local	float	___657_dtdu	%read{79,7175} %write{75,7175} %derivs
local	float	___657_dtdv	%read{78,7175} %write{77,7175} %derivs
local	float	___657_det	%read{81,7175} %write{80,7175} %derivs
local	vector	___657_dPds	%read{99,7175} %write{86,7175} %derivs
local	vector	___657_dPdt	%read{108,7175} %write{90,7175} %derivs
local	float	___657_filterwidthS	%read{145,7175} %write{126,7175} %derivs
local	float	___657_filterwidthT	%read{146,7175} %write{128,7175} %derivs
local	float	___657_dxss	%read{133,7175} %write{129,7175} %derivs
local	float	___657_dxtt	%read{139,7175} %write{130,7175} %derivs
local	float	___657_dyss	%read{134,7175} %write{131,7175} %derivs
local	float	___657_dytt	%read{140,7175} %write{132,7175} %derivs
local	float	___657_signS	%read{145,7175} %write{137,7175} %derivs
local	float	___657_signT	%read{146,7175} %write{143,7175} %derivs
local	int	___657_unmixedDerivsAreDominant	%read{150,7175} %write{149,7175}
local	int	___664_foo	%read{216,7175} %write{214,7175}
local	int	___667_i	%read{221,7175} %write{220,7175} %derivs
local	float	___671_eps	%read{1148,7175} %write{1148,7175} %derivs
local	float	___671_eps2	%read{1148,7175} %write{1148,7175}
local	float	___671_dxlen2	%read{1148,7175} %write{1148,7175} %derivs
local	float	___671_dylen2	%read{1148,7175} %write{1148,7175} %derivs
local	float	___674_scale	%read{1148,7175} %write{1148,7175} %derivs
local	float	___675_scale	%read{1148,7175} %write{1148,7175} %derivs
local	float	___676_bias	%read{1148,7175} %write{1148,7175} %derivs
local	float	___677_minwidth	%read{1148,7175} %write{1148,7175} %derivs
local	float	___677_swidth	%read{1148,7175} %write{1148,7175} %derivs
local	float	___677_twidth	%read{1148,7175} %write{1148,7175} %derivs
local	int	___677_conservative_filter	%read{1148,7175} %write{1148,7175}
local	float	___677_filterwidth	%read{1148,7175} %write{1148,7175} %derivs
local	int	___679_success	%read{192,7175} %write{181,7175}
local	int	___679_nchannels	%read{194,7175} %write{182,7175}
local	color	___679_finalResult	%read{210,7175} %write{183,7175} %derivs
local	color	___679_result	%read{186,7175} %write{185,7175} %derivs
local	color	___682_missingalpha	%read{1148,7175} %write{1148,7175}
local	float	___708_b_inv	%read{1148,7175} %write{1148,7175}
local	vector	___714_sigmaX	%read{1148,7175} %write{1148,7175}
local	vector	___714_sigmaY	%read{1148,7175} %write{1148,7175}
local	float	___714_flip_sign	%read{1148,7175} %write{1148,7175}
local	float	___714_dSTdx.x	%read{1148,7175} %write{1148,7175} %mystruct{___714_dSTdx} %mystructfield{0}
local	float	___714_dSTdx.y	%read{1148,7175} %write{1148,7175} %mystruct{___714_dSTdx} %mystructfield{1}
local	float	___714_dSTdy.x	%read{1148,7175} %write{1148,7175} %mystruct{___714_dSTdy} %mystructfield{0}
local	float	___714_dSTdy.y	%read{1148,7175} %write{1148,7175} %mystruct{___714_dSTdy} %mystructfield{1}
local	float	___714_det	%read{1148,7175} %write{1148,7175}
local	float	___714_sign_det	%read{1148,7175} %write{1148,7175}
local	float	___714_invC0.x	%read{1148,7175} %write{1148,7175} %mystruct{___714_invC0} %mystructfield{0}
local	float	___714_invC0.y	%read{1148,7175} %write{1148,7175} %mystruct{___714_invC0} %mystructfield{1}
local	float	___715_scale	%read{1148,7175} %write{1148,7175}
local	color	___715_vMa	%read{1148,7175} %write{1148,7175}
local	float	___715_z_ma	%read{1148,7175} %write{1148,7175}
local	int	___715_gFlipVertDeriv	%read{1148,7175} %write{1148,7175}
local	float	___715_s	%read{1148,7175} %write{1148,7175}
local	float	___717_k	%read{7344,7346} %write{7343,7343}
local	color	___720_tsNormal	%read{1148,7175} %write{1148,7175}
local	color	___724_tsNormal	%read{1148,7175} %write{1148,7175} %derivs
local	float	___745_minw	%read{7275,7327} %write{7275,7327} %derivs
local	float	___745_grid	%read{7275,7327} %write{7275,7327} %derivs
local	color	___746_Tcenter	%read{1148,7175} %write{1148,7175} %derivs
local	color	___746_result.powerTtoG	%read{1148,7175} %write{1148,7175} %mystruct{___746_result} %mystructfield{0} %derivs
local	color	___746_result.powerGtoT	%read{1148,7175} %write{1148,7175} %mystruct{___746_result} %mystructfield{1} %derivs
local	float	___748_norm	%read{1148,7221} %write{1148,7219} %derivs
local	color	___748_result	%read{1148,7225} %write{1148,7224} %derivs
local	color	___749_hexCol.value	%read{1148,7175} %write{1148,7175} %mystruct{___749_hexCol} %mystructfield{0} %derivs
local	float	___749_hexCol.norm	%read{1148,7175} %write{1148,7175} %mystruct{___749_hexCol} %mystructfield{1} %derivs
local	color	___749_hexCol.powerGtoT	%read{1148,7175} %write{1148,7175} %mystruct{___749_hexCol} %mystructfield{2} %derivs
local	color	___749_co	%read{1148,7175} %write{1148,7175} %derivs
local	color	___749_cc	%read{1148,7175} %write{1148,7175} %derivs
local	color	___749_c	%read{1148,7175} %write{1148,7175} %derivs
local	float	___749_a	%read{1148,7175} %write{1148,7175}
local	int	___750_i	%read{1148,7175} %write{1148,7175} %derivs
local	float	___751_w	%read{1148,7175} %write{1148,7175} %derivs
local	float	___751_txcoords.s	%read{1148,7175} %write{1148,7175} %mystruct{___751_txcoords} %mystructfield{0} %derivs
local	float	___751_txcoords.t	%read{1148,7175} %write{1148,7175} %mystruct{___751_txcoords} %mystructfield{1} %derivs
local	float	___751_txcoords.dsdx	%read{1148,7175} %write{1148,7175} %mystruct{___751_txcoords} %mystructfield{2} %derivs
local	float	___751_txcoords.dtdx	%read{1148,7175} %write{1148,7175} %mystruct{___751_txcoords} %mystructfield{3} %derivs
local	float	___751_txcoords.dsdy	%read{1148,7175} %write{1148,7175} %mystruct{___751_txcoords} %mystructfield{4} %derivs
local	float	___751_txcoords.dtdy	%read{1148,7175} %write{1148,7175} %mystruct{___751_txcoords} %mystructfield{5} %derivs
local	float	___751_txcoords.blur	%read{1148,7175} %write{1148,7175} %mystruct{___751_txcoords} %mystructfield{6} %derivs
local	vector	___752_Tn	%read{1148,7175} %write{1148,7175}
local	vector	___752_Bn	%read{1148,7175} %write{1148,7175}
local	int	___753_alphaParams.firstchannel	%read{1148,7175} %write{1148,7175} %mystruct{___753_alphaParams} %mystructfield{0}
local	float	___753_alphaParams.blur	%read{1148,7175} %write{1148,7175} %mystruct{___753_alphaParams} %mystructfield{1}
local	color	___753_alphaParams.missingcolor	%read{2147483647,-1} %write{1148,7175} %mystruct{___753_alphaParams} %mystructfield{2}
local	float	___753_alphaParams.missingalpha	%read{1148,7175} %write{1148,7175} %mystruct{___753_alphaParams} %mystructfield{3}
local	string	___753_alphaParams.interp	%read{1148,7175} %write{1148,7175} %mystruct{___753_alphaParams} %mystructfield{4}
local	float	___753_alphaParams.width	%read{1148,7175} %write{1148,7175} %mystruct{___753_alphaParams} %mystructfield{5}
local	float	___755_seed	%read{373,1121} %write{344,381} %derivs
local	int	___756_itmp	%read{348,348} %write{347,347} %derivs
local	string	___758_idname	%read{363,363} %write{361,362} %derivs
local	float	___755_procPrimId	%read{373,373} %write{370,371} %derivs
local	color	___769_tmpColor	%read{7351,7353} %write{7350,7350} %derivs
local	float	___769_intensity	%read{7352,7352} %write{7351,7351} %derivs
local	float	___802_g	%read{1148,7175} %write{1148,7175} %derivs
local	color	___803_out	%read{1148,7175} %write{1148,7175} %derivs
local	color	___804_hsl	%read{1148,7175} %write{1148,7175} %derivs
local	float	___816_n	%read{1148,7175} %write{1148,7175}
local	float	___816_result	%read{1148,7175} %write{1148,7175}
local	int	nMap.enabled	%read{1148,7175} %write{24,24} %mystruct{nMap} %mystructfield{0}
local	int	nMap.orientation	%read{1148,7175} %write{25,25} %mystruct{nMap} %mystructfield{1}
local	int	nMap.flipX	%read{1148,7175} %write{26,26} %mystruct{nMap} %mystructfield{2}
local	int	nMap.flipY	%read{1148,7175} %write{27,27} %mystruct{nMap} %mystructfield{3}
local	int	txparams.firstchannel	%read{185,7175} %write{43,7175} %mystruct{txparams} %mystructfield{0} %derivs
local	float	txparams.blur	%read{184,7175} %write{44,44} %mystruct{txparams} %mystructfield{1} %derivs
local	color	txparams.missingcolor	%read{185,7175} %write{45,45} %mystruct{txparams} %mystructfield{2} %derivs
local	float	txparams.missingalpha	%read{1148,7175} %write{46,46} %mystruct{txparams} %mystructfield{3}
local	string	txparams.interp	%read{185,7175} %write{47,47} %mystruct{txparams} %mystructfield{4} %derivs
local	float	txparams.width	%read{185,7175} %write{48,7175} %mystruct{txparams} %mystructfield{5} %derivs
local	int	needAlpha	%read{1148,7253} %write{49,49}
local	int	noManifold	%read{52,52} %write{51,51}
local	float[2]	___817_st	%read{55,56} %write{53,54} %derivs
local	float	___817_txcoords.s	%read{185,185} %write{172,172} %mystruct{___817_txcoords} %mystructfield{0} %derivs
local	float	___817_txcoords.t	%read{185,185} %write{173,173} %mystruct{___817_txcoords} %mystructfield{1} %derivs
local	float	___817_txcoords.dsdx	%read{185,185} %write{174,174} %mystruct{___817_txcoords} %mystructfield{2} %derivs
local	float	___817_txcoords.dtdx	%read{185,185} %write{175,175} %mystruct{___817_txcoords} %mystructfield{3} %derivs
local	float	___817_txcoords.dsdy	%read{185,185} %write{176,176} %mystruct{___817_txcoords} %mystructfield{4} %derivs
local	float	___817_txcoords.dtdy	%read{185,185} %write{177,177} %mystruct{___817_txcoords} %mystructfield{5} %derivs
local	float	___817_txcoords.blur	%read{184,184} %write{178,178} %mystruct{___817_txcoords} %mystructfield{6} %derivs
local	point[4]	sta	%read{1148,7327} %write{236,239} %derivs
local	point[4]	idf	%read{1148,7252} %write{240,243} %derivs
local	float	stRadius	%read{2147483647,-1} %write{244,244}
local	string[10]	textures	%read{2147483647,-1} %write{245,254}
local	color[4]	colors	%read{1148,7252} %write{1148,7175} %derivs
local	float[4]	alphas	%read{1148,7267} %write{1148,7175}
local	int[4]	enable	%read{1148,7267} %write{1148,7175}
local	color[4]	grads	%read{1148,7252} %write{1148,7175}
local	point[4]	hexData.s	%read{295,7327} %write{256,280} %mystruct{hexData} %mystructfield{0} %derivs
local	point[4]	hexData.t	%read{296,7327} %write{258,282} %mystruct{hexData} %mystructfield{1} %derivs
local	point[4]	hexData.w	%read{297,7327} %write{260,284} %mystruct{hexData} %mystructfield{2} %derivs
local	point[4]	hexData.r	%read{298,7327} %write{262,286} %mystruct{hexData} %mystructfield{3}
local	color[4]	hexTex.powerTtoG	%read{1148,7216} %write{287,7175} %mystruct{hexTex} %mystructfield{0} %derivs
local	color[4]	hexTex.powerGtoT	%read{1148,7216} %write{288,7175} %mystruct{hexTex} %mystructfield{1} %derivs
local	int	doHexTile	%read{7275,7327} %write{337,337}
local	int	minNumTex	%read{339,7175} %write{338,338}
local	int	numRequested	%read{7257,7267} %write{339,339}
local	float	numTexturesF	%read{1148,7175} %write{340,340}
local	float	objSeed	%read{882,7175} %write{341,1124} %derivs
local	vector	nullvec	%read{382,889} %write{342,881} %derivs
local	int	randomize	%read{1148,7175} %write{1137,1137}
local	int	doHue	%read{2147483647,-1} %write{1138,1138}
local	int	doSat	%read{2147483647,-1} %write{1139,1139}
local	int	doLum	%read{2147483647,-1} %write{1140,1140}
local	int	doGam	%read{2147483647,-1} %write{1141,1141}
local	float	rHue	%read{1148,7175} %write{1142,7175} %derivs
local	float	rSat	%read{1148,7175} %write{1143,7175} %derivs
local	float	rLum	%read{1148,7175} %write{1144,7175} %derivs
local	float	rGam	%read{1148,7175} %write{1145,7175} %derivs
local	int	___818_g	%read{1148,7175} %write{1147,7175} %derivs
local	int	___820_texId	%read{1148,7175} %write{1148,7175}
local	float	___820_tx	%read{1148,7175} %write{1148,7175} %derivs
local	float	___820_ty	%read{1148,7175} %write{1148,7175} %derivs
local	float	___823_m	%read{1148,7175} %write{1148,7175}
local	point	___824_p	%read{1148,7175} %write{1148,7175} %derivs
local	float	___824_rnd	%read{1148,7175} %write{1148,7175}
local	float	___848_txcoords.s	%read{1148,7175} %write{1148,7175} %mystruct{___848_txcoords} %mystructfield{0} %derivs
local	float	___848_txcoords.t	%read{1148,7175} %write{1148,7175} %mystruct{___848_txcoords} %mystructfield{1} %derivs
local	float	___848_txcoords.dsdx	%read{1148,7175} %write{1148,7175} %mystruct{___848_txcoords} %mystructfield{2} %derivs
local	float	___848_txcoords.dtdx	%read{1148,7175} %write{1148,7175} %mystruct{___848_txcoords} %mystructfield{3} %derivs
local	float	___848_txcoords.dsdy	%read{1148,7175} %write{1148,7175} %mystruct{___848_txcoords} %mystructfield{4} %derivs
local	float	___848_txcoords.dtdy	%read{1148,7175} %write{1148,7175} %mystruct{___848_txcoords} %mystructfield{5} %derivs
local	float	___848_txcoords.blur	%read{1148,7175} %write{1148,7175} %mystruct{___848_txcoords} %mystructfield{6} %derivs
local	vector	___859_tbn	%read{1148,7175} %write{1148,7175}
local	point	___871_ps	%read{1148,7175} %write{1148,7175} %derivs
local	point	___871_r	%read{1148,7175} %write{1148,7175} %derivs
local	color	___873_hcol.value	%read{7184,7220} %write{7179,7216} %mystruct{___873_hcol} %mystructfield{0} %derivs
local	float	___873_hcol.norm	%read{7184,7218} %write{7180,7216} %mystruct{___873_hcol} %mystructfield{1} %derivs
local	color	___873_hcol.powerGtoT	%read{7184,7224} %write{7181,7216} %mystruct{___873_hcol} %mystructfield{2} %derivs
local	int	___874_g	%read{7184,7216} %write{7183,7216} %derivs
local	color	___873_corrected	%read{7226,7226} %write{7225,7225} %derivs
local	int	___878_g	%read{7229,7252} %write{7228,7252} %derivs
local	int	___882_g	%read{7257,7267} %write{7256,7267}
local	float	___884_mask	%read{7275,7328} %write{7272,7327} %derivs
local	int	___885_i	%read{7275,7327} %write{7274,7327} %derivs
local	int	___889_j	%read{7275,7327} %write{7275,7327} %derivs
local	float	___890_f	%read{7275,7327} %write{7275,7327} %derivs
local	float	___890_fw	%read{7275,7327} %write{7275,7327} %derivs
local	normal	___891_bumpN	%read{7343,7345} %write{7341,7341}
const	vector	$const1	0 0 0		%read{0,6176} %write{2147483647,-1}
const	int	$const2	0		%read{0,7358} %write{2147483647,-1}
const	int	$const3	1		%read{1,7359} %write{2147483647,-1}
const	int	$const4	2		%read{2,7360} %write{2147483647,-1}
const	int	$const5	3		%read{3,7078} %write{2147483647,-1}
const	point	$const6	0 0 0		%read{8,6859} %write{2147483647,-1}
const	point	$const7	-1 -1 -1		%read{10,7283} %write{2147483647,-1}
const	string	$const8	"initTxParams"		%read{28,29} %write{2147483647,-1}
const	float	$const9	1		%read{42,7318} %write{2147483647,-1}
temp	int	$tmp25	%read{31,31} %write{30,30}
const	string	$const10	"closest"		%read{32,32} %write{2147483647,-1}
temp	int	$tmp26	%read{34,34} %write{33,33}
const	string	$const11	"linear"		%read{35,35} %write{2147483647,-1}
const	string	$const12	"smartcubic"		%read{36,36} %write{2147483647,-1}
temp	int	$tmp27	%read{51,51} %write{50,50}
const	float[2]	$const13	0 0 		%read{53,53} %write{2147483647,-1}
temp	int	$tmp28	%read{2147483647,-1} %write{54,54}
const	string	$const14	"primvar"		%read{54,54} %write{2147483647,-1}
const	string	$const15	"st"		%read{54,54} %write{2147483647,-1}
temp	float	$tmp29	%read{70,169} %write{55,55} %derivs
temp	float	$tmp30	%read{60,65} %write{56,56} %derivs
const	string	$const16	"initTxCoords"		%read{57,6135} %write{2147483647,-1}
const	string	$const17	"invertCoord"		%read{59,6137} %write{2147483647,-1}
temp	float	$tmp31	%read{61,61} %write{60,60} %derivs
temp	float	$tmp32	%read{64,64} %write{61,61} %derivs
temp	float	$tmp33	%read{63,63} %write{62,62} %derivs
temp	float	$tmp34	%read{64,64} %write{63,63} %derivs
const	float	$const18	0		%read{66,7270} %write{2147483647,-1}
temp	float	$tmp35	%read{71,71} %write{70,70} %derivs
temp	float	$tmp36	%read{73,73} %write{72,72} %derivs
temp	float	$tmp37	%read{75,75} %write{74,74} %derivs
temp	float	$tmp38	%read{77,77} %write{76,76} %derivs
temp	float	$tmp39	%read{80,80} %write{78,78} %derivs
temp	float	$tmp40	%read{80,80} %write{79,79} %derivs
temp	int	$tmp41	%read{82,82} %write{81,81}
temp	vector	$tmp42	%read{85,85} %write{83,83} %derivs
temp	vector	$tmp43	%read{85,85} %write{84,84} %derivs
temp	vector	$tmp44	%read{86,86} %write{85,85} %derivs
temp	vector	$tmp45	%read{89,89} %write{87,87} %derivs
temp	vector	$tmp46	%read{89,89} %write{88,88} %derivs
temp	vector	$tmp47	%read{90,90} %write{89,89} %derivs
temp	int	$tmp48	%read{92,92} %write{91,91}
temp	int	$tmp49	%read{96,96} %write{95,95}
temp	float	$tmp50	%read{100,100} %write{99,99}
temp	int	$tmp51	%read{101,101} %write{100,100}
temp	int	$tmp52	%read{102,106} %write{101,105}
temp	int	$tmp53	%read{104,104} %write{103,103}
temp	int	$tmp54	%read{105,105} %write{104,104}
temp	float	$tmp55	%read{109,109} %write{108,108}
temp	int	$tmp56	%read{110,110} %write{109,109}
temp	int	$tmp57	%read{111,115} %write{110,114}
temp	int	$tmp58	%read{113,113} %write{112,112}
temp	int	$tmp59	%read{114,114} %write{113,113}
temp	float	$tmp60	%read{118,118} %write{117,117}
temp	int	$tmp61	%read{119,119} %write{118,118}
temp	float	$tmp62	%read{122,122} %write{121,121}
temp	int	$tmp63	%read{123,123} %write{122,122}
temp	float	$tmp64	%read{126,126} %write{125,125} %derivs
temp	float	$tmp65	%read{128,128} %write{127,127} %derivs
temp	float	$tmp66	%read{135,135} %write{133,133}
temp	float	$tmp67	%read{135,135} %write{134,134}
temp	int	$tmp68	%read{136,136} %write{135,135}
temp	float	$tmp69	%read{141,141} %write{139,139}
temp	float	$tmp70	%read{141,141} %write{140,140}
temp	int	$tmp71	%read{142,142} %write{141,141}
temp	float	$tmp72	%read{149,149} %write{147,147}
temp	float	$tmp73	%read{149,149} %write{148,148}
const	string	$const19	"PxrTextureLookup"		%read{180,6827} %write{2147483647,-1}
const	string	$const20	"firstchannel"		%read{185,6829} %write{2147483647,-1}
const	string	$const21	"blur"		%read{185,6829} %write{2147483647,-1}
temp	float	$tmp74	%read{185,185} %write{184,184} %derivs
const	string	$const22	"missingcolor"		%read{185,6829} %write{2147483647,-1}
const	string	$const23	"interp"		%read{185,6829} %write{2147483647,-1}
const	string	$const24	"width"		%read{185,6829} %write{2147483647,-1}
temp	int	$tmp75	%read{187,187} %write{186,186}
const	string	$const25	"channels"		%read{191,6649} %write{2147483647,-1}
temp	int	$tmp76	%read{193,196} %write{192,195}
temp	int	$tmp77	%read{195,195} %write{194,194}
temp	int	$tmp78	%read{198,198} %write{197,197}
temp	int	$tmp79	%read{199,203} %write{198,202}
temp	int	$tmp80	%read{201,201} %write{200,200}
temp	int	$tmp81	%read{202,202} %write{201,201}
temp	float	$tmp82	%read{205,205} %write{204,204} %derivs
temp	float	$tmp83	%read{207,207} %write{206,206} %derivs
temp	float	$tmp84	%read{209,209} %write{208,208} %derivs
const	string	$const26	"PxrLinearizeSRGB"		%read{212,6672} %write{2147483647,-1}
temp	int	$tmp85	%read{217,217} %write{216,216}
const	string	$const27	"ocioEnabled"		%read{213,6673} %write{2147483647,-1}
temp	int	$tmp86	%read{2147483647,-1} %write{215,215}
const	string	$const28	"user:ocioenabled"		%read{215,6675} %write{2147483647,-1}
temp	int	$tmp87	%read{218,218} %write{217,217}
temp	int	$tmp88	%read{221,234} %write{221,234}
temp	int	$tmp89	%read{219,234} %write{220,234}
temp	float	$tmp90	%read{221,234} %write{221,234}
const	float	$const29	0.0404499993		%read{224,6684} %write{2147483647,-1}
temp	int	$tmp91	%read{221,234} %write{221,234}
temp	float	$tmp92	%read{221,234} %write{221,234} %derivs
const	float	$const30	0.0773993805		%read{227,6687} %write{2147483647,-1}
temp	float	$tmp93	%read{221,234} %write{221,234} %derivs
temp	float	$tmp94	%read{221,234} %write{221,234} %derivs
temp	float	$tmp95	%read{221,234} %write{221,234} %derivs
const	float	$const31	0.0549999997		%read{230,6690} %write{2147483647,-1}
temp	float	$tmp96	%read{221,234} %write{221,234} %derivs
const	float	$const32	0.947867274		%read{231,6691} %write{2147483647,-1}
temp	float	$tmp97	%read{221,234} %write{221,234} %derivs
const	float	$const33	2.4000001		%read{232,6692} %write{2147483647,-1}
const	int	$const34	4		%read{249,7275} %write{2147483647,-1}
const	int	$const35	5		%read{250,6801} %write{2147483647,-1}
const	int	$const36	6		%read{251,6807} %write{2147483647,-1}
const	int	$const37	7		%read{252,7077} %write{2147483647,-1}
const	int	$const38	8		%read{253,6819} %write{2147483647,-1}
const	int	$const39	9		%read{254,6825} %write{2147483647,-1}
temp	point	$tmp98	%read{256,256} %write{255,255} %derivs
temp	point	$tmp99	%read{258,258} %write{257,257} %derivs
temp	point	$tmp100	%read{260,260} %write{259,259} %derivs
temp	point	$tmp101	%read{262,262} %write{261,261}
temp	point	$tmp102	%read{264,264} %write{263,263} %derivs
temp	point	$tmp103	%read{266,266} %write{265,265} %derivs
temp	point	$tmp104	%read{268,268} %write{267,267} %derivs
temp	point	$tmp105	%read{270,270} %write{269,269}
temp	point	$tmp106	%read{272,272} %write{271,271} %derivs
temp	point	$tmp107	%read{274,274} %write{273,273} %derivs
temp	point	$tmp108	%read{276,276} %write{275,275} %derivs
temp	point	$tmp109	%read{278,278} %write{277,277}
temp	point	$tmp110	%read{280,280} %write{279,279} %derivs
temp	point	$tmp111	%read{282,282} %write{281,281} %derivs
temp	point	$tmp112	%read{284,284} %write{283,283} %derivs
temp	point	$tmp113	%read{286,286} %write{285,285}
const	color	$const40	0 0 0		%read{287,7223} %write{2147483647,-1}
temp	int	$tmp122	%read{315,315} %write{302,303}
temp	point	$tmp123.s	%read{2147483647,-1} %write{295,295}
temp	point	$tmp123.t	%read{2147483647,-1} %write{296,296}
temp	point	$tmp123.w	%read{300,300} %write{297,297}
temp	point	$tmp123.r	%read{2147483647,-1} %write{298,298}
const	string	$const41	"validHexTileData"		%read{299,7282} %write{2147483647,-1}
temp	int	$tmp125	%read{301,301} %write{300,300}
temp	int	$tmp126	%read{315,315} %write{312,313}
temp	point	$tmp127.s	%read{2147483647,-1} %write{305,305}
temp	point	$tmp127.t	%read{2147483647,-1} %write{306,306}
temp	point	$tmp127.w	%read{310,310} %write{307,307}
temp	point	$tmp127.r	%read{2147483647,-1} %write{308,308}
temp	int	$tmp129	%read{311,311} %write{310,310}
temp	int	$tmp130	%read{326,326} %write{315,315}
temp	int	$tmp131	%read{326,326} %write{323,324}
temp	point	$tmp132.s	%read{2147483647,-1} %write{316,316}
temp	point	$tmp132.t	%read{2147483647,-1} %write{317,317}
temp	point	$tmp132.w	%read{321,321} %write{318,318}
temp	point	$tmp132.r	%read{2147483647,-1} %write{319,319}
temp	int	$tmp134	%read{322,322} %write{321,321}
temp	int	$tmp135	%read{337,337} %write{326,326}
temp	int	$tmp136	%read{337,337} %write{334,335}
temp	point	$tmp137.s	%read{2147483647,-1} %write{327,327}
temp	point	$tmp137.t	%read{2147483647,-1} %write{328,328}
temp	point	$tmp137.w	%read{332,332} %write{329,329}
temp	point	$tmp137.r	%read{2147483647,-1} %write{330,330}
temp	int	$tmp139	%read{333,333} %write{332,332}
const	int	$const42	10		%read{338,338} %write{2147483647,-1}
const	string	$const43	"getRandomVector"		%read{343,343} %write{2147483647,-1}
temp	int	$tmp140	%read{346,346} %write{345,345}
temp	int	$tmp141	%read{2147483647,-1} %write{347,347}
const	string	$const44	"builtin"		%read{347,347} %write{2147483647,-1}
const	string	$const45	"id"		%read{347,347} %write{2147483647,-1}
temp	int	$tmp142	%read{349,349} %write{348,348} %derivs
temp	int	$tmp143	%read{350,350} %write{349,349} %derivs
temp	int	$tmp144	%read{352,352} %write{351,351}
temp	int	$tmp145	%read{354,354} %write{353,353}
temp	int	$tmp146	%read{355,360} %write{354,359}
temp	int	$tmp147	%read{357,357} %write{356,356}
const	string	$const46	"user:rixhash"		%read{356,356} %write{2147483647,-1}
temp	int	$tmp148	%read{358,358} %write{357,357}
temp	int	$tmp149	%read{359,359} %write{358,358}
const	string	$const47	""		%read{361,361} %write{2147483647,-1}
temp	int	$tmp150	%read{2147483647,-1} %write{362,362}
const	string	$const48	"identifier:name"		%read{362,362} %write{2147483647,-1}
temp	int	$tmp151	%read{364,364} %write{363,363} %derivs
const	int	$const49	65536		%read{364,364} %write{2147483647,-1}
temp	int	$tmp152	%read{365,365} %write{364,364} %derivs
temp	int	$tmp153	%read{367,367} %write{366,366}
const	string	$const50	"PxrMultiTex::getRandomVector : Unknow random source -> %d"		%read{369,369} %write{2147483647,-1}
temp	int	$tmp154	%read{372,372} %write{371,371}
const	string	$const51	"user:procprimid"		%read{371,371} %write{2147483647,-1}
temp	float	$tmp155	%read{375,378} %write{373,373} %derivs
const	float	$const53	65535		%read{375,377} %write{2147483647,-1}
const	string	$const54	"mod"		%read{374,374} %write{2147483647,-1}
temp	float	$tmp156	%read{377,377} %write{376,376} %derivs
temp	float	$tmp157	%read{376,376} %write{375,375} %derivs
temp	float	$tmp158	%read{378,378} %write{377,377} %derivs
temp	int	$tmp159	%read{380,380} %write{379,379}
const	float	$const55	65536		%read{381,6856} %write{2147483647,-1}
temp	int	$tmp160	%read{383,383} %write{382,382}
temp	vector	$tmp161	%read{390,396} %write{386,386} %derivs
temp	float	$tmp162	%read{386,386} %write{385,385} %derivs
const	string	$const56	"rxcellnoise"		%read{387,6846} %write{2147483647,-1}
temp	float	$tmp163	%read{392,392} %write{391,391} %derivs
temp	float	$tmp164	%read{391,391} %write{390,390} %derivs
temp	float	$tmp165	%read{395,395} %write{394,394} %derivs
temp	float	$tmp166	%read{394,394} %write{393,393} %derivs
temp	float	$tmp167	%read{398,398} %write{397,397} %derivs
temp	float	$tmp168	%read{397,397} %write{396,396} %derivs
const	int[4]	$const57	0 0 0 0 		%read{402,6861} %write{2147483647,-1}
const	string	$const58	"rx_cell_noise"		%read{403,6862} %write{2147483647,-1}
const	float[4096]	$const59	0.266395003 0.633545995 0.973936975 0.910194993 0.264102995 0.354968995 0.315187991 0.871517003 0.0166095998 0.229700997 0.948787987 0.383789986 0.297724009 0.723987997 0.269015014 0.209977999 0.588165998 0.171146005 0.401838988 0.687545002 0.512377977 0.566577017 0.736636996 0.636132002 0.501501024 0.211778998 0.748574018 0.351062 0.119280003 0.856431007 0.313887 0.385675013 0.489977002 0.287824988 0.295870006 0.754079998 0.642794013 0.611057997 0.625597 0.65940398 0.840758979 0.574384987 0.0431938991 0.138483003 0.298373014 0.312207997 0.348461002 0.886538029 0.483354986 0.75029999 0.574082971 0.995732009 0.316877007 0.310719997 0.631864011 0.818377972 0.522499979 0.380438 0.169440001 0.641780019 0.236869007 0.483327001 0.0274548996 0.726846993 0.77115202 0.323325008 0.480926991 0.413946003 0.934382975 0.106523 0.0733494982 0.775143027 0.680908024 0.116543002 0.913626015 0.979281008 0.428752005 0.262086987 0.865818977 0.912106991 0.0123869004 0.439902991 0.907839 0.329263985 0.750622988 0.539703012 0.147642002 0.273122996 0.920140982 0.317081988 0.914902985 0.157011002 0.800409019 0.942357004 0.883857012 0.571560979 0.265682995 0.364784002 0.985507011 0.200066 0.471307009 0.0588560998 0.975208998 0.152215004 0.175400004 0.888834 0.131495997 0.604151011 0.150921002 0.99731499 0.516258001 0.163307995 0.43721801 0.424097002 0.49257201 0.187840998 0.963801026 0.640214026 0.460963011 0.883942008 0.957296014 0.375865996 0.0409528017 0.757704973 0.318223 0.924809992 0.329266012 0.583905995 0.289593995 0.31477201 0.783972025 0.760900974 0.37362799 0.759180009 0.913115025 0.549027979 0.648015022 0.0446113013 0.153179005 0.798936009 0.0419264995 0.669438004 0.962243974 0.479144007 0.0935349986 0.454816014 0.666984975 0.0573357008 0.095029898 0.127948999 0.941277981 0.0523258001 0.503814995 0.982230008 0.810030997 0.822037995 0.90704 0.139295995 0.40594399 0.196633995 0.454068005 0.189916 0.957535028 0.827696979 0.949096024 0.870649993 0.376724005 0.597110987 0.915261984 0.529904008 0.396046013 0.95718801 0.199340999 0.358289987 0.436331987 0.292876005 0.813106 0.103317 0.350212008 0.90813601 0.231266007 0.291489989 0.960461974 0.735081017 0.273719996 0.770492017 0.557119012 0.180760995 0.909788013 0.963063002 0.377395004 0.363857001 0.152978003 0.334930003 0.191552997 0.102073997 0.205579996 0.568278015 0.699185014 0.120840997 0.0981817022 0.0952309966 0.0780292973 0.297522992 0.453521013 0.514361978 0.590399981 0.266627014 0.617679 0.940612018 0.174762994 0.848945022 0.232100993 0.135224 0.584025979 0.505822003 0.905716002 0.141145006 0.686582029 0.815505028 0.104207002 0.0639773011 0.179361999 0.257185012 0.398907006 0.370914996 0.359259009 0.604487002 0.93919301 0.0584441014 0.725328028 0.0373747014 0.153675005 0.803358018 0.334897995 0.607195973 0.317719012 0.925297022 0.873822987 0.935397983 0.86590898 0.0485858992 0.784344018 0.0980103016 0.183809996 0.368369997 0.603832006 0.0895266011 0.509513974 0.290414006 0.905031979 0.613721013 0.354391992 0.084393099 0.870907009 0.753298998 0.45530799 0.230166003 0.357784986 0.394501001 0.288610011 0.0831137002 0.431876004 0.442285001 0.886470973 0.766773999 0.0494818017 0.204190999 0.692071021 0.923304975 0.139588997 0.557980001 0.971890986 0.923933029 0.655990005 0.155700997 0.292302012 0.259822011 0.245228007 0.801815987 0.550235987 0.150259003 0.415538013 0.904627979 0.234651998 0.286444992 0.657926977 0.689961016 0.51661098 0.0157123003 0.0844618008 0.805221021 0.0988259986 0.516337991 0.247507006 0.985297024 0.283111006 0.29698801 0.189487994 0.97518301 0.220293 0.329077005 0.533161998 0.192184001 0.253010005 0.189153001 0.347885996 0.545311987 0.448974997 0.593113005 0.347128004 0.999211013 0.743372977 0.762665987 0.903840005 0.978025019 0.0491108 0.561766028 0.667985976 0.565721989 0.577479005 0.752447009 0.37094301 0.676304996 0.268785 0.618448973 0.66160202 0.551896989 0.915437996 0.851090014 0.527078986 0.135730997 0.180167004 0.0602415986 0.327915013 0.433176011 0.249394 0.675800979 0.978488028 0.698369026 0.268914014 0.325616002 0.697580993 0.0122868996 0.0882825032 0.601419985 0.99031198 0.137392998 0.163185999 0.658297002 0.703114986 0.740665019 0.410744995 0.0740574971 0.416970015 0.679530025 0.692507029 0.0785717964 0.231426999 0.607944012 0.929661989 0.758506 0.743676007 0.109829001 0.818746984 0.0715909973 0.54300499 0.068141602 0.747391999 0.521493018 0.766511023 0.0163062997 0.847109973 0.464091003 0.0285931006 0.935392022 0.0655115023 0.0189049002 0.0727853999 0.228698 0.677201986 0.775900006 0.969362974 0.0879471973 0.849958003 0.386332989 0.767476976 0.542464972 0.464904994 0.99890399 0.150408998 0.394566 0.757408977 0.89408499 0.504395008 0.576156974 0.96567601 0.0473999009 0.644298017 0.713068008 0.568893015 0.41080901 0.729373991 0.416002989 0.874899983 0.757966995 0.351395011 0.940411985 0.776871979 0.424180001 0.16911 0.454073995 0.200080007 0.138473004 0.542020977 0.0500381999 0.524806023 0.309498996 0.592503011 0.989709973 0.308402002 0.742911994 0.384276986 0.0658115968 0.636995971 0.888671994 0.641968012 0.602671981 0.936070979 0.286265999 0.315739989 0.504965007 0.697075009 0.0451133996 0.920966983 0.571974993 0.803080022 0.272361994 0.512386978 0.579952002 0.696542025 0.681496978 0.0340264998 0.896623015 0.819970012 0.576048017 0.946660995 0.344776005 0.885546982 0.539164007 0.334486008 0.193948999 0.282074988 0.718761981 0.259759992 0.919071972 0.607433975 0.901728988 0.521744013 0.543505013 0.187995002 0.837482989 0.0484699011 0.885070026 0.882597029 0.969437003 0.457044989 0.685676992 0.241798997 0.969431996 0.265628994 0.938341975 0.650929987 0.299656004 0.834963977 0.470898986 0.87570399 0.781624973 0.81567502 0.761250019 0.320789009 0.150160998 0.955199003 0.602864027 0.868923008 0.214959994 0.521935999 0.476357013 0.116687998 0.0436795019 0.0198624991 0.304683 0.881163001 0.0683325008 0.189752996 0.763759017 0.0377697013 0.646798015 0.449436009 0.279569 0.616231024 0.715066016 0.217911005 0.267159998 0.0147213005 0.0528746992 0.738059998 0.890425026 0.834500015 0.553735018 0.651674986 0.155288994 0.703894973 0.606875002 0.758153021 0.572818995 0.821834981 0.280088007 0.0491758995 0.938522995 0.32376799 0.0690383986 0.243205994 0.204931006 0.137371004 0.43295899 0.968689978 0.175141007 0.0797571987 0.418125987 0.454710007 0.695987999 0.133192003 0.672619998 0.963147998 0.147912994 0.725494981 0.701207995 0.0383381993 0.559994996 0.254942 0.690014005 0.715282977 0.958837986 0.296887994 0.473435998 0.531656027 0.118722998 0.753524005 0.580832005 0.0572457984 0.0772918016 0.649870992 0.300451994 0.282222003 0.787241995 0.733411014 0.250912011 0.962382019 0.813167989 0.669037998 0.417091995 0.509155989 0.80223 0.0897118002 0.472303987 0.95014298 0.815207005 0.173511997 0.988480985 0.375200987 0.428454012 0.67849499 0.0904844031 0.387291998 0.975383997 0.563920021 0.918947995 0.0941065997 0.317443997 0.499781013 0.151352003 0.394735992 0.149651006 0.451804012 0.676958025 0.936892986 0.185214996 0.927869976 0.899275005 0.998382986 0.596908987 0.316367 0.507538974 0.399138987 0.406078994 0.979842007 0.349281996 0.221285 0.153354004 0.337763011 0.596486986 0.581807971 0.0162585992 0.686971009 0.969099998 0.991641998 0.250891 0.888047993 0.0857487991 0.568334997 0.387829006 0.237101004 0.963070989 0.537479997 0.688905001 0.640029013 0.474373013 0.874119997 0.567898989 0.373647988 0.872502983 0.164808005 0.690015018 0.380041987 0.563947022 0.0960939005 0.359883994 0.913228989 0.317378998 0.513238013 0.250992 0.913865983 0.0950466022 0.267251015 0.600836992 0.0641466007 0.258893013 0.851728022 0.952194989 0.344642013 0.420062989 0.340023994 0.581743002 0.383134007 0.877503991 0.270648986 0.0231628008 0.351877004 0.144768998 0.591062009 0.725525975 0.0172720999 0.755869985 0.415540993 0.397314012 0.319817007 0.511635005 0.757197976 0.233045995 0.829014003 0.270435989 0.484037995 0.742879987 0.365482986 0.75128901 0.343717009 0.429628998 0.0101824999 0.195444003 0.381823987 0.35482499 0.615507007 0.721848011 0.936568022 0.998641014 0.599352002 0.207216993 0.0218038 0.95122999 0.351985991 0.612865984 0.676755011 0.369257987 0.368735999 0.0922963023 0.766570985 0.688552976 0.60393101 0.523769021 0.921598971 0.432945013 0.79420501 0.405638009 0.175825 0.159687996 0.156927004 0.519541025 0.589317977 0.167109996 0.714986026 0.971141994 0.521933973 0.330493003 0.692990005 0.458501995 0.329133987 0.292342991 0.665718019 0.350937992 0.243572995 0.0177039001 0.963804007 0.920328021 0.386961013 0.332540005 0.0126243997 0.153532997 0.0210931003 0.616554976 0.677302003 0.942691982 0.0495004989 0.471507013 0.348329991 0.225325003 0.631195009 0.50525701 0.744867027 0.220513001 0.672366023 0.45985201 0.191654995 0.194300994 0.790345013 0.884644985 0.652801991 0.119479001 0.176988006 0.318520993 0.470416993 0.420560986 0.336225003 0.434219986 0.340889007 0.723186016 0.766759992 0.353513002 0.876718998 0.787853003 0.970068991 0.554021001 0.730544984 0.0195693001 0.0255277995 0.0788754001 0.244894996 0.656723022 0.584132016 0.989760995 0.877236009 0.256498992 0.449613988 0.0688909963 0.450800002 0.239959002 0.953535974 0.103602 0.359438002 0.130523995 0.422122985 0.829854012 0.551084995 0.758346975 0.264075011 0.891973972 0.481534004 0.0308344997 0.245487005 0.358251989 0.818687022 0.215555996 0.91227299 0.549233019 0.235126004 0.937801003 0.628108025 0.480019987 0.594524026 0.212240994 0.469781995 0.471760005 0.468739986 0.91939503 0.540651023 0.919538975 0.159354001 0.494186997 0.0231413003 0.518791974 0.62471199 0.445264012 0.348645985 0.175797001 0.203612 0.612721026 0.0677710995 0.68514502 0.643554986 0.313259006 0.0433975011 0.462242991 0.528814971 0.955671012 0.0114757 0.76394099 0.893471003 0.639584005 0.243961006 0.487994999 0.851824999 0.713742018 0.959756017 0.320564985 0.633136988 0.500406981 0.240104005 0.792491019 0.994593978 0.263244987 0.311282992 0.619306028 0.708509028 0.659928977 0.795103014 0.912120998 0.272650003 0.862873971 0.597266018 0.916204989 0.176133007 0.640663981 0.378448009 0.704948008 0.596333981 0.38992399 0.468888015 0.489805996 0.0295075998 0.712849021 0.977801025 0.88133198 0.426591009 0.937556982 0.201896995 0.0597289018 0.437963009 0.442000985 0.852219999 0.432558 0.705245972 0.163503006 0.051863499 0.413755 0.823432028 0.846966028 0.325875998 0.0960822999 0.70984 0.923142016 0.0122873997 0.885972977 0.563805997 0.390735 0.590920985 0.160139993 0.78065902 0.0598088987 0.649945021 0.810167015 0.77265799 0.627746999 0.691498995 0.199248999 0.565303028 0.89339602 0.258978009 0.00326664001 0.335397005 0.111198999 0.435824007 0.0406426005 0.274702013 0.487688005 0.454398006 0.0981341973 0.334654003 0.780273974 0.194215998 0.0444944017 0.70341599 0.206504002 0.930468023 0.267221987 0.597239017 0.521387994 0.427361012 0.377898008 0.581197023 0.0773068964 0.188065007 0.353855014 0.705052972 0.879563987 0.553103983 0.270357013 0.772960007 0.812083006 0.27362299 0.108355999 0.923281014 0.70944798 0.148999006 0.197982997 0.197135001 0.603395998 0.296117008 0.531789005 0.383670002 0.490334004 0.576283991 0.0870862976 0.696838021 0.506751001 0.354308009 0.294077009 0.0281393006 0.781669021 0.671975017 0.609336019 0.858976007 0.860040009 0.963190973 0.564029992 0.739602983 0.516296029 0.834387004 0.51256299 0.328379005 0.108010001 0.620918989 0.251659989 0.81745702 0.769918025 0.449642986 0.0145925004 0.373313993 0.745760977 0.54638201 0.756985009 0.236093998 0.122665003 0.844070971 0.932932019 0.629415989 0.198378995 0.227008 0.657554984 0.980048001 0.898983002 0.266891986 0.839025021 0.759023011 0.230083004 0.403053999 0.498625994 0.746379018 0.237441003 0.0111889001 0.0747578964 0.345450997 0.632107973 0.326418012 0.162908003 0.402025998 0.776060998 0.177500993 0.775340021 0.521821976 0.72388202 0.532324016 0.757915974 0.846547008 0.376394987 0.690847993 0.47596401 0.574774027 0.917855978 0.133518994 0.554822028 0.81683898 0.40041101 0.393846989 0.57586199 0.630493999 0.796900988 0.0744881034 0.376872987 0.0343424007 0.0856769979 0.45163101 0.379792988 0.717785001 0.778048992 0.542701006 0.11981 0.554109991 0.720202029 0.895150006 0.0759316981 0.444083989 0.427473992 0.833848 0.29063201 0.803869009 0.524694979 0.766595006 0.378643006 0.442550987 0.900114 0.933466017 0.259389997 0.30052501 0.327311993 0.835251987 0.931019008 0.124214001 0.909740984 0.307891995 0.158555999 0.995418012 0.759522974 0.538348973 0.713202 0.537572026 0.0810509026 0.833012998 0.0916818008 0.801253021 0.728163004 0.167613998 0.245337993 0.155636996 0.00146108004 0.535969019 0.959506989 0.526156008 0.302565008 0.338149995 0.968707025 0.202678993 0.271614999 0.228098005 0.503203988 0.598927975 0.0633499026 0.434222996 0.723141015 0.973089993 0.742115021 0.881698012 0.968508005 0.501637995 0.420046985 0.681710005 0.0392098017 0.501097977 0.514723003 0.130891994 0.302350998 0.242886007 0.298505008 0.547688007 0.398523003 0.299966007 0.083657898 0.358029008 0.826121986 0.386222988 0.696178973 0.794830024 0.588901997 0.967795014 0.0229272004 0.0921060964 0.566721976 0.0862770975 0.526328981 0.289864004 0.0593673997 0.268444002 0.171561003 0.0278753992 0.770081997 0.591607988 0.709586024 0.809292018 0.0927060992 0.224308997 0.940183997 0.395056993 0.467193991 0.238689005 0.94274497 0.865716994 0.538654983 0.0264033992 0.223747 0.364778012 0.412625998 0.919925988 0.159606993 0.00152808998 0.887719989 0.182533994 0.0936342031 0.454443008 0.268810987 0.61996299 0.744306028 0.328179002 0.888408005 0.915867984 0.356054008 0.658490002 0.507475972 0.0656398013 0.467781991 0.600181997 0.289947987 0.407965988 0.995239019 0.757143021 0.646655023 0.937985003 0.622860014 0.185310006 0.964388013 0.846607029 0.550086975 0.377014011 0.766532004 0.709694982 0.378542006 0.654253006 0.892229021 0.472175986 0.108695 0.161039993 0.0921398029 0.853002012 0.48921901 0.980548024 0.768868983 0.845273018 0.639038026 0.276345015 0.910912991 0.106820002 0.876527011 0.200861007 0.514786005 0.871766984 0.958003998 0.161440998 0.809750974 0.580864012 0.346751004 0.774138987 0.427471012 0.896838009 0.151152998 0.194003001 0.606532991 0.529694974 0.848255992 0.498762012 0.00187152997 0.956951022 0.65980202 0.0940114036 0.809952974 0.149021 0.0745590031 0.578822017 0.994293988 0.713597 0.855167985 0.905206978 0.820416987 0.731694996 0.106068999 0.335202992 0.603461981 0.0640726984 0.49664399 0.413213015 0.644936979 0.843394995 0.187352002 0.0724077001 0.740233004 0.338505 0.266411006 0.346765995 0.868200004 0.114666998 0.845528007 0.870072007 0.0716186017 0.505330026 0.964083016 0.881572008 0.654352009 0.0386418998 0.460393995 0.648645997 0.752238989 0.31556201 0.553852975 0.572655976 0.047257401 0.659922004 0.907859027 0.650718987 0.72399497 0.404502988 0.0639320984 0.368930995 0.247896999 0.251284003 0.441338986 0.988130987 0.589788973 0.707750022 0.334897012 0.457989007 0.822417021 0.180425003 0.328060001 0.894035995 0.685756028 0.292142987 0.775608003 0.340108007 0.330785006 0.236001998 0.988753021 0.0830236971 0.551563978 0.542607009 0.655678988 0.598821998 0.202528998 0.563538015 0.249541 0.92652297 0.968039989 0.313472986 0.295455009 0.215938002 0.564756989 0.736793995 0.204069003 0.154545993 0.444543988 0.538966 0.612533987 0.266961008 0.719390988 0.940594018 0.160997003 0.405146986 0.232738003 0.936604977 0.745254993 0.563521981 0.172607005 0.734008014 0.646546006 0.724170983 0.276614994 0.302224994 0.32299301 0.479142994 0.865763009 0.572534025 0.405667007 0.833804011 0.886007011 0.701120973 0.0497415997 0.450764 0.437914997 0.253809988 0.60530901 0.882458985 0.792775989 0.217843994 0.149419993 0.512166977 0.158437997 0.31041801 0.917313993 0.391175985 0.247023001 0.662568986 0.954698026 0.419629991 0.396577001 0.601243973 0.143801004 0.673192024 0.90346998 0.466794014 0.152335003 0.769232988 0.0393276997 0.558001995 0.603037 0.92533499 0.259122998 0.652778029 0.376098007 0.697037995 0.906588018 0.981408 0.57949698 0.699364007 0.199250996 0.728917003 0.211531997 0.357688993 0.0393345989 0.128846005 0.748865008 0.286356986 0.791414976 0.703562975 0.705986977 0.187992007 0.304807007 0.84978801 0.861182988 0.208276004 0.316581994 0.0135185998 0.977509022 0.355910003 0.571519971 0.580546021 0.28124401 0.830642998 0.233324006 0.657342017 0.527680993 0.139911994 0.638750017 0.107178003 0.839277029 0.838001013 0.836094975 0.0508081988 0.195690006 0.875428975 0.179654002 0.944554985 0.161787003 0.971068978 0.648117006 0.86777401 0.159061 0.952924013 0.717561007 0.0202440992 0.161200002 0.0341431983 0.0337627009 0.138708994 0.390053004 0.605283022 0.719254971 0.671297014 0.43592599 0.952579021 0.328639001 0.963607013 0.0924908966 0.967388988 0.0707852021 0.931766987 0.80539 0.906880021 0.982576013 0.00107978994 0.782310009 0.16223 0.945634007 0.944096029 0.133298993 0.593751013 0.811869979 0.292358994 0.546675026 0.529430985 0.312602997 0.707875013 0.563574016 0.346365988 0.846584976 0.95362699 0.95164901 0.565840006 0.624924004 0.387575001 0.518418014 0.953562975 0.351182997 0.610908985 0.920952022 0.421968013 0.542676985 0.726342022 0.328848004 0.525252998 0.727421999 0.111157998 0.687481999 0.673056006 0.0552540012 0.820780993 0.26680699 0.867124021 0.113140002 0.813483 0.396555007 0.425743997 0.521358013 0.960129023 0.772109985 0.367942989 0.913756013 0.723758996 0.933781981 0.538680017 0.111334004 0.452201009 0.492242992 0.462516993 0.0631102994 0.413195014 0.884485006 0.605786979 0.139537007 0.213332996 0.131040007 0.866958022 0.324490994 0.818521976 0.540014029 0.379745007 0.639303029 0.806822002 0.246868998 0.752443016 0.620303988 0.643423975 0.178186998 0.141662002 0.603552997 0.950296998 0.50960499 0.51730901 0.674055994 0.443387002 0.0559896007 0.785390973 0.895587981 0.548232973 0.247907996 0.958697975 0.961427987 0.132393003 0.564485013 0.100965001 0.345726013 0.695524991 0.967922986 0.670216978 0.514047027 0.507937014 0.0499624014 0.153349996 0.314758986 0.296831012 0.905793011 0.935063004 0.940254986 0.0839805976 0.0767249987 0.543807983 0.0342776999 0.586329997 0.0611172989 0.708334029 0.0297164004 0.117106996 0.493725002 0.925303996 0.665340006 0.741632998 0.88400197 0.626767993 0.874026 0.448487014 0.727732003 0.219751999 0.144012004 0.695656002 0.889970005 0.658059001 0.203593001 0.939931989 0.811408997 0.518351972 0.236763 0.717202008 0.453415006 0.177018002 0.801182985 0.530139983 0.72082603 0.83546102 0.116470002 0.781943023 0.54379499 0.146185994 0.899049997 0.0375192985 0.0714901984 0.564390004 0.779151976 0.95549202 0.191156998 0.653177977 0.403979987 0.918889999 0.87292999 0.547991991 0.614544988 0.762898982 0.206051007 0.818139017 0.70283097 0.0174599998 0.336490989 0.939593971 0.734661996 0.789906025 0.116612002 0.535844982 0.320046008 0.837437987 0.371306002 0.436515003 0.619381011 0.915100992 0.582701027 0.518431008 0.952620029 0.654191017 0.0828204975 0.731772006 0.60968399 0.273977995 0.384950012 0.0136636002 0.192867994 0.257878989 0.561655998 0.807412982 0.0207789 0.76770699 0.625551999 0.723609984 0.785166979 0.962041974 0.663204014 0.519828975 0.751947999 0.779815972 0.0556744002 0.0719935 0.617254019 0.426979989 0.50850898 0.236635 0.34208101 0.0912100971 0.755065978 0.29470101 0.745401978 0.837885976 0.0264730006 0.355085999 0.111864001 0.411422998 0.368748993 0.304731995 0.669301987 0.930405021 0.112144999 0.690081 0.698110998 0.737695992 0.413691014 0.483278006 0.699738979 0.0768954009 0.00310679991 0.451685995 0.856711984 0.0587811992 0.523679972 0.473966002 0.485762 0.0321886986 0.710600972 0.82784301 0.123398997 0.465667009 0.122543998 0.868799984 0.303552985 0.149017006 0.223885998 0.415416986 0.560438991 0.592634976 0.720148027 0.229741007 0.523039997 0.832292974 0.919821978 0.221150994 0.569989979 0.333512992 0.704428971 0.269728005 0.410409003 0.707535982 0.721414983 0.267120004 0.76631701 0.245094001 0.741086006 0.252077997 0.277283013 0.451687008 0.0799209028 0.400682002 0.917353988 0.202464998 0.269481987 0.220906004 0.351480991 0.493368 0.636322975 0.911920011 0.0860036016 0.356471002 0.141661003 0.609043002 0.188764006 0.0614835992 0.830193996 0.758754015 0.394997001 0.534623027 0.0284819007 0.805405021 0.242158994 0.74989599 0.0725255981 0.00847576 0.994991004 0.813611984 0.260553986 0.272273988 0.265298992 0.340474993 0.67295599 0.182652995 0.542940021 0.942438006 0.403558999 0.894420981 0.43580699 0.0398819 0.806340992 0.521811008 0.396353006 0.948001981 0.130853996 0.585117996 0.0094859302 0.961048007 0.343872011 0.404482991 0.495671988 0.372352988 0.209887996 0.737830997 0.122249998 0.282413989 0.746306002 0.117241003 0.0960254967 0.00686055003 0.389515013 0.361324012 0.347335994 0.0624708012 0.543977022 0.890275002 0.00490929 0.947535992 0.784695983 0.440715998 0.987417996 0.591036975 0.962526977 0.383771002 0.539039016 0.0933806971 0.968888998 0.548524976 0.054429099 0.312759995 0.953007996 0.550100982 0.685114026 0.162896007 0.287932009 0.807363987 0.445309013 0.0342379995 0.924603999 0.541334987 0.0410985015 0.314119011 0.902658999 0.388433993 0.376590014 0.446635991 0.278708994 0.381498992 0.394172013 0.0634050965 0.822215021 0.381590009 0.654442012 0.784741998 0.765361011 0.193480998 0.878122985 0.734250009 0.742006004 0.93255198 0.0470100008 0.695012987 0.482652992 0.732123971 0.857909024 0.770583987 0.539487004 0.303218007 0.804822028 0.464091986 0.844552994 0.84592098 0.778210998 0.747211993 0.234355003 0.154800996 0.193848997 0.513064027 0.536300004 0.58802098 0.576469004 0.358514994 0.969610989 0.230911002 0.143257007 0.734972 0.424392015 0.0213801991 0.469220996 0.166398004 0.953931987 0.516231 0.861410975 0.436585009 0.248355001 0.719319999 0.207169995 0.787841976 0.0225389004 0.011992 0.251933992 0.867092013 0.857913017 0.0301444009 0.614304006 0.0922679976 0.184945002 0.808152974 0.605332017 0.721244991 0.396174014 0.181802005 0.0797599033 0.365783989 0.412712991 0.223017007 0.100755997 0.837104976 0.244396999 0.569976985 0.0035027999 0.19833 0.0862087011 0.864914 0.634914994 0.334564 0.584235013 0.842083991 0.122405998 0.606773019 0.854076028 0.374339998 0.473865986 0.711988986 0.404484004 0.0881700963 0.804256976 0.589429021 0.896323025 0.409590006 0.310674012 0.292497009 0.591391027 0.390433997 0.658281028 0.00410436979 0.613451004 0.759037018 0.841208994 0.857847989 0.329014987 0.844712019 0.0561779998 0.415223002 0.709626019 0.691093028 0.749786973 0.293861002 0.533177018 0.872192979 0.900633991 0.387254 0.246533006 0.374500006 0.0992432013 0.65101701 0.462669998 0.903500974 0.240446001 0.358992994 0.313089997 0.551119983 0.651489973 0.904482007 0.941552997 0.309771001 0.908586025 0.555004001 0.0688085034 0.74979502 0.412851989 0.397823006 0.594507992 0.469029993 0.813046992 0.304134011 0.160123006 0.562834024 0.597994983 0.693300009 0.435027003 0.498629004 0.080554001 0.681559026 0.87312901 0.179796994 0.332576007 0.335799009 0.0832977965 0.573022008 0.694791973 0.396387994 0.124141 0.346282005 0.300870001 0.065694198 0.656053007 0.209455997 0.620697975 0.724861979 0.959250987 0.0335502997 0.122685 0.553758979 0.502581 0.935730994 0.85789299 0.662703991 0.498564988 0.45588699 0.356004 0.933591008 0.954515994 0.436558008 0.615150988 0.827645004 0.616355002 0.947726011 0.163443998 0.699653029 0.520748019 0.858235002 0.0960408971 0.644888997 0.204517007 0.396910995 0.710582972 0.860570014 0.606366992 0.33128199 0.585431993 0.565617979 0.364832014 0.708115995 0.119377002 0.867411971 0.643848002 0.977270007 0.530116022 0.142413005 0.433156997 0.886120021 0.0760039985 0.387672991 0.322676986 0.691155016 0.215317994 0.939032018 0.638881028 0.378762007 0.638684988 0.159629002 0.236998007 0.734726012 0.804517984 0.441514999 0.131637007 0.515102029 0.302085012 0.738004029 0.846382976 0.887516975 0.303622007 0.211215004 0.59563297 0.422998011 0.0786276013 0.239481002 0.400267988 0.608743012 0.381893009 0.833424985 0.494863003 0.457897007 0.221099004 0.81753999 0.149051994 0.436417013 0.756573021 0.787932992 0.81517899 0.395258009 0.947562993 0.0521767996 0.129984006 0.752080977 0.493692011 0.261620998 0.267183006 0.79577601 0.999625027 0.113565996 0.683292985 0.303245991 0.324781001 0.278926015 0.726244986 0.403409004 0.518406987 0.126513004 0.0121523002 0.900300026 0.95993799 0.50701499 0.358197987 0.181036994 0.324555993 0.507250011 0.617453992 0.0811287016 0.295183003 0.432633013 0.476386994 0.242744997 0.484809995 0.606370986 0.994826019 0.978501976 0.867992997 0.262008995 0.774277985 0.867617011 0.375575006 0.457571 0.170864001 0.70035702 0.736497998 0.897108972 0.103765003 0.254904002 0.0236219 0.115918003 0.155204996 0.983560026 0.622932971 0.513401985 0.164597005 0.947489023 0.0206518993 0.78205198 0.0286174994 0.315834999 0.214684993 0.505003989 0.558579981 0.699495018 0.111376002 0.553406 0.677996993 0.979367971 0.815415025 0.452275008 0.846985996 0.190990999 0.909846008 0.0178497992 0.891346991 0.646344006 0.914959013 0.995112002 0.901247978 0.93858099 0.111029997 0.0564530008 0.922141016 0.733963013 0.569854975 0.0867383033 0.681451976 0.590506971 0.868789971 0.710069001 0.90634203 0.0834748 0.215074003 0.464922011 0.782970011 0.32644999 0.0183281004 0.460967004 0.305817991 0.833742976 0.913241982 0.152804002 0.0247338992 0.82308799 0.170653999 0.916081011 0.469431996 0.0856124014 0.911193013 0.370680004 0.024193 0.0222234 0.427132994 0.946334004 0.756187022 0.996987998 0.0330720991 0.437638015 0.587495029 0.901862025 0.147707999 0.493836999 0.985337019 0.362782001 0.95875901 0.768306971 0.689230978 0.977087021 0.229273006 0.995049 0.810829997 0.142515004 0.147853002 0.835564017 0.965602994 0.318506986 0.751645029 0.435034007 0.404119015 0.662838995 0.805714011 0.428312004 0.685061991 0.232847005 0.374646008 0.441248 0.229835004 0.407718003 0.878886998 0.817330003 0.309579998 0.0265947003 0.311167002 0.294916987 0.389376014 0.269926012 0.0632231012 0.0786074027 0.247013003 0.292495996 0.0736564994 0.0578433014 0.435010999 0.221508995 0.893408 0.400613993 0.540015996 0.645053029 0.835648 0.94413501 0.307891011 0.641362011 0.372447014 0.992953002 0.874207973 0.747093022 0.434201986 0.104042999 0.154810995 0.313089013 0.92137301 0.464390993 0.339682996 0.232539997 0.759307981 0.729058981 0.502466023 0.822530985 0.807667017 0.749478996 0.115027003 0.88132298 0.807322979 0.55003798 0.102833003 0.700730026 0.95065099 0.642849028 0.345782995 0.78629899 0.586983979 0.653674006 0.427661002 0.959432006 0.646627009 0.301869005 0.706525028 0.0808288977 0.405912012 0.861335993 0.393916994 0.327284992 0.325726986 0.733600974 0.559825003 0.0850344971 0.462660015 0.0622913986 0.907564998 0.270327002 0.811770976 0.0225920994 0.151649997 0.619093001 0.572629988 0.254483014 0.319822997 0.523280978 0.897332013 0.665606022 0.309581012 0.484315991 0.319279999 0.73724103 0.443747014 0.965907991 0.0391101018 0.150271997 0.0467365012 0.445021987 0.0116079999 0.44065401 0.772306979 0.337334991 0.174254 0.332132012 0.422369003 0.636914015 0.394423991 0.329935014 0.907240987 0.206193998 0.352526993 0.0588913001 0.825287998 0.925157011 0.313374013 0.145110995 0.448437989 0.210705996 0.810716987 0.75801897 0.695021987 0.129997998 0.49526 0.138769001 0.0959054977 0.534370005 0.289041013 0.142642006 0.979391992 0.300648987 0.583296001 0.751698971 0.637983978 0.757550001 0.0838309973 0.0603533983 0.394464999 0.47825399 0.390287995 0.301705986 0.684449017 0.742815018 0.360597014 0.509736001 0.667971015 0.673972011 0.654847026 0.116410002 0.884676993 0.465564996 0.874427974 0.57969898 0.595561981 0.369688004 0.71846801 0.691468 0.90405798 0.00750896009 0.834110022 0.883449972 0.30815801 0.417405993 0.635149002 0.946142018 0.174955994 0.718980014 0.00649531977 0.569420993 0.197235003 0.396782994 0.871127009 0.881684005 0.139597997 0.231723994 0.391420007 0.807569027 0.905695975 0.0462668985 0.923978984 0.790373027 0.511830986 0.798407018 0.370072007 0.107394002 0.168096006 0.0885401964 0.79886198 0.0721542016 0.0960491002 0.632970989 0.95560497 0.404206991 0.0503770001 0.590753973 0.350349009 0.225333005 0.309733987 0.356844008 0.794754028 0.506968975 0.753628016 0.665880978 0.38865301 0.893226027 0.897605002 0.780071974 0.700794995 0.803300977 0.826339006 0.624773979 0.593675017 0.338171005 0.423182011 0.963747025 0.445564002 0.591277003 0.0522871017 0.244425997 0.663432002 0.148335993 0.877397001 0.619036019 0.552542984 0.927774012 0.209790006 0.902891994 0.153107002 0.519523978 0.259737015 0.947861016 0.0264935996 0.0133645004 0.613741994 0.415145993 0.906589985 0.511346996 0.195217997 0.60738498 0.314648986 0.0215576999 0.232159004 0.90832299 0.359728009 0.655341029 0.872070014 0.805293024 0.246618003 0.924356997 0.0497188009 0.910049975 0.0726936981 0.927115977 0.529085994 0.625236988 0.854889989 0.738875985 0.528129995 0.00799768046 0.258401006 0.787865996 0.955859005 0.28489399 0.801231027 0.569600999 0.700040996 0.707821012 0.0809481964 0.895259023 0.315205991 0.395597011 0.916817009 0.547366023 0.303920001 0.276544988 0.202706993 0.175990999 0.0818378031 0.449324995 0.100348003 0.131557003 0.359375 0.173041999 0.0586728007 0.888460994 0.798278987 0.913563013 0.627337992 0.326407999 0.921561003 0.885739028 0.114275001 0.877420008 0.170633003 0.915506005 0.447021008 0.870674014 0.623327017 0.527969003 0.765932977 0.938533008 0.923565984 0.682748973 0.485899001 0.227485999 0.959294021 0.688606024 0.403477013 0.0411320999 0.137931004 0.503825009 0.172689006 0.497307003 0.676865995 0.231361002 0.385767996 0.475145012 0.144924998 0.0131059997 0.801554024 0.0664855987 0.898845017 0.91582799 0.943904996 0.0694776997 0.831333995 0.390926003 0.940150976 0.454661012 0.918895006 0.706084013 0.39319399 0.842459977 0.388832986 0.879094005 0.0699461997 0.348127007 0.567700028 0.473423004 0.389259011 0.705631018 0.977247 0.561948001 0.202938005 0.654114008 0.793309987 0.588706017 0.129259005 0.938233972 0.601812005 0.930813015 0.00471981987 0.500657022 0.846641004 0.948625028 0.570133984 0.677976012 0.339551002 0.510285974 0.132636994 0.258444995 0.216370001 0.525830984 0.100906 0.605202973 0.404924005 0.170852005 0.95332998 0.972624004 0.64427501 0.342588991 0.678255022 0.621522009 0.904537022 0.881192982 0.275635988 0.697847009 0.469898999 0.404895008 0.63608098 0.0717113018 0.335707992 0.640801013 0.572368026 0.182348996 0.589425981 0.142501995 0.860324979 0.928977013 0.652787983 0.992960989 0.187423006 0.86915803 0.518791974 0.288327992 0.474359989 0.923716009 0.459179997 0.427689999 0.896340013 0.103455 0.770280004 0.574595988 0.724977016 0.674817026 0.455789 0.000612734992 0.372664005 0.925688028 0.405508012 0.00874562003 0.997399986 0.741216004 0.649546981 0.569768012 0.92356497 0.238973007 0.712270021 0.783890009 0.167950004 0.365058005 0.776850998 0.355372995 0.234216005 0.295643002 0.643701017 0.708576024 0.219359994 0.102880999 0.136265993 0.115699999 0.206336007 0.906545997 0.690295994 0.931312978 0.581363022 0.146084994 0.931926012 0.95402801 0.0717732012 0.33743301 0.962773025 0.0691727027 0.0786492005 0.612320006 0.638939977 0.00221436005 0.851293027 0.351209998 0.786104023 0.0192431007 0.716268003 0.562955976 0.374615997 0.950483978 0.858599007 0.0183169991 0.659060001 0.0779590979 0.121197999 0.795325994 0.193660006 0.32753399 0.701871991 0.883956015 0.258846998 0.283235013 0.0300407 0.190772995 0.237262994 0.101814002 0.528205991 0.200036004 0.170986995 0.606854975 0.812355995 0.809926987 0.609070003 0.663649023 0.161137 0.395173997 0.682892025 0.877404988 0.958130002 0.0575078987 0.827889025 0.816729009 0.0758247972 0.486948997 0.89468801 0.197023004 0.282274991 0.0883475989 0.524556994 0.984147012 0.972302973 0.783405006 0.267381996 0.00234391005 0.974177003 0.50464499 0.104157999 0.502382994 0.704680979 0.275144011 0.109238997 0.517036974 0.0850709975 0.718308985 0.180685997 0.246207997 0.113482997 0.863578022 0.123613 0.0716124997 0.921086013 0.951502025 0.88834101 0.996910989 0.438450992 0.78302902 0.193933994 0.720725 0.871376991 0.718491018 0.704873025 0.843680024 0.501896024 0.972254992 0.846023977 0.476072997 0.476900011 0.950182021 0.978456974 0.181582004 0.225326002 0.0876955017 0.698619008 0.310396999 0.806003988 0.879306018 0.556604981 0.919487 0.74288398 0.680217981 0.991099 0.663969994 0.631720006 0.879441023 0.660880983 0.0701700971 0.662469983 0.854815006 0.790895998 0.533846974 0.573306978 0.495768011 0.377528012 0.0752025023 0.468023002 0.223552004 0.551276028 0.944922984 0.173733994 0.529731989 0.126505002 0.399060011 0.617428005 0.825124025 0.70945698 0.423431993 0.704429984 0.266061991 0.342918992 0.447313994 0.946280003 0.334017992 0.111284003 0.577998996 0.213459 0.772165 0.648168981 0.875928998 0.626980007 0.439065009 0.409776002 0.200286001 0.93483299 0.787303984 0.275489002 0.402855992 0.0108556999 0.826763988 0.347779006 0.184588999 0.35649699 0.474285007 0.58364898 0.973924994 0.299409002 0.29310599 0.397356987 0.00383896008 0.559167981 0.740275025 0.45115301 0.505447984 0.0742935017 0.562435985 0.0834472999 0.287752002 0.334601015 0.731616974 0.163681999 0.961580992 0.170681998 0.573458016 0.161866993 0.105515003 0.360762 0.437355995 0.508370996 0.371618003 0.264120996 0.856149971 0.556207001 0.620616972 0.330435008 0.139855996 0.594542027 0.62984401 0.432962 0.991899014 0.633683026 0.992129982 0.732173979 0.0848354995 0.497577995 0.806466997 0.647271991 0.581026018 0.0942199007 0.981872976 0.312642008 0.257901996 0.943454027 0.483323991 0.831359982 0.105320998 0.588838995 0.192121997 0.542676985 0.0972094983 0.563739002 0.806797981 0.953360021 0.119946003 0.427415013 0.283794999 0.259802014 0.0219573006 0.913637996 0.692764997 0.0138558997 0.547321022 0.684894979 0.746029973 0.632157028 0.182473004 0.552497029 0.279428989 0.763499022 0.646717012 0.261301994 0.0761412978 0.904618979 0.204756007 0.559464991 0.735978007 0.310077012 0.148304 0.92809999 0.85275501 0.245514005 0.491838992 0.659552991 0.198872998 0.611784995 0.0869679973 0.482668012 0.871587992 0.108925 0.396306008 0.564351976 0.122781001 0.943628013 0.249247 0.868811011 0.575784981 0.431721002 0.421308011 0.855212986 0.195219994 0.0680254996 0.116515003 0.271360993 0.972643971 0.321271002 0.830825984 0.708622992 0.631349027 0.979130983 0.636722028 0.484104007 0.224644005 0.128562003 0.143656 0.423518002 0.740347028 0.230624005 0.906185985 0.611935019 0.339549989 0.302491993 0.176286995 0.462330997 0.246120006 0.42553401 0.331142008 0.821904004 0.857254982 0.752449989 0.677118003 0.0524746999 0.820475996 0.793632984 0.323835999 0.793120027 0.114905 0.154661998 0.501742005 0.746253014 0.133792996 0.138465002 0.230357006 0.358437002 0.267026007 0.37401399 0.78195399 0.0073731998 0.60463798 0.688139975 0.619307995 0.944187999 0.990631998 0.79559499 0.406518996 0.236751005 0.221129 0.737659991 0.0586557984 0.0783839002 0.49011001 0.735773981 0.130859002 0.310586005 0.529407024 0.454694003 0.103706002 0.644311011 0.609356999 0.605448008 0.390565008 0.743148983 0.743912995 0.620922029 0.101585999 0.0109393997 0.994935989 0.883539975 0.0183125995 0.599574029 0.571680009 0.637619972 0.543761015 0.562312007 0.433214992 0.950280011 0.799063981 0.654344022 0.687940001 0.857719004 0.732728004 0.178050995 0.593492985 0.863586009 0.488635987 0.122900002 0.318280995 0.592342019 0.76721102 0.927636981 0.197790995 0.157775998 0.670786977 0.941703975 0.778698027 0.772373021 0.952642977 0.773633003 0.655912995 0.970956028 0.373207003 0.227593005 0.608576 0.916967988 0.789905012 0.0417911001 0.867247999 0.588968992 0.696134984 0.555188 0.446687996 0.428862989 0.733237982 0.0401809998 0.292448997 0.221874997 0.163081005 0.610729992 0.814216971 0.930290997 0.538366973 0.0120077999 0.0880670026 0.209153995 0.953710973 0.866765022 0.981526971 0.90635401 0.640398026 0.637440026 0.877309978 0.0136046 0.865032971 0.485886008 0.930572987 0.654938996 0.527677 0.797819972 0.243908003 0.223811999 0.353008002 0.690595984 0.652674973 0.0862466991 0.730777025 0.945124984 0.308122009 0.893857002 0.555854976 0.122339003 0.824149013 0.0942220986 0.134347007 0.912216008 0.303375989 0.088057898 0.77898097 0.28490299 0.994412005 0.419378012 0.922343016 0.871722996 0.432983011 0.787375987 0.357609004 0.363555998 0.442315012 0.885285974 0.161375999 0.68622297 0.109099001 0.514383972 0.376819015 0.761774004 0.600630999 0.107594997 0.706898987 0.908752978 0.00145291002 0.26275301 0.0310916007 0.825601995 0.356974989 0.165437996 0.737818003 0.660351992 0.253495991 0.516798019 0.945254982 0.247907996 0.936177015 0.867597997 0.119631 0.369159997 0.654973984 0.477239996 0.732715011 0.0972890034 0.362526 0.894092023 0.783511996 0.471625 0.408475995 0.160329998 0.233399004 0.00910731964 0.267926008 0.940298021 0.917859972 0.26937899 0.203051999 0.948952019 0.0949803963 0.560027003 0.114390001 0.832798004 0.220378995 0.367886007 0.349595994 0.165634006 0.615794003 0.285773009 0.0332312994 0.735424995 0.654932976 0.688205004 0.212665007 0.387647986 0.78549403 0.575191975 0.28174001 0.569006026 0.0468169004 0.690216005 0.729336023 0.280216008 0.699322999 0.997262001 0.220514998 0.61718303 0.266640991 0.423566014 0.566134989 0.361620992 0.983592987 0.680525005 0.194418997 0.203971997 0.0484105013 0.54401499 0.369605988 0.664205015 0.829788029 0.402837008 0.39963001 0.484721005 0.0910425037 0.612294972 0.872368991 0.876537025 0.187487006 0.154109001 0.445542991 0.234303996 0.844323993 0.174879 0.514519989 0.543648005 0.172141001 0.735035002 0.160831004 0.438782007 0.158601001 0.726966023 0.800402999 0.142194003 0.407490999 0.994822025 0.346166998 0.455900997 0.538837016 0.715772986 0.120105997 0.368624985 0.118610002 0.519735992 0.853344977 0.209652007 0.132030994 0.725714028 0.0861890987 0.319518 0.879823029 0.531732023 0.553821981 0.724147022 0.706610978 0.0683422014 0.267794997 0.878751993 0.803376973 0.428626001 0.317532986 0.961978018 0.155591995 0.117936 0.104172997 0.56308198 0.112758003 0.450338989 0.0189836994 0.651593983 0.166112006 0.139090002 0.0202188995 0.284722 0.658825994 0.873564005 0.494374007 0.790857017 0.599277973 0.580563009 0.110375002 0.479101002 0.112295002 0.664197028 0.203247994 0.818906009 0.732538998 0.471042991 0.697658002 0.535916984 0.899667978 0.0151914004 0.497895002 0.0552602001 0.133128002 0.602066994 0.618342996 0.245885 0.052406501 0.637326002 0.897478998 0.218518004 0.776416004 0.917698026 0.503239989 0.435241997 0.791262984 0.99761498 0.226098999 0.390540987 0.578177989 0.336474001 0.869642019 0.69047302 0.000671559013 0.0728897974 0.509379029 0.733210981 0.543932021 0.207037002 0.269127995 0.443601012 0.222228006 0.767022014 0.498861015 0.355356008 0.369089007 0.117204003 0.601240993 0.421496004 0.754530013 0.49871999 0.640013993 0.53094703 0.416418999 0.143253997 0.966188014 0.207681 0.140869007 0.192287996 0.598222017 0.71904701 0.528761983 0.467864007 0.40952 0.529433012 0.54075402 0.918899 0.262643993 0.0846861005 0.125936002 0.531772017 0.528286994 0.348163992 0.298794001 0.0271483008 0.70352 0.667882979 0.144352004 0.304760993 0.0893787965 0.898882985 0.803480983 0.729393005 0.429829001 0.219899997 0.872646987 0.396017998 0.427581012 0.0135164 0.588304996 0.0258026998 0.732563019 0.117067002 0.493665993 0.142083004 0.646499991 0.0344199985 0.0609815009 0.909144998 0.119106002 0.186917007 0.440916985 0.647392988 0.535081029 0.739710987 0.674540997 0.238600999 0.407593995 0.818894029 0.543362021 0.496973008 0.717776 0.346843004 0.226365998 0.147605002 0.566742003 0.0990128964 0.543622971 0.994323015 0.112529002 0.131927997 0.0201255996 0.845091999 0.248995006 0.513791978 0.987174988 0.895494998 0.548211992 0.0481568016 0.804639995 0.667317986 0.235073999 0.245556995 0.314711004 0.770155013 0.985267997 0.989252985 0.00875579007 0.392861009 0.808146 0.55211699 0.889833987 0.525922 0.898959994 0.1162 0.673528016 0.465701997 0.215213001 0.217150003 0.460025012 0.32774201 0.349079013 0.480150998 0.172833994 0.598074019 0.993942976 0.160009995 0.493568987 0.542155027 0.208166003 0.298209012 0.209472999 0.443239987 0.543766022 0.524183989 0.213395 0.529034019 0.513436973 0.222150996 0.921895027 0.321583003 0.774267972 0.811729014 0.847504973 0.673228979 0.927928984 0.521032989 0.138931006 0.143141001 0.738183022 0.598955989 0.470883012 0.0872616023 0.0791067034 0.643718004 0.68533498 0.0730493963 0.803726971 0.178904995 0.615203977 0.0118938005 0.477113992 0.824676991 0.455134004 0.0208803006 0.348861009 0.668528974 0.549914002 0.862298012 0.890681028 0.471809 0.183881 0.664949 0.283538997 0.0313855 0.338178009 0.211467996 0.552417994 0.477108002 0.354609013 0.290600985 0.0760641024 0.825492978 0.37786299 0.155171007 0.469209999 0.0631979033 0.228220001 0.272938013 0.242101997 0.843424022 0.284830987 0.719215989 0.668102026 0.739965022 0.740096986 0.0169628002 0.408495009 0.290010989 0.879261017 0.299174994 0.761820018 0.0631411001 0.964124024 0.0453590006 0.0945265964 0.302302003 0.256826997 0.646945 0.779410005 0.611436009 0.937546015 0.855473995 0.436928004 0.315407991 0.0106450999 0.906139016 0.378605992 0.238865003 0.179076001 0.620707989 0.0822898 0.463907003 0.339924991 0.750391006 0.203872994 0.0800212994 0.767354012 0.612367988 0.370032012 0.646615028 0.911543012 0.131852001 0.709756017 0.875666976 0.177211002 0.80428201 0.177968994 0.434038013 0.451227009 0.957379997 0.0454736985 0.388772994 0.812853992 0.482401997 0.704181015 0.823499024 0.388541013 0.0827867016 0.0623641983 0.567616999 0.703495026 0.144654006 0.0315239988 0.0434198007 0.895044982 0.235396996 0.123441003 0.662400007 0.847764015 0.493472993 0.309013993 0.759307027 0.625325024 0.0187701993 0.634975016 0.802537024 0.823053002 0.812943995 0.236573994 0.274280012 0.770323992 0.282047987 0.663052022 0.583177984 0.764450014 0.367233008 0.406675994 0.152990997 0.450019985 0.46904099 0.720606983 0.153514996 0.613695025 0.752130985 0.196934998 0.508740008 0.987528026 0.320376009 0.171139002 0.835291982 0.813848972 0.480154008 0.594600022 0.439173996 0.498923987 0.229574993 0.241711006 0.32197699 0.0425187983 0.478285015 0.596256018 0.812843025 0.760334015 0.259308994 0.396019995 0.524784029 0.626541972 0.802697003 0.677775025 0.0765616 0.271737009 0.398382008 0.230076 0.885432005 0.150512993 0.427011013 0.394172013 0.138041005 0.747386992 0.565311015 0.973334014 0.561236024 0.0454647988 0.567933977 0.000409795 0.544389009 0.797508001 0.242120996 0.866366029 0.840026975 0.720405996 0.462621987 0.652869999 0.480740011 0.721930981 0.0488895997 0.00552337011 0.348473012 0.851585984 0.683297992 0.425033987 0.123323001 0.081679903 0.655111015 0.00875512045 0.232192993 0.0821217 0.402927011 0.370234996 0.829508007 0.968237996 0.343567997 0.390744001 0.0137026003 0.911502004 0.391153991 0.558090985 0.709010005 0.633274019 0.424457014 0.54903698 0.353680015 0.887079 0.201906994 0.834420025 0.609009981 0.25079599 0.839942992 0.957482994 0.102381997 0.523240983 0.38251701 0.225705996 0.604920983 0.0376277007 0.234460995 0.837113976 0.119749002 0.637387991 0.207349002 0.949258029 0.605624974 0.550917029 0.340002 0.619328022 0.462419003 0.731155992 0.177420005 0.171428993 0.36443001 0.601876974 0.720466018 0.718110025 0.488956004 0.922372997 0.552529991 0.0979655012 0.173169002 0.392473996 0.0554482006 0.275550991 0.915714979 0.437965006 0.501257002 0.520636022 0.475593001 0.735718012 0.357751012 0.59534198 0.373106003 0.565100014 0.54460001 0.978730977 0.116016999 0.88460201 0.598058999 0.578436017 0.615756989 0.775479019 0.749866009 0.980186999 0.377355009 0.470331997 0.698297977 0.866311014 0.392704993 0.250827998 0.964276016 0.565873981 0.643302023 0.0197247006 0.841425002 0.559017003 0.457690001 0.342682004 0.0796535984 0.933282971 0.078400299 0.43740499 0.528625011 0.451505989 0.00250448007 0.073224999 0.430236995 0.118522003 0.957826972 0.0282963999 0.696958005 0.57358402 0.803775012 0.446824014 0.553771019 0.181131005 0.917155981 0.252068996 0.0474415012 0.309861004 0.502897024 0.0117180003 0.875734985 0.146199003 0.0314427018 0.717159986 0.705215991 0.489133 0.0598421991 0.784870028 0.422414988 0.138243005 0.222275004 0.95104003 0.589748979 0.224778995 0.0242650993 0.0199858006 0.343300998 0.982092023 0.0482821018 0.0402589999 0.555675983 0.85205698 0.487082988 0.109448001 0.0331878997 0.404238999 0.361517012 0.0806294009 0.714100003 0.864413977 0.0923473984 0.589834988 0.0106130997 0.123790003 0.306995004 0.715829015 0.612923026 0.366836995 0.500698984 0.0353377014 0.505078971 0.722974002 0.986378014 0.0948280022 0.947753012 0.0106429998 0.114813998 0.29105401 0.992735028 0.163095996 0.331313014 0.548411012 0.0151532004 0.818395972 0.657859027 0.0483409986 0.222635001 0.0193755999 0.128969997 0.936734974 0.883790016 0.221318007 0.526569009 0.894402981 0.345108002 0.833563983 0.610231996 0.958029985 0.200400993 0.110932 0.99336803 0.70547998 0.833905995 0.979745984 0.800307989 0.781657994 0.990388989 0.915121973 0.072712101 0.983124018 0.0782177001 0.404024988 0.531535029 0.0933708027 0.222420007 0.189393997 0.141711995 0.445055008 0.208770007 0.270682007 0.381790012 0.0925592035 0.492000014 0.908358991 0.98696202 0.837108016 0.741922975 0.597194016 0.795138001 0.942323983 0.708126009 0.788505971 0.647804022 0.54203099 0.768252015 0.448112011 0.323689997 0.758641005 0.363234013 0.396402001 0.741765022 0.441451013 0.80042702 0.273299992 0.534821987 0.0228470992 0.462693989 0.676533997 0.467902005 0.671464026 0.947215974 0.849691987 0.764023006 0.439215988 0.758050978 0.750985026 0.276324004 0.499974012 0.348179013 0.0714624003 0.442297012 0.0563049987 0.85996902 0.0901011005 0.598336995 0.628220975 0.538213015 0.922025979 0.38686201 0.901446998 0.318428993 0.128627002 0.342898011 0.118855 0.401928008 0.877719998 0.141701996 0.864621997 0.554255009 0.609604001 0.53608501 0.501470983 0.459295988 0.300107986 0.940687001 0.217346996 0.0510929003 0.217012003 0.717320025 0.399271995 0.288473994 0.159618005 0.455576986 0.148442999 0.249718994 0.0539136007 0.776664019 0.787931979 0.975939989 0.163525999 0.689378023 0.294369012 0.292153001 0.0322766006 0.413224012 0.694081008 0.909996986 0.554925978 0.558701992 0.464251995 0.164531007 0.094787702 0.965722978 0.623826981 0.394896001 0.906409979 0.841172993 0.445989013 0.123421997 0.558493972 0.845260978 0.41189599 0.718110979 0.300837994 0.56033802 0.967830002 0.354750991 0.337002009 0.755761027 0.33069101 0.500527978 0.445140004 0.625060022 0.792680979 0.477416009 0.0382836983 0.486761987 0.387412995 0.593209982 0.045463901 0.85166502 0.757740021 0.140251994 0.817387998 0.381567001 0.535147011 0.723797977 0.222739995 0.981136024 0.84721899 0.781234026 0.826397002 0.25911501 0.499345005 0.127234995 0.819453001 0.467175007 0.481985986 0.156454995 0.222936004 0.812677026 0.656982005 0.668075979 0.437736988 0.449663013 0.145492002 0.476020992 0.936424971 0.532904983 0.0692308992 0.981889009 0.384570003 0.826970994 0.122139998 0.201958001 0.208537996 0.657288015 0.925755978 0.431279004 0.638423979 0.772975028 0.212513 0.464819998 0.0320900008 0.711857021 0.592055023 0.851543009 0.179031998 0.0740410015 0.00799787976 0.401968002 0.886717975 0.664979994 0.0700438991 0.324456006 0.114643998 0.215535998 0.800477028 0.0510682985 0.748440981 0.869708002 0.0329568982 0.133011997 0.696678996 0.155096993 0.334969997 0.905216992 0.812385023 0.260726005 0.336495996 0.450807989 0.0337007008 0.549008012 0.915629029 0.0657906979 0.260865986 0.507683992 0.91733402 0.439898014 0.581725001 0.92533201 0.841866016 0.468443006 0.590312004 0.911909997 0.792899013 0.704954982 0.127445996 0.593375027 0.756024003 0.875886977 0.463082999 0.78898102 0.00889910012 0.159761995 0.944078028 0.343869001 0.0649786964 0.756462991 0.604595006 0.401475012 0.207270995 0.638294995 0.950483024 0.122900002 0.704086006 0.211348996 0.630582988 0.621420026 0.651247025 0.212308004 0.546751022 0.493113011 0.680751026 0.137062997 0.405023009 0.473650008 0.842019022 0.532468975 0.0670249984 0.598042011 0.408356011 0.530107975 0.387023002 0.417255014 0.689868987 0.331101 0.761124015 0.754848003 0.0875632986 0.365718991 0.156323001 0.294833988 0.00401392998 0.106804997 0.417733997 0.708100021 0.318154007 0.0483171009 0.329519987 0.969401002 0.260625005 0.876271009 0.462513 0.941375971 0.0133338002 0.867536008 0.415026009 0.855351985 0.400005013 0.482051015 0.453395009 0.808360994 0.0121587999 0.840417981 0.225615993 0.702027977 0.171517998 0.986739993 0.45687601 0.25908199 0.352459013 0.613198996 0.553915977 0.356472999 0.720004022 0.971650004 0.0645724982 0.0381584018 0.0199666992 0.394091994 0.00755904987 0.280591995 0.270363003 0.470072001 0.221967995 0.283697009 0.33760801 0.636994004 0.139048994 0.737613022 0.119044997 0.592444003 0.545974016 0.131203994 0.432861 0.771589994 0.833231986 0.604380012 0.758329988 0.290109009 0.863461018 0.110788003 0.903307021 0.417376995 0.467260987 0.623311996 0.389026999 0.531834006 0.661469996 0.408993989 0.92592603 0.669028997 0.689585984 0.196288005 0.139101997 0.911553979 0.479984999 0.476709992 		%read{404,6863} %write{2147483647,-1}
const	int[4096]	$const60			%read{405,6864} %write{2147483647,-1}
temp	int	$tmp169	%read{408,408} %write{407,407}
temp	float	$tmp170	%read{410,410} %write{409,409} %derivs
const	float	$const61	9.99999975e-05		%read{410,7164} %write{2147483647,-1}
temp	int	$tmp171	%read{412,412} %write{411,411}
const	float	$const62	-100000000		%read{413,7046} %write{2147483647,-1}
temp	int	$tmp172	%read{414,414} %write{413,413}
temp	int	$tmp173	%read{417,417} %write{416,416} %derivs
const	float	$const63	100000000		%read{418,7051} %write{2147483647,-1}
temp	int	$tmp174	%read{419,419} %write{418,418}
temp	int	$tmp175	%read{424,434} %write{424,434}
temp	int	$tmp176	%read{422,434} %write{423,434}
const	int	$const64	4095		%read{426,7068} %write{2147483647,-1}
temp	int	$tmp177	%read{424,434} %write{424,434} %derivs
temp	int	$tmp178	%read{424,434} %write{424,434} %derivs
temp	int	$tmp179	%read{424,434} %write{424,434} %derivs
temp	int	$tmp180	%read{2147483647,-1} %write{424,434}
temp	int	$tmp181	%read{436,436} %write{435,435}
temp	float	$tmp182	%read{438,438} %write{437,437} %derivs
temp	int	$tmp183	%read{440,440} %write{439,439}
temp	int	$tmp184	%read{442,442} %write{441,441}
temp	int	$tmp185	%read{445,445} %write{444,444} %derivs
temp	int	$tmp186	%read{447,447} %write{446,446}
temp	float	$tmp187	%read{451,451} %write{450,450} %derivs
temp	int	$tmp188	%read{453,453} %write{452,452}
temp	int	$tmp189	%read{455,455} %write{454,454}
temp	int	$tmp190	%read{458,458} %write{457,457} %derivs
temp	int	$tmp191	%read{460,460} %write{459,459}
temp	int	$tmp192	%read{465,479} %write{465,479}
temp	int	$tmp193	%read{463,479} %write{464,479}
temp	int	$tmp194	%read{465,479} %write{465,479} %derivs
temp	int	$tmp195	%read{465,479} %write{465,479} %derivs
temp	int	$tmp196	%read{465,479} %write{465,479} %derivs
temp	int	$tmp197	%read{465,479} %write{465,479} %derivs
temp	float	$tmp198	%read{465,479} %write{465,479} %derivs
temp	int	$tmp199	%read{465,479} %write{465,479} %derivs
temp	int	$tmp200	%read{2147483647,-1} %write{465,479}
temp	int	$tmp201	%read{481,481} %write{480,480}
temp	float	$tmp202	%read{483,483} %write{482,482} %derivs
temp	int	$tmp203	%read{485,485} %write{484,484}
temp	int	$tmp204	%read{487,487} %write{486,486}
temp	int	$tmp205	%read{490,490} %write{489,489} %derivs
temp	int	$tmp206	%read{492,492} %write{491,491}
temp	float	$tmp207	%read{496,496} %write{495,495} %derivs
temp	int	$tmp208	%read{498,498} %write{497,497}
temp	int	$tmp209	%read{500,500} %write{499,499}
temp	int	$tmp210	%read{503,503} %write{502,502} %derivs
temp	int	$tmp211	%read{505,505} %write{504,504}
temp	float	$tmp212	%read{509,509} %write{508,508} %derivs
temp	int	$tmp213	%read{511,511} %write{510,510}
temp	int	$tmp214	%read{513,513} %write{512,512}
temp	int	$tmp215	%read{516,516} %write{515,515} %derivs
temp	int	$tmp216	%read{518,518} %write{517,517}
temp	int	$tmp217	%read{523,541} %write{523,541}
temp	int	$tmp218	%read{521,541} %write{522,541}
temp	int	$tmp219	%read{523,541} %write{523,541} %derivs
temp	int	$tmp220	%read{523,541} %write{523,541} %derivs
temp	int	$tmp221	%read{523,541} %write{523,541} %derivs
temp	int	$tmp222	%read{523,541} %write{523,541} %derivs
temp	int	$tmp223	%read{523,541} %write{523,541} %derivs
temp	int	$tmp224	%read{523,541} %write{523,541} %derivs
temp	float	$tmp225	%read{523,541} %write{523,541} %derivs
temp	int	$tmp226	%read{523,541} %write{523,541} %derivs
temp	int	$tmp227	%read{2147483647,-1} %write{523,541}
temp	int	$tmp228	%read{543,543} %write{542,542}
temp	float	$tmp229	%read{545,545} %write{544,544} %derivs
temp	int	$tmp230	%read{547,547} %write{546,546}
temp	int	$tmp231	%read{549,549} %write{548,548}
temp	int	$tmp232	%read{552,552} %write{551,551} %derivs
temp	int	$tmp233	%read{554,554} %write{553,553}
temp	float	$tmp234	%read{558,558} %write{557,557} %derivs
temp	int	$tmp235	%read{560,560} %write{559,559}
temp	int	$tmp236	%read{562,562} %write{561,561}
temp	int	$tmp237	%read{565,565} %write{564,564} %derivs
temp	int	$tmp238	%read{567,567} %write{566,566}
temp	float	$tmp239	%read{571,571} %write{570,570} %derivs
temp	int	$tmp240	%read{573,573} %write{572,572}
temp	int	$tmp241	%read{575,575} %write{574,574}
temp	int	$tmp242	%read{578,578} %write{577,577} %derivs
temp	int	$tmp243	%read{580,580} %write{579,579}
temp	float	$tmp244	%read{584,584} %write{583,583} %derivs
temp	int	$tmp245	%read{586,586} %write{585,585}
temp	int	$tmp246	%read{588,588} %write{587,587}
temp	int	$tmp247	%read{591,591} %write{590,590} %derivs
temp	int	$tmp248	%read{593,593} %write{592,592}
temp	int	$tmp249	%read{598,620} %write{598,620}
temp	int	$tmp250	%read{596,620} %write{597,620}
temp	int	$tmp251	%read{598,620} %write{598,620} %derivs
temp	int	$tmp252	%read{598,620} %write{598,620} %derivs
temp	int	$tmp253	%read{598,620} %write{598,620} %derivs
temp	int	$tmp254	%read{598,620} %write{598,620} %derivs
temp	int	$tmp255	%read{598,620} %write{598,620} %derivs
temp	int	$tmp256	%read{598,620} %write{598,620} %derivs
temp	int	$tmp257	%read{598,620} %write{598,620} %derivs
temp	int	$tmp258	%read{598,620} %write{598,620} %derivs
temp	int	$tmp259	%read{598,620} %write{598,620} %derivs
temp	float	$tmp260	%read{598,620} %write{598,620} %derivs
temp	int	$tmp261	%read{598,620} %write{598,620} %derivs
temp	int	$tmp262	%read{2147483647,-1} %write{598,620}
const	int	$const65	15		%read{620,7079} %write{2147483647,-1}
temp	float	$tmp263	%read{624,624} %write{621,621} %derivs
temp	float	$tmp264	%read{624,624} %write{622,622} %derivs
temp	float	$tmp265	%read{624,624} %write{623,623} %derivs
const	string	$const66	"cell"		%read{627,7084} %write{2147483647,-1}
temp	vector	$tmp266	%read{627,627} %write{626,626} %derivs
temp	float	$tmp267	%read{626,626} %write{625,625} %derivs
const	vector	$const67	0.5 0.5 0.5		%read{628,879} %write{2147483647,-1}
temp	vector	$tmp269	%read{629,629} %write{628,628} %derivs
const	float	$const68	2		%read{629,7317} %write{2147483647,-1}
temp	vector	$tmp270	%read{630,630} %write{629,629} %derivs
temp	int	$tmp271	%read{632,632} %write{631,631}
temp	vector	$tmp272	%read{640,646} %write{636,636} %derivs
temp	float	$tmp273	%read{635,635} %write{634,634} %derivs
temp	float	$tmp274	%read{636,636} %write{635,635} %derivs
temp	float	$tmp275	%read{642,642} %write{641,641} %derivs
temp	float	$tmp276	%read{641,641} %write{640,640} %derivs
temp	float	$tmp277	%read{645,645} %write{644,644} %derivs
temp	float	$tmp278	%read{644,644} %write{643,643} %derivs
temp	float	$tmp279	%read{648,648} %write{647,647} %derivs
temp	float	$tmp280	%read{647,647} %write{646,646} %derivs
temp	int	$tmp281	%read{658,658} %write{657,657}
temp	float	$tmp282	%read{660,660} %write{659,659} %derivs
temp	int	$tmp283	%read{662,662} %write{661,661}
temp	int	$tmp284	%read{664,664} %write{663,663}
temp	int	$tmp285	%read{667,667} %write{666,666} %derivs
temp	int	$tmp286	%read{669,669} %write{668,668}
temp	int	$tmp287	%read{674,684} %write{674,684}
temp	int	$tmp288	%read{672,684} %write{673,684}
temp	int	$tmp289	%read{674,684} %write{674,684} %derivs
temp	int	$tmp290	%read{674,684} %write{674,684} %derivs
temp	int	$tmp291	%read{674,684} %write{674,684} %derivs
temp	int	$tmp292	%read{2147483647,-1} %write{674,684}
temp	int	$tmp293	%read{686,686} %write{685,685}
temp	float	$tmp294	%read{688,688} %write{687,687} %derivs
temp	int	$tmp295	%read{690,690} %write{689,689}
temp	int	$tmp296	%read{692,692} %write{691,691}
temp	int	$tmp297	%read{695,695} %write{694,694} %derivs
temp	int	$tmp298	%read{697,697} %write{696,696}
temp	float	$tmp299	%read{701,701} %write{700,700} %derivs
temp	int	$tmp300	%read{703,703} %write{702,702}
temp	int	$tmp301	%read{705,705} %write{704,704}
temp	int	$tmp302	%read{708,708} %write{707,707} %derivs
temp	int	$tmp303	%read{710,710} %write{709,709}
temp	int	$tmp304	%read{715,729} %write{715,729}
temp	int	$tmp305	%read{713,729} %write{714,729}
temp	int	$tmp306	%read{715,729} %write{715,729} %derivs
temp	int	$tmp307	%read{715,729} %write{715,729} %derivs
temp	int	$tmp308	%read{715,729} %write{715,729} %derivs
temp	int	$tmp309	%read{715,729} %write{715,729} %derivs
temp	float	$tmp310	%read{715,729} %write{715,729} %derivs
temp	int	$tmp311	%read{715,729} %write{715,729} %derivs
temp	int	$tmp312	%read{2147483647,-1} %write{715,729}
temp	int	$tmp313	%read{731,731} %write{730,730}
temp	float	$tmp314	%read{733,733} %write{732,732} %derivs
temp	int	$tmp315	%read{735,735} %write{734,734}
temp	int	$tmp316	%read{737,737} %write{736,736}
temp	int	$tmp317	%read{740,740} %write{739,739} %derivs
temp	int	$tmp318	%read{742,742} %write{741,741}
temp	float	$tmp319	%read{746,746} %write{745,745} %derivs
temp	int	$tmp320	%read{748,748} %write{747,747}
temp	int	$tmp321	%read{750,750} %write{749,749}
temp	int	$tmp322	%read{753,753} %write{752,752} %derivs
temp	int	$tmp323	%read{755,755} %write{754,754}
temp	float	$tmp324	%read{759,759} %write{758,758} %derivs
temp	int	$tmp325	%read{761,761} %write{760,760}
temp	int	$tmp326	%read{763,763} %write{762,762}
temp	int	$tmp327	%read{766,766} %write{765,765} %derivs
temp	int	$tmp328	%read{768,768} %write{767,767}
temp	int	$tmp329	%read{773,791} %write{773,791}
temp	int	$tmp330	%read{771,791} %write{772,791}
temp	int	$tmp331	%read{773,791} %write{773,791} %derivs
temp	int	$tmp332	%read{773,791} %write{773,791} %derivs
temp	int	$tmp333	%read{773,791} %write{773,791} %derivs
temp	int	$tmp334	%read{773,791} %write{773,791} %derivs
temp	int	$tmp335	%read{773,791} %write{773,791} %derivs
temp	int	$tmp336	%read{773,791} %write{773,791} %derivs
temp	float	$tmp337	%read{773,791} %write{773,791} %derivs
temp	int	$tmp338	%read{773,791} %write{773,791} %derivs
temp	int	$tmp339	%read{2147483647,-1} %write{773,791}
temp	int	$tmp340	%read{793,793} %write{792,792}
temp	float	$tmp341	%read{795,795} %write{794,794} %derivs
temp	int	$tmp342	%read{797,797} %write{796,796}
temp	int	$tmp343	%read{799,799} %write{798,798}
temp	int	$tmp344	%read{802,802} %write{801,801} %derivs
temp	int	$tmp345	%read{804,804} %write{803,803}
temp	float	$tmp346	%read{808,808} %write{807,807} %derivs
temp	int	$tmp347	%read{810,810} %write{809,809}
temp	int	$tmp348	%read{812,812} %write{811,811}
temp	int	$tmp349	%read{815,815} %write{814,814} %derivs
temp	int	$tmp350	%read{817,817} %write{816,816}
temp	float	$tmp351	%read{821,821} %write{820,820} %derivs
temp	int	$tmp352	%read{823,823} %write{822,822}
temp	int	$tmp353	%read{825,825} %write{824,824}
temp	int	$tmp354	%read{828,828} %write{827,827} %derivs
temp	int	$tmp355	%read{830,830} %write{829,829}
temp	float	$tmp356	%read{834,834} %write{833,833} %derivs
temp	int	$tmp357	%read{836,836} %write{835,835}
temp	int	$tmp358	%read{838,838} %write{837,837}
temp	int	$tmp359	%read{841,841} %write{840,840} %derivs
temp	int	$tmp360	%read{843,843} %write{842,842}
temp	int	$tmp361	%read{848,870} %write{848,870}
temp	int	$tmp362	%read{846,870} %write{847,870}
temp	int	$tmp363	%read{848,870} %write{848,870} %derivs
temp	int	$tmp364	%read{848,870} %write{848,870} %derivs
temp	int	$tmp365	%read{848,870} %write{848,870} %derivs
temp	int	$tmp366	%read{848,870} %write{848,870} %derivs
temp	int	$tmp367	%read{848,870} %write{848,870} %derivs
temp	int	$tmp368	%read{848,870} %write{848,870} %derivs
temp	int	$tmp369	%read{848,870} %write{848,870} %derivs
temp	int	$tmp370	%read{848,870} %write{848,870} %derivs
temp	int	$tmp371	%read{848,870} %write{848,870} %derivs
temp	float	$tmp372	%read{848,870} %write{848,870} %derivs
temp	int	$tmp373	%read{848,870} %write{848,870} %derivs
temp	int	$tmp374	%read{2147483647,-1} %write{848,870}
temp	float	$tmp375	%read{874,874} %write{871,871} %derivs
temp	float	$tmp376	%read{874,874} %write{872,872} %derivs
temp	float	$tmp377	%read{874,874} %write{873,873} %derivs
temp	vector	$tmp378	%read{878,878} %write{877,877} %derivs
temp	float	$tmp379	%read{876,876} %write{875,875} %derivs
temp	float	$tmp380	%read{877,877} %write{876,876} %derivs
temp	vector	$tmp382	%read{880,880} %write{879,879} %derivs
temp	vector	$tmp383	%read{881,881} %write{880,880} %derivs
temp	int	$tmp384	%read{883,883} %write{882,882}
temp	int	$tmp385	%read{885,885} %write{884,884}
temp	int	$tmp386	%read{888,888} %write{887,887}
temp	float	$tmp387	%read{895,895} %write{891,891} %derivs
temp	int	$tmp388	%read{907,907} %write{906,906}
temp	float	$tmp389	%read{909,909} %write{908,908} %derivs
temp	int	$tmp390	%read{911,911} %write{910,910}
temp	int	$tmp391	%read{913,913} %write{912,912}
temp	int	$tmp392	%read{916,916} %write{915,915} %derivs
temp	int	$tmp393	%read{918,918} %write{917,917}
temp	int	$tmp394	%read{923,933} %write{923,933}
temp	int	$tmp395	%read{921,933} %write{922,933}
temp	int	$tmp396	%read{923,933} %write{923,933} %derivs
temp	int	$tmp397	%read{923,933} %write{923,933} %derivs
temp	int	$tmp398	%read{923,933} %write{923,933} %derivs
temp	int	$tmp399	%read{2147483647,-1} %write{923,933}
temp	int	$tmp400	%read{935,935} %write{934,934}
temp	float	$tmp401	%read{937,937} %write{936,936} %derivs
temp	int	$tmp402	%read{939,939} %write{938,938}
temp	int	$tmp403	%read{941,941} %write{940,940}
temp	int	$tmp404	%read{944,944} %write{943,943} %derivs
temp	int	$tmp405	%read{946,946} %write{945,945}
temp	float	$tmp406	%read{950,950} %write{949,949} %derivs
temp	int	$tmp407	%read{952,952} %write{951,951}
temp	int	$tmp408	%read{954,954} %write{953,953}
temp	int	$tmp409	%read{957,957} %write{956,956} %derivs
temp	int	$tmp410	%read{959,959} %write{958,958}
temp	int	$tmp411	%read{964,978} %write{964,978}
temp	int	$tmp412	%read{962,978} %write{963,978}
temp	int	$tmp413	%read{964,978} %write{964,978} %derivs
temp	int	$tmp414	%read{964,978} %write{964,978} %derivs
temp	int	$tmp415	%read{964,978} %write{964,978} %derivs
temp	int	$tmp416	%read{964,978} %write{964,978} %derivs
temp	float	$tmp417	%read{964,978} %write{964,978} %derivs
temp	int	$tmp418	%read{964,978} %write{964,978} %derivs
temp	int	$tmp419	%read{2147483647,-1} %write{964,978}
temp	int	$tmp420	%read{980,980} %write{979,979}
temp	float	$tmp421	%read{982,982} %write{981,981} %derivs
temp	int	$tmp422	%read{984,984} %write{983,983}
temp	int	$tmp423	%read{986,986} %write{985,985}
temp	int	$tmp424	%read{989,989} %write{988,988} %derivs
temp	int	$tmp425	%read{991,991} %write{990,990}
temp	float	$tmp426	%read{995,995} %write{994,994} %derivs
temp	int	$tmp427	%read{997,997} %write{996,996}
temp	int	$tmp428	%read{999,999} %write{998,998}
temp	int	$tmp429	%read{1002,1002} %write{1001,1001} %derivs
temp	int	$tmp430	%read{1004,1004} %write{1003,1003}
temp	float	$tmp431	%read{1008,1008} %write{1007,1007} %derivs
temp	int	$tmp432	%read{1010,1010} %write{1009,1009}
temp	int	$tmp433	%read{1012,1012} %write{1011,1011}
temp	int	$tmp434	%read{1015,1015} %write{1014,1014} %derivs
temp	int	$tmp435	%read{1017,1017} %write{1016,1016}
temp	int	$tmp436	%read{1022,1040} %write{1022,1040}
temp	int	$tmp437	%read{1020,1040} %write{1021,1040}
temp	int	$tmp438	%read{1022,1040} %write{1022,1040} %derivs
temp	int	$tmp439	%read{1022,1040} %write{1022,1040} %derivs
temp	int	$tmp440	%read{1022,1040} %write{1022,1040} %derivs
temp	int	$tmp441	%read{1022,1040} %write{1022,1040} %derivs
temp	int	$tmp442	%read{1022,1040} %write{1022,1040} %derivs
temp	int	$tmp443	%read{1022,1040} %write{1022,1040} %derivs
temp	float	$tmp444	%read{1022,1040} %write{1022,1040} %derivs
temp	int	$tmp445	%read{1022,1040} %write{1022,1040} %derivs
temp	int	$tmp446	%read{2147483647,-1} %write{1022,1040}
temp	int	$tmp447	%read{1042,1042} %write{1041,1041}
temp	float	$tmp448	%read{1044,1044} %write{1043,1043} %derivs
temp	int	$tmp449	%read{1046,1046} %write{1045,1045}
temp	int	$tmp450	%read{1048,1048} %write{1047,1047}
temp	int	$tmp451	%read{1051,1051} %write{1050,1050} %derivs
temp	int	$tmp452	%read{1053,1053} %write{1052,1052}
temp	float	$tmp453	%read{1057,1057} %write{1056,1056} %derivs
temp	int	$tmp454	%read{1059,1059} %write{1058,1058}
temp	int	$tmp455	%read{1061,1061} %write{1060,1060}
temp	int	$tmp456	%read{1064,1064} %write{1063,1063} %derivs
temp	int	$tmp457	%read{1066,1066} %write{1065,1065}
temp	float	$tmp458	%read{1070,1070} %write{1069,1069} %derivs
temp	int	$tmp459	%read{1072,1072} %write{1071,1071}
temp	int	$tmp460	%read{1074,1074} %write{1073,1073}
temp	int	$tmp461	%read{1077,1077} %write{1076,1076} %derivs
temp	int	$tmp462	%read{1079,1079} %write{1078,1078}
temp	float	$tmp463	%read{1083,1083} %write{1082,1082} %derivs
temp	int	$tmp464	%read{1085,1085} %write{1084,1084}
temp	int	$tmp465	%read{1087,1087} %write{1086,1086}
temp	int	$tmp466	%read{1090,1090} %write{1089,1089} %derivs
temp	int	$tmp467	%read{1092,1092} %write{1091,1091}
temp	int	$tmp468	%read{1097,1119} %write{1097,1119}
temp	int	$tmp469	%read{1095,1119} %write{1096,1119}
temp	int	$tmp470	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp471	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp472	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp473	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp474	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp475	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp476	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp477	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp478	%read{1097,1119} %write{1097,1119} %derivs
temp	float	$tmp479	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp480	%read{1097,1119} %write{1097,1119} %derivs
temp	int	$tmp481	%read{2147483647,-1} %write{1097,1119}
temp	float	$tmp482	%read{1122,1122} %write{1121,1121} %derivs
const	float	$const69	1223		%read{1123,1123} %write{2147483647,-1}
temp	float	$tmp483	%read{1124,1124} %write{1123,1123} %derivs
temp	int	$tmp484	%read{1126,1129} %write{1125,1128}
temp	int	$tmp485	%read{1128,1128} %write{1127,1127}
temp	int	$tmp486	%read{1130,1133} %write{1129,1132}
temp	int	$tmp487	%read{1132,1132} %write{1131,1131}
temp	int	$tmp488	%read{1134,1137} %write{1133,1136}
temp	int	$tmp489	%read{1136,1136} %write{1135,1135}
temp	int	$tmp490	%read{1148,7175} %write{1148,7175}
temp	int	$tmp491	%read{1146,7175} %write{1147,7175}
temp	point	$tmp492	%read{1148,7175} %write{1148,7175}
temp	int	$tmp494	%read{1148,7175} %write{1148,7175}
temp	int	$tmp495	%read{1148,7175} %write{1148,7175}
temp	float	$tmp496	%read{1148,7175} %write{1148,7175}
temp	point	$tmp497	%read{1148,7175} %write{1148,7175}
temp	int	$tmp498	%read{1148,7175} %write{1148,7175}
temp	point	$tmp499	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp500	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp501	%read{1148,7175} %write{1148,7175}
temp	int	$tmp502	%read{1148,7175} %write{1148,7175}
temp	float	$tmp503	%read{1148,7175} %write{1148,7175}
temp	float	$tmp504	%read{1148,7175} %write{1148,7175}
const	string	$const70	"RixMod"		%read{1172,1455} %write{2147483647,-1}
temp	int	$tmp505	%read{1148,7175} %write{1148,7175}
temp	float	$tmp506	%read{1148,7175} %write{1148,7175}
temp	float	$tmp507	%read{1148,7175} %write{1148,7175}
temp	float	$tmp508	%read{1148,7175} %write{1148,7175}
temp	int	$tmp509	%read{1148,7175} %write{1148,7175}
temp	float	$tmp510	%read{1148,7175} %write{1148,7175}
temp	float	$tmp511	%read{1148,7175} %write{1148,7175}
temp	int	$tmp512	%read{1148,7175} %write{1148,7175}
temp	float	$tmp513	%read{1148,7175} %write{1148,7175}
temp	float	$tmp514	%read{1148,7175} %write{1148,7175}
temp	float	$tmp515	%read{1148,7175} %write{1148,7175}
temp	int	$tmp516	%read{1148,7175} %write{1148,7175}
temp	float	$tmp517	%read{1148,7175} %write{1148,7175}
temp	float	$tmp518	%read{1148,7175} %write{1148,7175}
temp	float	$tmp519	%read{1148,7175} %write{1148,7175}
temp	float	$tmp520	%read{1148,7175} %write{1148,7175}
temp	float	$tmp521	%read{1148,7175} %write{1148,7175}
temp	int	$tmp522	%read{1148,7175} %write{1148,7175}
temp	float	$tmp523	%read{1148,7175} %write{1148,7175}
temp	float	$tmp524	%read{1148,7175} %write{1148,7175}
temp	float	$tmp525	%read{1148,7175} %write{1148,7175}
temp	int	$tmp526	%read{1148,7175} %write{1148,7175}
temp	int	$tmp527	%read{1148,7175} %write{1148,7175}
const	float	$const71	7		%read{1214,1214} %write{2147483647,-1}
temp	float	$tmp528	%read{1148,7175} %write{1148,7175} %derivs
const	float	$const72	3		%read{1215,1215} %write{2147483647,-1}
temp	float	$tmp529	%read{1148,7175} %write{1148,7175} %derivs
const	float	$const73	11		%read{1216,1216} %write{2147483647,-1}
temp	float	$tmp530	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp531	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp532	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp533	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp534	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp535	%read{1148,7175} %write{1148,7175}
temp	float	$tmp536	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp537	%read{1148,7175} %write{1148,7175}
temp	int	$tmp538	%read{1148,7175} %write{1148,7175}
temp	int	$tmp539	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp540	%read{1148,7175} %write{1148,7175}
temp	int	$tmp541	%read{1148,7175} %write{1148,7175}
temp	int	$tmp542	%read{1148,7175} %write{1148,7175}
temp	int	$tmp543	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp544	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp545	%read{1148,7175} %write{1148,7175}
temp	int	$tmp546	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp547	%read{1148,7175} %write{1148,7175}
temp	float	$tmp548	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp549	%read{1148,7175} %write{1148,7175}
temp	int	$tmp550	%read{1148,7175} %write{1148,7175}
temp	int	$tmp551	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp552	%read{1148,7175} %write{1148,7175}
temp	float	$tmp553	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp554	%read{1148,7175} %write{1148,7175}
temp	int	$tmp555	%read{1148,7175} %write{1148,7175}
temp	int	$tmp556	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp557	%read{1148,7175} %write{1148,7175}
temp	int	$tmp558	%read{1148,7175} %write{1148,7175}
temp	int	$tmp559	%read{1148,7175} %write{1148,7175}
temp	int	$tmp560	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp561	%read{1148,7175} %write{1148,7175}
temp	int	$tmp562	%read{1148,7175} %write{1148,7175}
temp	int	$tmp563	%read{1148,7175} %write{1148,7175}
temp	float	$tmp564	%read{1148,7175} %write{1148,7175}
temp	int	$tmp565	%read{1148,7175} %write{1148,7175}
temp	int	$tmp566	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp567	%read{1148,7175} %write{1148,7175}
temp	float	$tmp568	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp569	%read{1148,7175} %write{1148,7175}
temp	int	$tmp570	%read{1148,7175} %write{1148,7175}
temp	int	$tmp571	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp572	%read{1148,7175} %write{1148,7175}
temp	float	$tmp573	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp574	%read{1148,7175} %write{1148,7175}
temp	int	$tmp575	%read{1148,7175} %write{1148,7175}
temp	int	$tmp576	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp577	%read{1148,7175} %write{1148,7175}
temp	float	$tmp578	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp579	%read{1148,7175} %write{1148,7175}
temp	int	$tmp580	%read{1148,7175} %write{1148,7175}
temp	int	$tmp581	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp582	%read{1148,7175} %write{1148,7175}
temp	int	$tmp583	%read{1148,7175} %write{1148,7175}
temp	int	$tmp584	%read{1148,7175} %write{1148,7175}
temp	int	$tmp585	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp586	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp587	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp588	%read{1148,7175} %write{1148,7175}
temp	int	$tmp589	%read{1148,7175} %write{1148,7175}
temp	int	$tmp590	%read{1148,7175} %write{1148,7175}
temp	float	$tmp591	%read{1148,7175} %write{1148,7175}
temp	int	$tmp592	%read{1148,7175} %write{1148,7175}
temp	int	$tmp593	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp594	%read{1148,7175} %write{1148,7175}
temp	float	$tmp595	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp596	%read{1148,7175} %write{1148,7175}
temp	int	$tmp597	%read{1148,7175} %write{1148,7175}
temp	int	$tmp598	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp599	%read{1148,7175} %write{1148,7175}
temp	float	$tmp600	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp601	%read{1148,7175} %write{1148,7175}
temp	int	$tmp602	%read{1148,7175} %write{1148,7175}
temp	int	$tmp603	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp604	%read{1148,7175} %write{1148,7175}
temp	float	$tmp605	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp606	%read{1148,7175} %write{1148,7175}
temp	int	$tmp607	%read{1148,7175} %write{1148,7175}
temp	int	$tmp608	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp609	%read{1148,7175} %write{1148,7175}
temp	float	$tmp610	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp611	%read{1148,7175} %write{1148,7175}
temp	int	$tmp612	%read{1148,7175} %write{1148,7175}
temp	int	$tmp613	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp614	%read{1148,7175} %write{1148,7175}
temp	int	$tmp615	%read{1148,7175} %write{1148,7175}
temp	int	$tmp616	%read{1148,7175} %write{1148,7175}
temp	int	$tmp617	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp618	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp619	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp620	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp621	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp622	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp623	%read{1148,7175} %write{1148,7175}
temp	int	$tmp624	%read{1148,7175} %write{1148,7175}
temp	int	$tmp625	%read{1148,7175} %write{1148,7175}
temp	float	$tmp626	%read{1148,7175} %write{1148,7175}
temp	int	$tmp627	%read{1148,7175} %write{1148,7175}
temp	int	$tmp628	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp629	%read{1148,7175} %write{1148,7175}
const	float	$const74	10000		%read{1453,1453} %write{2147483647,-1}
temp	float	$tmp630	%read{1148,7175} %write{1148,7175}
temp	float	$tmp631	%read{1148,7175} %write{1148,7175}
const	float	$const75	10		%read{1454,1454} %write{2147483647,-1}
temp	int	$tmp632	%read{1148,7175} %write{1148,7175}
temp	float	$tmp633	%read{1148,7175} %write{1148,7175}
temp	float	$tmp634	%read{1148,7175} %write{1148,7175}
temp	float	$tmp635	%read{1148,7175} %write{1148,7175}
temp	int	$tmp636	%read{1148,7175} %write{1148,7175}
const	string	$const76	"PxrMultiTexture: Unknown texture order"		%read{1468,1468} %write{2147483647,-1}
temp	int	$tmp637	%read{1148,7175} %write{1148,7175}
temp	int	$tmp638	%read{1148,7175} %write{1148,7175}
temp	color	$tmp639	%read{1148,7175} %write{1148,7175}
temp	int	$tmp641	%read{1148,7175} %write{1148,7175}
temp	int	$tmp642	%read{1148,7175} %write{1148,7175}
temp	int	$tmp643	%read{1148,7175} %write{1148,7175}
temp	color	$tmp644.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp644.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
const	string	$const77	"hexTileTextureExponents"		%read{1479,1821} %write{2147483647,-1}
const	float	$const78	0.5		%read{1480,7337} %write{2147483647,-1}
const	float	$const80	1024		%read{1480,1822} %write{2147483647,-1}
temp	int	$tmp645	%read{1148,7175} %write{1148,7175}
temp	int	$tmp646	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp647	%read{1148,7175} %write{1148,7175}
temp	int	$tmp648	%read{1148,7175} %write{1148,7175}
temp	int	$tmp649	%read{1148,7175} %write{1148,7175}
temp	float	$tmp650	%read{1148,7175} %write{1148,7175}
temp	int	$tmp651	%read{1148,7175} %write{1148,7175}
temp	float	$tmp652	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp653	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp654	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp655	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp656	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp657	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp658	%read{1148,7175} %write{1148,7175} %derivs
const	color	$const81	0.5 0.5 0.5		%read{1505,7222} %write{2147483647,-1}
temp	color	$tmp660	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp661	%read{1148,7175} %write{1148,7175}
temp	color	$tmp662.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp662.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp663	%read{1148,7175} %write{1148,7175}
temp	int	$tmp664	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp665	%read{1148,7175} %write{1148,7175}
temp	int	$tmp666	%read{1148,7175} %write{1148,7175}
temp	int	$tmp667	%read{1148,7175} %write{1148,7175}
temp	float	$tmp668	%read{1148,7175} %write{1148,7175}
temp	int	$tmp669	%read{1148,7175} %write{1148,7175}
temp	float	$tmp670	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp671	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp672	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp673	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp674	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp675	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp676	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp678	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp679	%read{1148,7175} %write{1148,7175}
temp	color	$tmp680.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp680.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp681	%read{1148,7175} %write{1148,7175}
temp	int	$tmp682	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp683	%read{1148,7175} %write{1148,7175}
temp	int	$tmp684	%read{1148,7175} %write{1148,7175}
temp	int	$tmp685	%read{1148,7175} %write{1148,7175}
temp	float	$tmp686	%read{1148,7175} %write{1148,7175}
temp	int	$tmp687	%read{1148,7175} %write{1148,7175}
temp	float	$tmp688	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp689	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp690	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp691	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp692	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp693	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp694	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp696	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp697	%read{1148,7175} %write{1148,7175}
temp	color	$tmp698.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp698.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp699	%read{1148,7175} %write{1148,7175}
temp	int	$tmp700	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp701	%read{1148,7175} %write{1148,7175}
temp	int	$tmp702	%read{1148,7175} %write{1148,7175}
temp	int	$tmp703	%read{1148,7175} %write{1148,7175}
temp	float	$tmp704	%read{1148,7175} %write{1148,7175}
temp	int	$tmp705	%read{1148,7175} %write{1148,7175}
temp	float	$tmp706	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp707	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp708	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp709	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp710	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp711	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp712	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp714	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp715	%read{1148,7175} %write{1148,7175}
temp	color	$tmp716.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp716.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp717	%read{1148,7175} %write{1148,7175}
temp	int	$tmp718	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp719	%read{1148,7175} %write{1148,7175}
temp	int	$tmp720	%read{1148,7175} %write{1148,7175}
temp	int	$tmp721	%read{1148,7175} %write{1148,7175}
temp	float	$tmp722	%read{1148,7175} %write{1148,7175}
temp	int	$tmp723	%read{1148,7175} %write{1148,7175}
temp	float	$tmp724	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp725	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp726	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp727	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp728	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp729	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp730	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp732	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp733	%read{1148,7175} %write{1148,7175}
temp	color	$tmp734.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp734.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp735	%read{1148,7175} %write{1148,7175}
temp	int	$tmp736	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp737	%read{1148,7175} %write{1148,7175}
temp	int	$tmp738	%read{1148,7175} %write{1148,7175}
temp	int	$tmp739	%read{1148,7175} %write{1148,7175}
temp	float	$tmp740	%read{1148,7175} %write{1148,7175}
temp	int	$tmp741	%read{1148,7175} %write{1148,7175}
temp	float	$tmp742	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp743	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp744	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp745	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp746	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp747	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp748	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp750	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp751	%read{1148,7175} %write{1148,7175}
temp	color	$tmp752.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp752.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp753	%read{1148,7175} %write{1148,7175}
temp	int	$tmp754	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp755	%read{1148,7175} %write{1148,7175}
temp	int	$tmp756	%read{1148,7175} %write{1148,7175}
temp	int	$tmp757	%read{1148,7175} %write{1148,7175}
temp	float	$tmp758	%read{1148,7175} %write{1148,7175}
temp	int	$tmp759	%read{1148,7175} %write{1148,7175}
temp	float	$tmp760	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp761	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp762	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp763	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp764	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp765	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp766	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp768	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp769	%read{1148,7175} %write{1148,7175}
temp	color	$tmp770.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp770.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp771	%read{1148,7175} %write{1148,7175}
temp	int	$tmp772	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp773	%read{1148,7175} %write{1148,7175}
temp	int	$tmp774	%read{1148,7175} %write{1148,7175}
temp	int	$tmp775	%read{1148,7175} %write{1148,7175}
temp	float	$tmp776	%read{1148,7175} %write{1148,7175}
temp	int	$tmp777	%read{1148,7175} %write{1148,7175}
temp	float	$tmp778	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp779	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp780	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp781	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp782	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp783	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp784	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp786	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp787	%read{1148,7175} %write{1148,7175}
temp	color	$tmp788.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp788.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp789	%read{1148,7175} %write{1148,7175}
temp	int	$tmp790	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp791	%read{1148,7175} %write{1148,7175}
temp	int	$tmp792	%read{1148,7175} %write{1148,7175}
temp	int	$tmp793	%read{1148,7175} %write{1148,7175}
temp	float	$tmp794	%read{1148,7175} %write{1148,7175}
temp	int	$tmp795	%read{1148,7175} %write{1148,7175}
temp	float	$tmp796	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp797	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp798	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp799	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp800	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp801	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp802	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp804	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp805	%read{1148,7175} %write{1148,7175}
temp	color	$tmp806.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp806.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp807	%read{1148,7175} %write{1148,7175}
temp	int	$tmp808	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp809	%read{1148,7175} %write{1148,7175}
temp	int	$tmp810	%read{1148,7175} %write{1148,7175}
temp	int	$tmp811	%read{1148,7175} %write{1148,7175}
temp	float	$tmp812	%read{1148,7175} %write{1148,7175}
temp	int	$tmp813	%read{1148,7175} %write{1148,7175}
temp	float	$tmp814	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp815	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp816	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp817	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp818	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp819	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp820	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp822	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp823	%read{1148,7175} %write{1148,7175}
temp	color	$tmp824	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp825	%read{1148,7175} %write{1148,7175}
temp	point	$tmp826.s	%read{2147483647,-1} %write{1148,7175}
temp	point	$tmp826.t	%read{2147483647,-1} %write{1148,7175}
temp	point	$tmp826.w	%read{1148,7175} %write{1148,7175}
temp	point	$tmp826.r	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp828	%read{1148,7175} %write{1148,7175}
temp	int	$tmp829	%read{1148,7175} %write{1148,7175}
temp	color	$tmp830	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp831.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp831.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp832.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp832.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp832.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp832.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp833	%read{1148,7175} %write{1148,7175}
temp	color	$tmp834	%read{1148,7175} %write{1148,7175}
const	string	$const82	"hexTileLookup"		%read{1883,5715} %write{2147483647,-1}
temp	int	$tmp835	%read{1148,7175} %write{1148,7175}
temp	int	$tmp836	%read{1148,7175} %write{1148,7175}
temp	int	$tmp837	%read{1148,7175} %write{1148,7175}
temp	float	$tmp838	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp839	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp840	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp841	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp842	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp843	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp844	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp845	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp846	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp847	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp848	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp849	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp850	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp851	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp852	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp853	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp854	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp855	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp856	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp857	%read{1148,7175} %write{1148,7175}
temp	int	$tmp858	%read{1148,7175} %write{1148,7175}
temp	float	$tmp859	%read{1148,7175} %write{1148,7175}
temp	int	$tmp860	%read{1148,7175} %write{1148,7175}
temp	int	$tmp861	%read{1148,7175} %write{1148,7175}
temp	int	$tmp862	%read{1148,7175} %write{1148,7175}
temp	int	$tmp863	%read{1148,7175} %write{1148,7175}
temp	float	$tmp864	%read{1148,7175} %write{1148,7175}
temp	int	$tmp865	%read{1148,7175} %write{1148,7175}
temp	int	$tmp866	%read{1148,7175} %write{1148,7175}
temp	int	$tmp867	%read{1148,7175} %write{1148,7175}
temp	int	$tmp868	%read{1148,7175} %write{1148,7175}
temp	float	$tmp869	%read{1148,7175} %write{1148,7175}
temp	int	$tmp870	%read{1148,7175} %write{1148,7175}
temp	float	$tmp871	%read{1148,7175} %write{1148,7175}
temp	int	$tmp872	%read{1148,7175} %write{1148,7175}
temp	float	$tmp873	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp874	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp875	%read{1148,7175} %write{1148,7175}
temp	float	$tmp876	%read{1148,7175} %write{1148,7175}
temp	int	$tmp877	%read{1148,7175} %write{1148,7175}
temp	float	$tmp878	%read{1148,7175} %write{1148,7175}
temp	float	$tmp879	%read{1148,7175} %write{1148,7175}
temp	int	$tmp880	%read{1148,7175} %write{1148,7175}
temp	float	$tmp881	%read{1148,7175} %write{1148,7175}
temp	float	$tmp882	%read{1148,7175} %write{1148,7175}
temp	int	$tmp883	%read{1148,7175} %write{1148,7175}
temp	int	$tmp884	%read{1148,7175} %write{1148,7175}
temp	int	$tmp885	%read{1148,7175} %write{1148,7175}
temp	int	$tmp886	%read{1148,7175} %write{1148,7175}
const	string	$const83	"PxrTxMipControls"		%read{2030,6265} %write{2147483647,-1}
temp	int	$tmp887	%read{1148,7175} %write{1148,7175}
temp	float	$tmp888	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp889	%read{1148,7175} %write{1148,7175}
const	string	$const84	"adjust_width"		%read{2041,6276} %write{2147483647,-1}
const	float	$const85	9.99999994e-09		%read{2050,7347} %write{2147483647,-1}
temp	float	$tmp890	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp891	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp892	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp893	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp894	%read{1148,7175} %write{1148,7175}
temp	int	$tmp895	%read{1148,7175} %write{1148,7175}
temp	float	$tmp896	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp897	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp898	%read{1148,7175} %write{1148,7175}
temp	float	$tmp899	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp900	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp901	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp902	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp903	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp904	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp905	%read{2147483647,-1} %write{1148,7175}
const	string	$const86	"context"		%read{2089,6324} %write{2147483647,-1}
const	string	$const87	"reyesGrid"		%read{2089,6324} %write{2147483647,-1}
temp	float	$tmp906	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp907	%read{1148,7175} %write{1148,7175}
temp	int	$tmp908	%read{1148,7175} %write{1148,7175}
temp	int	$tmp909	%read{1148,7175} %write{1148,7175}
temp	int	$tmp910	%read{1148,7175} %write{1148,7175}
temp	int	$tmp911	%read{1148,7175} %write{1148,7175}
temp	int	$tmp912	%read{1148,7175} %write{1148,7175}
temp	int	$tmp913	%read{1148,7175} %write{1148,7175}
temp	float	$tmp914	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp915	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp916	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp917.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp917.y	%read{1148,7175} %write{1148,7175} %derivs
const	string	$const88	"GenBasisTB"		%read{2131,5963} %write{2147483647,-1}
temp	float	$tmp918	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp919	%read{1148,7175} %write{1148,7175}
temp	float	$tmp920	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp921	%read{1148,7175} %write{1148,7175}
temp	float	$tmp922	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp923	%read{1148,7175} %write{1148,7175}
temp	int	$tmp924	%read{1148,7175} %write{1148,7175}
const	float	$const89	-1		%read{2142,6745} %write{2147483647,-1}
const	string	$const90	"Dx"		%read{2144,5976} %write{2147483647,-1}
const	string	$const91	"Dy"		%read{2147,5979} %write{2147483647,-1}
temp	float	$tmp925.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp925.y	%read{1148,7175} %write{1148,7175}
const	string	$const92	"dot"		%read{2152,5984} %write{2147483647,-1}
temp	float	$tmp926	%read{1148,7175} %write{1148,7175}
temp	float	$tmp927	%read{1148,7175} %write{1148,7175}
temp	int	$tmp928	%read{1148,7175} %write{1148,7175}
temp	float	$tmp929.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp929.y	%read{1148,7175} %write{1148,7175}
const	string	$const93	"__operator__mul__"		%read{2162,6757} %write{2147483647,-1}
temp	float	$tmp930.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp930.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp931	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp932	%read{1148,7175} %write{1148,7175}
temp	float	$tmp933	%read{1148,7175} %write{1148,7175}
temp	int	$tmp934	%read{1148,7175} %write{1148,7175}
temp	float	$tmp935	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp936	%read{1148,7175} %write{1148,7175}
const	string	$const94	"setupNormalMapHex"		%read{2178,6010} %write{2147483647,-1}
temp	color	$tmp937	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp938	%read{1148,7175} %write{1148,7175}
temp	int	$tmp939	%read{1148,7175} %write{1148,7175}
temp	float	$tmp940	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp941	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp942	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp943	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp944	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp945	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp946	%read{1148,7175} %write{1148,7175}
temp	float	$tmp947.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp947.y	%read{1148,7175} %write{1148,7175}
const	string	$const95	"TspaceNormalToDerivative"		%read{2197,6734} %write{2147483647,-1}
const	float	$const96	0.0078125		%read{2198,6735} %write{2147483647,-1}
temp	float	$tmp948	%read{1148,7175} %write{1148,7175}
temp	float	$tmp949	%read{1148,7175} %write{1148,7175}
temp	float	$tmp950	%read{1148,7175} %write{1148,7175}
temp	float	$tmp951	%read{1148,7175} %write{1148,7175}
temp	float	$tmp952	%read{1148,7175} %write{1148,7175}
temp	float	$tmp953.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp953.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp954.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp954.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp955	%read{1148,7175} %write{1148,7175}
const	string	$const97	"__operator__neg__"		%read{2213,6750} %write{2147483647,-1}
const	string	$const98	"__operator__div__"		%read{2216,6753} %write{2147483647,-1}
temp	float	$tmp956.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp956.y	%read{1148,7175} %write{1148,7175}
const	string	$const99	"SurfgradFromTBN"		%read{2224,6763} %write{2147483647,-1}
temp	vector	$tmp957	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp958	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp959	%read{1148,7175} %write{1148,7175}
temp	int	$tmp960	%read{1148,7175} %write{1148,7175}
temp	int	$tmp961	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp962	%read{1148,7175} %write{1148,7175}
temp	int	$tmp963	%read{1148,7175} %write{1148,7175}
temp	int	$tmp964	%read{1148,7175} %write{1148,7175}
temp	float	$tmp965	%read{1148,7175} %write{1148,7175}
temp	int	$tmp966	%read{1148,7175} %write{1148,7175}
temp	float	$tmp967	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp968	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp969	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp970	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp971	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp972	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp973	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp974	%read{1148,7175} %write{1148,7175}
const	string	$const100	"hexTileAccumulate"		%read{2271,7204} %write{2147483647,-1}
temp	color	$tmp975	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp976	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp977	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp978	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp979	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp980	%read{1148,7175} %write{1148,7175}
const	string	$const101	"hexTileFinalColor"		%read{2286,7217} %write{2147483647,-1}
temp	float	$tmp981	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp983	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp984	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp987	%read{1148,7175} %write{1148,7175}
temp	color	$tmp988	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp989.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp989.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp990.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp990.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp990.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp990.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp991	%read{1148,7175} %write{1148,7175}
temp	color	$tmp992	%read{1148,7175} %write{1148,7175}
temp	int	$tmp993	%read{1148,7175} %write{1148,7175}
temp	int	$tmp994	%read{1148,7175} %write{1148,7175}
temp	int	$tmp995	%read{1148,7175} %write{1148,7175}
temp	float	$tmp996	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp997	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp998	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp999	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1000	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1001	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1002	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1003	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1004	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1005	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1006	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1007	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1008	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1009	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1010	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1011	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1012	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1013	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1014	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1015	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1016	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1017	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1018	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1019	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1020	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1021	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1022	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1023	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1024	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1025	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1026	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1027	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1028	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1029	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1030	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1031	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1032	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1033	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1034	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1035	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1036	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1037	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1038	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1039	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1040	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1041	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1042	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1043	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1044	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1045	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1046	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1047	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1048	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1049	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1050	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1051	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1052	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1053	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1054	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1055	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1056	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1057	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1058	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1059	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1060	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1061	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1062	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1063	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1064	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1065	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1066	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1067	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1068	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1069	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1070	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1071	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1072	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1073	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1074	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1075.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1075.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1076	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1077	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1078	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1079	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1080	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1081	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1082	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1083.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1083.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1084	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1085	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1086	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1087.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1087.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1088.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1088.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1089	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1090	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1091	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1092	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1093	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1094	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1095	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1096	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1097	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1098	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1099	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1100	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1101	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1102	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1103	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1104	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1105.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1105.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1106	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1107	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1108	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1109	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1110	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1111.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1111.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1112.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1112.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1113	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1114.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1114.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1115	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1116	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1117	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1118	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1119	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1120	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1121	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1122	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1123	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1124	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1125	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1126	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1127	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1128	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1129	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1130	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1131	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1132	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1133	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1134	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1135	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1136	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1137	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1138	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1139	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1141	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1142	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1145	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1146	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1147.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1147.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1148.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1148.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1148.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1148.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1149	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1150	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1151	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1152	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1153	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1154	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1155	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1156	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1157	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1158	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1159	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1160	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1161	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1162	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1163	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1164	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1165	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1166	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1167	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1168	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1169	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1170	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1171	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1172	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1173	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1174	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1175	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1176	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1177	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1178	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1179	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1180	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1181	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1182	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1183	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1184	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1185	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1186	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1187	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1188	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1189	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1190	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1191	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1192	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1193	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1194	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1195	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1196	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1197	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1198	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1199	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1200	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1201	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1202	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1203	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1204	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1205	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1206	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1207	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1208	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1209	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1210	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1211	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1212	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1213	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1214	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1215	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1216	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1217	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1218	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1219	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1220	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1221	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1222	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1223	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1224	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1225	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1226	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1227	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1228	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1229	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1230	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1231	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1232	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1233.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1233.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1234	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1235	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1236	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1237	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1238	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1239	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1240	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1241.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1241.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1242	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1243	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1244	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1245.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1245.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1246.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1246.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1247	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1248	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1249	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1250	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1251	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1252	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1253	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1254	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1255	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1256	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1257	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1258	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1259	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1260	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1261	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1262	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1263.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1263.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1264	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1265	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1266	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1267	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1268	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1269.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1269.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1270.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1270.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1271	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1272.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1272.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1273	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1274	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1275	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1276	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1277	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1278	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1279	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1280	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1281	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1282	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1283	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1284	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1285	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1286	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1287	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1288	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1289	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1290	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1291	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1292	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1293	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1294	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1295	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1296	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1297	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1299	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1300	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1303	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1304	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1305.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1305.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1306.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1306.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1306.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1306.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1307	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1308	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1309	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1310	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1311	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1312	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1313	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1314	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1315	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1316	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1317	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1318	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1319	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1320	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1321	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1322	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1323	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1324	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1325	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1326	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1327	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1328	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1329	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1330	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1331	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1332	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1333	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1334	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1335	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1336	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1337	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1338	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1339	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1340	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1341	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1342	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1343	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1344	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1345	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1346	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1347	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1348	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1349	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1350	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1351	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1352	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1353	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1354	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1355	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1356	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1357	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1358	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1359	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1360	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1361	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1362	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1363	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1364	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1365	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1366	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1367	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1368	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1369	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1370	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1371	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1372	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1373	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1374	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1375	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1376	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1377	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1378	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1379	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1380	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1381	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1382	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1383	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1384	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1385	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1386	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1387	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1388	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1389	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1390	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1391.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1391.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1392	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1393	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1394	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1395	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1396	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1397	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1398	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1399.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1399.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1400	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1401	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1402	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1403.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1403.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1404.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1404.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1405	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1406	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1407	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1408	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1409	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1410	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1411	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1412	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1413	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1414	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1415	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1416	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1417	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1418	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1419	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1420	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1421.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1421.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1422	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1423	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1424	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1425	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1426	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1427.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1427.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1428.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1428.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1429	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1430.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1430.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1431	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1432	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1433	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1434	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1435	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1436	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1437	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1438	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1439	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1440	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1441	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1442	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1443	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1444	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1445	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1446	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1447	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1448	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1449	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1450	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1451	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1452	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1453	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1454	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1455	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1457	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1458	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1461	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1462	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1463.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1463.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1464.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1464.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1464.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1464.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1465	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1466	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1467	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1468	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1469	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1470	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1471	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1472	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1473	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1474	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1475	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1476	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1477	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1478	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1479	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1480	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1481	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1482	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1483	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1484	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1485	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1486	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1487	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1488	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1489	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1490	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1491	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1492	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1493	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1494	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1495	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1496	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1497	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1498	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1499	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1500	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1501	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1502	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1503	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1504	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1505	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1506	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1507	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1508	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1509	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1510	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1511	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1512	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1513	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1514	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1515	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1516	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1517	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1518	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1519	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1520	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1521	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1522	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1523	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1524	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1525	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1526	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1527	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1528	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1529	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1530	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1531	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1532	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1533	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1534	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1535	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1536	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1537	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1538	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1539	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1540	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1541	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1542	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1543	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1544	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1545	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1546	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1547	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1548	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1549.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1549.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1550	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1551	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1552	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1553	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1554	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1555	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1556	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1557.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1557.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1558	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1559	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1560	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1561.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1561.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1562.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1562.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1563	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1564	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1565	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1566	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1567	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1568	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1569	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1570	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1571	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1572	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1573	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1574	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1575	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1576	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1577	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1578	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1579.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1579.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1580	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1581	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1582	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1583	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1584	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1585.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1585.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1586.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1586.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1587	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1588.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1588.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1589	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1590	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1591	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1592	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1593	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1594	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1595	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1596	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1597	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1598	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1599	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1600	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1601	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1602	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1603	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1604	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1605	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1606	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1607	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1608	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1609	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1610	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1611	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1612	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1613	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1615	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1616	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1619	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1620	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1621.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1621.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1622.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1622.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1622.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1622.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1623	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1624	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1625	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1626	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1627	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1628	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1629	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1630	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1631	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1632	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1633	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1634	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1635	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1636	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1637	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1638	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1639	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1640	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1641	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1642	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1643	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1644	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1645	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1646	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1647	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1648	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1649	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1650	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1651	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1652	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1653	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1654	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1655	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1656	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1657	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1658	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1659	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1660	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1661	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1662	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1663	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1664	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1665	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1666	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1667	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1668	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1669	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1670	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1671	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1672	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1673	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1674	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1675	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1676	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1677	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1678	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1679	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1680	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1681	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1682	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1683	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1684	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1685	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1686	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1687	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1688	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1689	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1690	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1691	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1692	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1693	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1694	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1695	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1696	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1697	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1698	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1699	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1700	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1701	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1702	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1703	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1704	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1705	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1706	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1707.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1707.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1708	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1709	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1710	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1711	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1712	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1713	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1714	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1715.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1715.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1716	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1717	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1718	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1719.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1719.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1720.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1720.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1721	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1722	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1723	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1724	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1725	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1726	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1727	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1728	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1729	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1730	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1731	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1732	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1733	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1734	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1735	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1736	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1737.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1737.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1738	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1739	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1740	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1741	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1742	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1743.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1743.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1744.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1744.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1745	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1746.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1746.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1747	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1748	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1749	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1750	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1751	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1752	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1753	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1754	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1755	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1756	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1757	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1758	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1759	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1760	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1761	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1762	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1763	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1764	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1765	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1766	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1767	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1768	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1769	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1770	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1771	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1773	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1774	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1777	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1778	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1779.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1779.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1780.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1780.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1780.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1780.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1781	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1782	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1783	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1784	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1785	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1786	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1787	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1788	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1789	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1790	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1791	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1792	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1793	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1794	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1795	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1796	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1797	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1798	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1799	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1800	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1801	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1802	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1803	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1804	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1805	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1806	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1807	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1808	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1809	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1810	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1811	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1812	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1813	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1814	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1815	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1816	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1817	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1818	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1819	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1820	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1821	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1822	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1823	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1824	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1825	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1826	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1827	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1828	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1829	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1830	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1831	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1832	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1833	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1834	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1835	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1836	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1837	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1838	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1839	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1840	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1841	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1842	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1843	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1844	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1845	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1846	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1847	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1848	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1849	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1850	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1851	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1852	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1853	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1854	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1855	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1856	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1857	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1858	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1859	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1860	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1861	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1862	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1863	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1864	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1865.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1865.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1866	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1867	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1868	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp1869	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1870	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1871	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1872	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1873.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1873.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1874	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1875	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1876	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1877.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1877.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1878.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1878.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1879	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1880	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1881	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1882	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1883	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1884	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1885	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1886	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1887	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1888	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1889	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1890	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1891	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1892	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1893	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1894	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1895.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1895.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1896	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1897	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1898	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1899	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1900	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1901.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1901.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1902.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1902.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1903	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1904.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1904.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1905	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1906	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1907	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1908	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1909	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1910	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1911	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1912	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1913	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1914	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1915	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1916	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1917	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1918	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1919	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1920	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1921	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1922	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1923	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1924	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1925	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1926	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1927	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp1928	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1929	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1931	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1932	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1935	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1936	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1937.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp1937.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1938.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1938.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1938.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp1938.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp1939	%read{1148,7175} %write{1148,7175}
temp	color	$tmp1940	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1941	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1942	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1943	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1944	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1945	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1946	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1947	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1948	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1949	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1950	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1951	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1952	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1953	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1954	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1955	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1956	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp1957	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1958	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1959	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1960	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1961	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp1962	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1963	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1964	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1965	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1966	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1967	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1968	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1969	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1970	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1971	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1972	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1973	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1974	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1975	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1976	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1977	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1978	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1979	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1980	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1981	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1982	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1983	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1984	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1985	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1986	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1987	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1988	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1989	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1990	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1991	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1992	%read{1148,7175} %write{1148,7175}
temp	int	$tmp1993	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1994	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp1995	%read{1148,7175} %write{1148,7175}
temp	float	$tmp1996	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1997	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1998	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp1999	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2000	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2001	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2002	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2003	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2004	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2005	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2006	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2007	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2008	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2009	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2010	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2011	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp2012	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2013	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2014	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2015	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2016	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2017	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2018	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2019	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2020	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2021	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2022	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2023.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2023.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2024	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp2025	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2026	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp2027	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2028	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2029	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2030	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2031.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2031.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2032	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2033	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2034	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2035.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2035.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2036.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2036.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2037	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2038	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2039	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2040	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2041	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2042	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2043	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2044	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2045	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2046	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2047	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2048	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2049	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2050	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2051	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2052	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2053.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2053.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2054	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2055	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2056	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2057	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2058	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2059.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2059.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2060.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2060.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2061	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2062.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2062.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2063	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2064	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2065	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2066	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2067	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2068	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2069	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2070	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2071	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2072	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2073	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2074	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2075	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2076	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2077	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2078	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2079	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2080	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2081	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2082	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2083	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2084	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2085	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2086	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2087	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2089	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2090	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2093	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2094	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2095.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2095.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2096.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2096.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2096.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2096.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp2097	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2098	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2099	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2100	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2101	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2102	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2103	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2104	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2105	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2106	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2107	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2108	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2109	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2110	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2111	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2112	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2113	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2114	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2115	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2116	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2117	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2118	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2119	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2120	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2121	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2122	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2123	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2124	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2125	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2126	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2127	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2128	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2129	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2130	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2131	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2132	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2133	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2134	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2135	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2136	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2137	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2138	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2139	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2140	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2141	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2142	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2143	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2144	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2145	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2146	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2147	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2148	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2149	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2150	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2151	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2152	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2153	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2154	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2155	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2156	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2157	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2158	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2159	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2160	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2161	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2162	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2163	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2164	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2165	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2166	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2167	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2168	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2169	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp2170	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2171	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2172	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2173	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2174	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2175	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2176	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2177	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2178	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2179	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2180	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2181.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2181.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2182	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp2183	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2184	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp2185	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2186	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2187	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2188	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2189.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2189.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2190	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2191	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2192	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2193.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2193.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2194.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2194.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2195	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2196	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2197	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2198	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2199	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2200	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2201	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2202	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2203	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2204	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2205	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2206	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2207	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2208	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2209	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2210	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2211.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2211.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2212	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2213	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2214	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2215	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2216	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2217.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2217.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2218.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2218.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2219	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2220.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2220.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2221	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2222	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2223	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2224	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2225	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2226	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2227	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2228	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2229	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2230	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2231	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2232	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2233	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2234	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2235	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2236	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2237	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2238	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2239	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2240	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2241	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2242	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2243	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2244	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2245	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2247	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2248	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2251	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2252.powerTtoG	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2252.powerGtoT	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2253.s	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2253.t	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2253.w	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2253.r	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp2254	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2255	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2256	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2257	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2258	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2259	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2260	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2261	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2262	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2263	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2264	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2265	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2266	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2267	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2268	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2269	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2270	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2271	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2272	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2273	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2274	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2275	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2276	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2277	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2278	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2279	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2280	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2281	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2282	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2283	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2284	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2285	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2286	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2287	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2288	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2289	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2290	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2291	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2292	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2293	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2294	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2295	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2296	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2297	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2298	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2299	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2300	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2301	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2302	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2303	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2304	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2305	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2306	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2307	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2308	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2309	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2310	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2311	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2312	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2313	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2314	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2315	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2316	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2317	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2318	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2319	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2320	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2321	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2322	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2323	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2324	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2325	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2326	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp2327	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2328	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2329	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2330	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2331	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2332	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2333	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2334	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2335	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2336	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2337	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2338.x	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2338.y	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2339	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp2340	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2341	%read{1148,7175} %write{1148,7175}
temp	normal	$tmp2342	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2343	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2344	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2345	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2346.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2346.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2347	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2348	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2349	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2350.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2350.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2351.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2351.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2352	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2353	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2354	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2355	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2356	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2357	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2358	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2359	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2360	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2361	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2362	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2363	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2364	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2365	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2366	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2367	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2368.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2368.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2369	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2370	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2371	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2372	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2373	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2374.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2374.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2375.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2375.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2376	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2377.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2377.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2378	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2379	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2380	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2381	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2382	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2383	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2384	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2385	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2386	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2387	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2388	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2389	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2390	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2391	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2392	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2393	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2394	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2395	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2396	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2397	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2398	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2399	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2400	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2401	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2402	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2404	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2405	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2408	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2409	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2410	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2411	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2412	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2413	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2414	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2415	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2416	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2417	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2418	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2419	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2420	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2421	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2422	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2423	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2424	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2425	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2426	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2427	%read{1148,7175} %write{1148,7175} %derivs
temp	vector	$tmp2428	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2429	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2430	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2431	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2432	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2433	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2434	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2435	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2436	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2437	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2438	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2439	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2440	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2441	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2442	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2443	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2444	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2445	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2446	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2447	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2448	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2449	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2450	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2451	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2452	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2453	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2454	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2455	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2456	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2457	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2458	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2459	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2460	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2461	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2462	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2463	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2464	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2465	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2466	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2467	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2468	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2469	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2470	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2471	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2472	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2473	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2474	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2475	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2476	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2477	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2478	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2479	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2480	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2481	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2482	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2483	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2484	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2485	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2486	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2487	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2488	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2489	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2490	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2491	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2492	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2493	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2494	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2495	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2496	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2497	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2498	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2499	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2500	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2501	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2502	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2503	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2504	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2505	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2506	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2507	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2508	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2509	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2510	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2511	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2512	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2513	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2514	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2515	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2516	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2517	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2518	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2519	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2520	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2521	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2522	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2523	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2524	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2525	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2526	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2527	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2528	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2529	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2530	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2531	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2532	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2533	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2534	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2535	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2536	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2537	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2538	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2539	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2540	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2541	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2542	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2543	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2544	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2545	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2546	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2547	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2548	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2549	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2550	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2551	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2552	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2553	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2554	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2555	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2556	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2557	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2558	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2559	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2560	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2561	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2562	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2563	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2564	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2565	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2566	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2567	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2568	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2569	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2570	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2571	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2572	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2573	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2574	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2575	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2576	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2577	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2578	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2579	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2580	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2581	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2582	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2583	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2584	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2585	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2586	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2587	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2588	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2589	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2590	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2591	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2592	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2593	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2594	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2595	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2596	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2597	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2598	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2599	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2600	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2601	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2602	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2603	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2604	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2605	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2606	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2607	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2608	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2609	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2610	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2611	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2612	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2613	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2614	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2615	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2616	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2617	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2618	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2619	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2620	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2621	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2622	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2623	%read{1148,7175} %write{1148,7175}
const	string	$const102	"setupNormalMap"		%read{6703,6703} %write{2147483647,-1}
temp	color	$tmp2624	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2625	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2626	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2627	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2628	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2629	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2630	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2631	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2632	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2633	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2634	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2635	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2636	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2637	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2638	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2639	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2640	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2641	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2642.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2642.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2643	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2644	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2645	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2646	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2647	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2648.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2648.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2649.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2649.y	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2650	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2651.x	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2651.y	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2652	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2653	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2654	%read{1148,7175} %write{1148,7175}
temp	vector	$tmp2655	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2656	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2657	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2658	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2659	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2660	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2661	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2662	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2663	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2664	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2665	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2666	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2667	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2668	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2669	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2670	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2671	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2672	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2673	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2674	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2675	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2676	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2677	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2678	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2679	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2680	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2681	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2682	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2683	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2684	%read{1148,7175} %write{1148,7175} %derivs
temp	point	$tmp2685	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2686	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2687	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2688	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2689	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2690	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2691	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2692	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2693	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2694	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2695	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2696	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2697	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2698	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2699	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2700	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2701	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2702	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2703	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2704	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2705	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2706	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2707	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2708	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2709	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2710	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2711	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2712	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2713	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2714	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2715	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2716	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2717	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2718	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2719	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2720	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2721	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2722	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2723	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2724	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2725	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2726	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2727	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2728	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2729	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2730	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2731	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2732	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2733	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2734	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2735	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2736	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2737	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2738	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2739	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2740	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2741	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2742	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2743	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2744	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2745	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2746	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2747	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2748	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2749	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2750	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2751	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2752	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2753	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2754	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2755	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2756	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2757	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2758	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2759	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2760	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2761	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2762	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2763	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2764	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2765	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2766	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2767	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2768	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2769	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2770	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2771	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2772	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2773	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2774	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2775	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2776	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2777	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2778	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2779	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2780	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2781	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2782	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2783	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2784	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2785	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2786	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2787	%read{2147483647,-1} %write{1148,7175}
temp	float	$tmp2788	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2789	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2790	%read{1148,7175} %write{1148,7175} %derivs
const	string	$const103	"randomizeHLSG"		%read{7085,7085} %write{2147483647,-1}
temp	float	$tmp2791	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2792	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2793	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2794	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2795	%read{1148,7175} %write{1148,7175} %derivs
const	float	$const104	0.333332986		%read{7091,7091} %write{2147483647,-1}
temp	float	$tmp2796	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2797	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2798	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2799	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2800	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2801	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2802	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2803	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2804	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2805	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2806	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2807	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2808	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2809	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2810	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2811	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2812	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2813	%read{1148,7175} %write{1148,7175}
temp	color	$tmp2814	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2815	%read{1148,7175} %write{1148,7175} %derivs
const	string	$const105	"varyColor"		%read{7131,7131} %write{2147483647,-1}
temp	int	$tmp2816	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2817	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2818	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2819	%read{1148,7175} %write{1148,7175}
const	string	$const106	"rgb"		%read{7142,7159} %write{2147483647,-1}
const	string	$const107	"hsl"		%read{7142,7159} %write{2147483647,-1}
temp	float	$tmp2820	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2821	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2822	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2823	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2824	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2825	%read{1148,7175} %write{1148,7175} %derivs
const	string	$const108	"clamp"		%read{7149,7268} %write{2147483647,-1}
temp	float	$tmp2826	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2827	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2828	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2829	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2830	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2832	%read{1148,7175} %write{1148,7175} %derivs
temp	int	$tmp2833	%read{1148,7175} %write{1148,7175}
temp	float	$tmp2834	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2835	%read{1148,7175} %write{1148,7175} %derivs
temp	float	$tmp2836	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2837	%read{1148,7175} %write{1148,7175} %derivs
temp	color	$tmp2838	%read{1148,7175} %write{1148,7175}
temp	int	$tmp2839	%read{2147483647,-1} %write{1148,7175}
temp	int	$tmp2840	%read{7178,7178} %write{7177,7177}
temp	int	$tmp2841	%read{7184,7216} %write{7184,7216}
temp	int	$tmp2842	%read{7182,7216} %write{7183,7216}
temp	int	$tmp2843	%read{7184,7216} %write{7184,7216}
temp	float	$tmp2844	%read{7184,7216} %write{7184,7216} %derivs
temp	point	$tmp2845	%read{7184,7216} %write{7184,7216} %derivs
temp	float	$tmp2846	%read{7184,7216} %write{7184,7216} %derivs
temp	point	$tmp2847	%read{7184,7216} %write{7184,7216} %derivs
temp	float	$tmp2848	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2849	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2850	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2851	%read{7184,7216} %write{7184,7216} %derivs
temp	float	$tmp2852	%read{7184,7216} %write{7184,7216} %derivs
temp	point	$tmp2853	%read{7184,7216} %write{7184,7216} %derivs
temp	float	$tmp2854	%read{7184,7216} %write{7184,7216} %derivs
temp	point	$tmp2855	%read{7184,7216} %write{7184,7216} %derivs
temp	float	$tmp2856	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2857.powerTtoG	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2857.powerGtoT	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2858	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2859	%read{7184,7216} %write{7184,7216} %derivs
temp	float	$tmp2860	%read{7184,7216} %write{7184,7216} %derivs
temp	color	$tmp2861	%read{7184,7216} %write{7184,7216} %derivs
temp	int	$tmp2862	%read{2147483647,-1} %write{7184,7216}
temp	float	$tmp2863	%read{7219,7219} %write{7218,7218} %derivs
temp	color	$tmp2865	%read{7221,7221} %write{7220,7220} %derivs
temp	color	$tmp2866	%read{7222,7222} %write{7221,7221} %derivs
temp	int	$tmp2869	%read{7229,7252} %write{7229,7252}
temp	int	$tmp2870	%read{7227,7252} %write{7228,7252}
temp	int	$tmp2871	%read{7229,7252} %write{7229,7252}
temp	float	$tmp2872	%read{7229,7252} %write{7229,7252} %derivs
temp	point	$tmp2873	%read{7229,7252} %write{7229,7252} %derivs
temp	float	$tmp2874	%read{7229,7252} %write{7229,7252} %derivs
temp	point	$tmp2875	%read{7229,7252} %write{7229,7252} %derivs
temp	float	$tmp2876	%read{7229,7252} %write{7229,7252} %derivs
temp	color	$tmp2877	%read{7229,7252} %write{7229,7252} %derivs
temp	color	$tmp2878	%read{7229,7252} %write{7229,7252} %derivs
temp	int	$tmp2879	%read{7229,7252} %write{7229,7252}
temp	float	$tmp2880	%read{7229,7252} %write{7229,7252}
temp	point	$tmp2881	%read{7229,7252} %write{7229,7252}
temp	float	$tmp2882	%read{7229,7252} %write{7229,7252}
temp	point	$tmp2883	%read{7229,7252} %write{7229,7252}
temp	float	$tmp2884	%read{7229,7252} %write{7229,7252}
temp	color	$tmp2885	%read{7229,7252} %write{7229,7252}
temp	color	$tmp2886	%read{7229,7252} %write{7229,7252}
temp	int	$tmp2887	%read{2147483647,-1} %write{7229,7252}
temp	int	$tmp2888	%read{7257,7267} %write{7257,7267}
temp	int	$tmp2889	%read{7255,7267} %write{7256,7267}
temp	int	$tmp2890	%read{7257,7267} %write{7257,7267}
temp	float	$tmp2891	%read{7257,7267} %write{7257,7267}
temp	point	$tmp2892	%read{7257,7267} %write{7257,7267}
temp	float	$tmp2893	%read{7257,7267} %write{7257,7267}
temp	float	$tmp2894	%read{7257,7267} %write{7257,7267}
temp	int	$tmp2895	%read{2147483647,-1} %write{7257,7267}
temp	float	$tmp2896	%read{7270,7270} %write{7269,7269}
temp	int	$tmp2897	%read{7275,7327} %write{7275,7327}
temp	int	$tmp2898	%read{7273,7327} %write{7274,7327}
temp	int	$tmp2899	%read{7275,7327} %write{7275,7327}
temp	point	$tmp2900.s	%read{2147483647,-1} %write{7275,7327}
temp	point	$tmp2900.t	%read{2147483647,-1} %write{7275,7327}
temp	point	$tmp2900.w	%read{7275,7327} %write{7275,7327}
temp	point	$tmp2900.r	%read{2147483647,-1} %write{7275,7327}
temp	int	$tmp2902	%read{7275,7327} %write{7275,7327}
temp	float	$tmp2903	%read{7275,7327} %write{7275,7327} %derivs
temp	point	$tmp2904.s	%read{2147483647,-1} %write{7275,7327}
temp	point	$tmp2904.t	%read{2147483647,-1} %write{7275,7327}
temp	point	$tmp2904.w	%read{7275,7327} %write{7275,7327} %derivs
temp	point	$tmp2904.r	%read{2147483647,-1} %write{7275,7327}
const	string	$const109	"hexTileGrid"		%read{7293,7293} %write{2147483647,-1}
temp	float	$tmp2905	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2906	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2907	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2908	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2909	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2910	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2911	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2912	%read{7275,7327} %write{7275,7327} %derivs
temp	point	$tmp2913	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2914	%read{7275,7327} %write{7275,7327} %derivs
temp	int	$tmp2915	%read{7275,7327} %write{7275,7327}
temp	int	$tmp2916	%read{7275,7327} %write{7275,7327}
const	float	$const110	100000		%read{7314,7314} %write{2147483647,-1}
temp	float	$tmp2917	%read{7275,7327} %write{7275,7327} %derivs
temp	point	$tmp2918	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2919	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2920	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2921	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2922	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2923	%read{7275,7327} %write{7275,7327} %derivs
temp	point	$tmp2924	%read{7275,7327} %write{7275,7327} %derivs
temp	float	$tmp2925	%read{7275,7327} %write{7275,7327} %derivs
temp	int	$tmp2926	%read{2147483647,-1} %write{7275,7327}
temp	int	$tmp2927	%read{2147483647,-1} %write{7275,7327}
temp	int	$tmp2928	%read{7330,7330} %write{7329,7329}
temp	int	$tmp2929	%read{7331,7335} %write{7330,7334}
temp	int	$tmp2930	%read{7333,7333} %write{7332,7332}
temp	int	$tmp2931	%read{7334,7334} %write{7333,7333}
temp	vector	$tmp2932	%read{7341,7341} %write{7340,7340}
temp	float	$tmp2933	%read{7337,7337} %write{7336,7336} %derivs
temp	float	$tmp2934	%read{7338,7338} %write{7337,7337} %derivs
temp	normal	$tmp2935	%read{7339,7339} %write{7338,7338} %derivs
temp	point	$tmp2936	%read{7340,7340} %write{7339,7339} %derivs
const	string	$const111	"surfgradFromPerturbedNormal"		%read{7342,7342} %write{2147483647,-1}
temp	vector	$tmp2937	%read{7345,7345} %write{7344,7344}
temp	vector	$tmp2938	%read{7348,7348} %write{7345,7345}
temp	float	$tmp2939	%read{7348,7348} %write{7347,7347}
temp	float	$tmp2940	%read{7347,7347} %write{7346,7346}
const	string	$const112	"Color_Saturate"		%read{7349,7349} %write{2147483647,-1}
temp	color	$tmp2941	%read{7353,7353} %write{7352,7352} %derivs
temp	color	$tmp2942	%read{7355,7355} %write{7354,7354} %derivs
temp	float	$tmp2943	%read{7357,7357} %write{7356,7356}
code manifoldMulti.Tn
# PxrMultiTexture.osl:79
#     PxrManifoldMulti manifoldMulti = MULTIMANIFOLD_ZERO
	aassign		manifoldMulti.Tn $const2 $const1 	%filename{"PxrMultiTexture.osl"} %line{79} %argrw{"wrr"}
	aassign		manifoldMulti.Tn $const3 $const1 	%argrw{"wrr"}
	aassign		manifoldMulti.Tn $const4 $const1 	%argrw{"wrr"}
	aassign		manifoldMulti.Tn $const5 $const1 	%argrw{"wrr"}
code manifoldMulti.Bn
# PxrMultiTexture.osl:79
#     PxrManifoldMulti manifoldMulti = MULTIMANIFOLD_ZERO
	aassign		manifoldMulti.Bn $const2 $const1 	%filename{"PxrMultiTexture.osl"} %line{79} %argrw{"wrr"}
	aassign		manifoldMulti.Bn $const3 $const1 	%argrw{"wrr"}
	aassign		manifoldMulti.Bn $const4 $const1 	%argrw{"wrr"}
	aassign		manifoldMulti.Bn $const5 $const1 	%argrw{"wrr"}
code manifoldMulti.hextile0
# PxrMultiTexture.osl:79
#     PxrManifoldMulti manifoldMulti = MULTIMANIFOLD_ZERO
	aassign		manifoldMulti.hextile0 $const2 $const6 	%filename{"PxrMultiTexture.osl"} %line{79} %argrw{"wrr"}
	aassign		manifoldMulti.hextile0 $const3 $const6 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile0 $const4 $const7 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile0 $const5 $const6 	%argrw{"wrr"}
code manifoldMulti.hextile1
# PxrMultiTexture.osl:79
#     PxrManifoldMulti manifoldMulti = MULTIMANIFOLD_ZERO
	aassign		manifoldMulti.hextile1 $const2 $const6 	%filename{"PxrMultiTexture.osl"} %line{79} %argrw{"wrr"}
	aassign		manifoldMulti.hextile1 $const3 $const6 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile1 $const4 $const7 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile1 $const5 $const6 	%argrw{"wrr"}
code manifoldMulti.hextile2
# PxrMultiTexture.osl:79
#     PxrManifoldMulti manifoldMulti = MULTIMANIFOLD_ZERO
	aassign		manifoldMulti.hextile2 $const2 $const6 	%filename{"PxrMultiTexture.osl"} %line{79} %argrw{"wrr"}
	aassign		manifoldMulti.hextile2 $const3 $const6 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile2 $const4 $const7 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile2 $const5 $const6 	%argrw{"wrr"}
code manifoldMulti.hextile3
# PxrMultiTexture.osl:79
#     PxrManifoldMulti manifoldMulti = MULTIMANIFOLD_ZERO
	aassign		manifoldMulti.hextile3 $const2 $const6 	%filename{"PxrMultiTexture.osl"} %line{79} %argrw{"wrr"}
	aassign		manifoldMulti.hextile3 $const3 $const6 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile3 $const4 $const7 	%argrw{"wrr"}
	aassign		manifoldMulti.hextile3 $const5 $const6 	%argrw{"wrr"}
code ___main___
# PxrMultiTexture.osl:532
#     NormalMapParams nMap = {texturesAreNormalMaps, orientation, flipX, flipY};
	assign		nMap.enabled texturesAreNormalMaps 	%filename{"PxrMultiTexture.osl"} %line{532} %argrw{"wr"}
	assign		nMap.orientation orientation 	%argrw{"wr"}
	assign		nMap.flipX flipX 	%argrw{"wr"}
	assign		nMap.flipY flipY 	%argrw{"wr"}
# PxrMultiTexture.osl:533
#     TxParams txparams = initTxParams(firstChannel, blur,
	functioncall	$const8 49 	%line{533} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:83
#     return initTxParams(firstchannel, blur, missingcolor, missingalpha, filter, 1.0);
	functioncall	$const8 49 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{83} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:68
#     if (filter == 0)
	eq		$tmp25 filter $const2 	%line{68} %argrw{"wrr"}
	if		$tmp25 33 37 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:69
#         interp = "closest";
	assign		___654_interp $const10 	%line{69} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:70
#     else if (filter == 2)
	eq		$tmp26 filter $const4 	%line{70} %argrw{"wrr"}
	if		$tmp26 36 37 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:71
#         interp = "linear";
	assign		___654_interp $const11 	%line{71} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:73
#         interp = "smartcubic";
	assign		___654_interp $const12 	%line{73} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:75
#     TxParams params = {firstchannel, blur, missingcolor, missingalpha,
	assign		___654_params.firstchannel firstChannel 	%line{75} %argrw{"wr"}
	assign		___654_params.blur blur 	%argrw{"wr"}
	assign		___654_params.missingcolor missingColor 	%argrw{"wr"}
	assign		___654_params.missingalpha missingAlpha 	%argrw{"wr"}
	assign		___654_params.interp ___654_interp 	%argrw{"wr"}
	assign		___654_params.width $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:77
#     return params;
	assign		txparams.firstchannel ___654_params.firstchannel 	%line{77} %argrw{"wr"}
	assign		txparams.blur ___654_params.blur 	%argrw{"wr"}
	assign		txparams.missingcolor ___654_params.missingcolor 	%argrw{"wr"}
	assign		txparams.missingalpha ___654_params.missingalpha 	%argrw{"wr"}
	assign		txparams.interp ___654_params.interp 	%argrw{"wr"}
	assign		txparams.width ___654_params.width 	%argrw{"wr"}
# PxrMultiTexture.osl:535
#     int needAlpha = isconnected(resultA);
	isconnected	needAlpha resultA 	%filename{"PxrMultiTexture.osl"} %line{535} %argrw{"wr"}
# PxrMultiTexture.osl:539
#     int noManifold = isconnected(manifoldMulti) == 0;
	isconnected	$tmp27 manifoldMulti 	%line{539} %argrw{"wr"}
	eq		noManifold $tmp27 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:542
#     if (noManifold)
	if		noManifold 236 236 	%line{542} %argrw{"r"}
# PxrMultiTexture.osl:544
#         float st[2] = {0, 0};
	assign		___817_st $const13 	%line{544} %argrw{"wr"}
# PxrMultiTexture.osl:545
#         getattribute("primvar", "st", st);
	getattribute	$tmp28 $const14 $const15 ___817_st 	%line{545} %argrw{"wrrw"}
# PxrMultiTexture.osl:546
#         TxCoords txcoords = initTxCoords(st[0], st[1], invertT, smoothRayDerivs);
	aref		$tmp29 ___817_st $const2 	%line{546} %argrw{"wrr"}
	aref		$tmp30 ___817_st $const3 	%argrw{"wrr"}
	functioncall	$const16 180 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		invertT 65 66 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 65 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp31 $tmp30 	%line{48} %argrw{"wr"}
	add		$tmp32 $tmp31 $const9 	%argrw{"wrr"}
	floor		$tmp33 $tmp30 	%argrw{"wr"}
	sub		$tmp34 $tmp30 $tmp33 	%argrw{"wrr"}
	sub		___656__tt $tmp32 $tmp34 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp30 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		smoothRayDerivs 165 172 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp35 $tmp29 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp35 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp36 $tmp29 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp36 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp37 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp37 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp38 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp38 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp39 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp40 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp39 $tmp40 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp41 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp41 91 125 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp42 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp43 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp44 $tmp42 $tmp43 	%argrw{"wrr"}
	div		___657_dPds $tmp44 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp45 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp46 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp47 $tmp45 $tmp46 	%argrw{"wrr"}
	div		___657_dPdt $tmp47 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp48 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp48 94 95 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp49 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp49 98 99 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp50 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp51 $tmp50 $const18 	%argrw{"wrr"}
	neq		$tmp52 $tmp51 $const2 	%argrw{"wrr"}
	if		$tmp52 106 106 	%argrw{"r"}
	neq		$tmp53 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp54 $tmp53 $const2 	%argrw{"wrr"}
	assign		$tmp52 $tmp54 	%argrw{"wr"}
	if		$tmp52 108 108 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp55 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp56 $tmp55 $const18 	%argrw{"wrr"}
	neq		$tmp57 $tmp56 $const2 	%argrw{"wrr"}
	if		$tmp57 115 115 	%argrw{"r"}
	neq		$tmp58 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp59 $tmp58 $const2 	%argrw{"wrr"}
	assign		$tmp57 $tmp59 	%argrw{"wr"}
	if		$tmp57 117 117 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp60 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp61 $tmp60 $const18 	%argrw{"wrr"}
	if		$tmp61 121 121 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp62 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp63 $tmp62 $const18 	%argrw{"wrr"}
	if		$tmp63 125 125 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp64 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp64 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp65 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp65 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp29 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp29 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp66 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp67 ___657_dyss 	%argrw{"wr"}
	gt		$tmp68 $tmp66 $tmp67 	%argrw{"wrr"}
	if		$tmp68 138 139 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp69 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp70 ___657_dytt 	%argrw{"wr"}
	gt		$tmp71 $tmp69 $tmp70 	%argrw{"wrr"}
	if		$tmp71 144 145 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp72 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp73 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp72 $tmp73 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 158 165 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp29 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp29 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp29 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp29 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp29 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___817_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___817_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___817_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___817_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___817_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___817_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___817_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:547
#         resultRGB = PxrTextureLookup(filename0, txcoords, txparams);
	functioncall	$const19 211 	%filename{"PxrMultiTexture.osl"} %line{547} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp74 ___817_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename0 ___817_txcoords.s ___817_txcoords.t ___817_txcoords.dsdx ___817_txcoords.dtdx ___817_txcoords.dsdy ___817_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp74 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp75 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp75 190 190 	%argrw{"r"}
	assign		resultRGB ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename0 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp76 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp76 196 196 	%argrw{"r"}
	neq		$tmp77 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp76 $tmp77 	%argrw{"wr"}
	if		$tmp76 210 210 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp78 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp79 $tmp78 $const2 	%argrw{"wrr"}
	if		$tmp79 200 203 	%argrw{"r"}
	eq		$tmp80 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp81 $tmp80 $const2 	%argrw{"wrr"}
	assign		$tmp79 $tmp81 	%argrw{"wr"}
	if		$tmp79 210 210 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp82 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp82 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp83 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp83 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp84 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp84 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		resultRGB ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:548
#         if (linearize) PxrLinearizeSRGB(resultRGB);
	if		linearize 235 235 	%filename{"PxrMultiTexture.osl"} %line{548} %argrw{"r"}
	functioncall	$const26 235 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 217 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp86 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp85 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp87 $tmp85 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp87 235 235 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp89 221 223 234 235 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp88 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp89 $tmp88 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp90 resultRGB ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp91 $tmp90 $const29 	%argrw{"wrr"}
	if		$tmp91 229 234 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp92 resultRGB ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp93 $tmp92 $const30 	%argrw{"wrr"}
	compassign	resultRGB ___667_i $tmp93 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp95 resultRGB ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp96 $tmp95 $const31 	%argrw{"wrr"}
	mul		$tmp97 $tmp96 $const32 	%argrw{"wrr"}
	pow		$tmp94 $tmp97 $const33 	%argrw{"wrr"}
	compassign	resultRGB ___667_i $tmp94 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# PxrMultiTexture.osl:549
#         return;
	exit	%filename{"PxrMultiTexture.osl"} %line{549}
# PxrMultiTexture.osl:567
#     point sta[NUM_STGRPS] = {manifoldMulti.stAlpha0, manifoldMulti.stAlpha1,
	aassign		sta $const2 manifoldMulti.stAlpha0 	%line{567} %argrw{"wrr"}
	aassign		sta $const3 manifoldMulti.stAlpha1 	%argrw{"wrr"}
	aassign		sta $const4 manifoldMulti.stAlpha2 	%argrw{"wrr"}
	aassign		sta $const5 manifoldMulti.stAlpha3 	%argrw{"wrr"}
# PxrMultiTexture.osl:569
#     point idf[NUM_STGRPS] = {manifoldMulti.tileidRunflag0, manifoldMulti.tileidRunflag1,
	aassign		idf $const2 manifoldMulti.tileidRunflag0 	%line{569} %argrw{"wrr"}
	aassign		idf $const3 manifoldMulti.tileidRunflag1 	%argrw{"wrr"}
	aassign		idf $const4 manifoldMulti.tileidRunflag2 	%argrw{"wrr"}
	aassign		idf $const5 manifoldMulti.tileidRunflag3 	%argrw{"wrr"}
# PxrMultiTexture.osl:571
#     float stRadius = manifoldMulti.radius;
	assign		stRadius manifoldMulti.radius 	%line{571} %argrw{"wr"}
# PxrMultiTexture.osl:575
#     string textures[NUMTEX] = {filename0, filename1, filename2, filename3,
	aassign		textures $const2 filename0 	%line{575} %argrw{"wrr"}
	aassign		textures $const3 filename1 	%argrw{"wrr"}
	aassign		textures $const4 filename2 	%argrw{"wrr"}
	aassign		textures $const5 filename3 	%argrw{"wrr"}
	aassign		textures $const34 filename4 	%argrw{"wrr"}
	aassign		textures $const35 filename5 	%argrw{"wrr"}
	aassign		textures $const36 filename6 	%argrw{"wrr"}
	aassign		textures $const37 filename7 	%argrw{"wrr"}
	aassign		textures $const38 filename8 	%argrw{"wrr"}
	aassign		textures $const39 filename9 	%argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aref		$tmp98 manifoldMulti.hextile0 $const2 	%line{584} %argrw{"wrr"}
	aassign		hexData.s $const2 $tmp98 	%argrw{"wrr"}
	aref		$tmp99 manifoldMulti.hextile0 $const3 	%argrw{"wrr"}
	aassign		hexData.t $const2 $tmp99 	%argrw{"wrr"}
	aref		$tmp100 manifoldMulti.hextile0 $const4 	%argrw{"wrr"}
	aassign		hexData.w $const2 $tmp100 	%argrw{"wrr"}
	aref		$tmp101 manifoldMulti.hextile0 $const5 	%argrw{"wrr"}
	aassign		hexData.r $const2 $tmp101 	%argrw{"wrr"}
# PxrMultiTexture.osl:585
#                                        FromFlatHexTileData(manifoldMulti.hextile1),
	aref		$tmp102 manifoldMulti.hextile1 $const2 	%line{585} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.s $const3 $tmp102 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:585
#                                        FromFlatHexTileData(manifoldMulti.hextile1),
	aref		$tmp103 manifoldMulti.hextile1 $const3 	%line{585} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.t $const3 $tmp103 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:585
#                                        FromFlatHexTileData(manifoldMulti.hextile1),
	aref		$tmp104 manifoldMulti.hextile1 $const4 	%line{585} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.w $const3 $tmp104 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:585
#                                        FromFlatHexTileData(manifoldMulti.hextile1),
	aref		$tmp105 manifoldMulti.hextile1 $const5 	%line{585} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.r $const3 $tmp105 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:586
#                                        FromFlatHexTileData(manifoldMulti.hextile2),
	aref		$tmp106 manifoldMulti.hextile2 $const2 	%line{586} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.s $const4 $tmp106 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:586
#                                        FromFlatHexTileData(manifoldMulti.hextile2),
	aref		$tmp107 manifoldMulti.hextile2 $const3 	%line{586} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.t $const4 $tmp107 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:586
#                                        FromFlatHexTileData(manifoldMulti.hextile2),
	aref		$tmp108 manifoldMulti.hextile2 $const4 	%line{586} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.w $const4 $tmp108 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:586
#                                        FromFlatHexTileData(manifoldMulti.hextile2),
	aref		$tmp109 manifoldMulti.hextile2 $const5 	%line{586} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.r $const4 $tmp109 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:587
#                                        FromFlatHexTileData(manifoldMulti.hextile3)};
	aref		$tmp110 manifoldMulti.hextile3 $const2 	%line{587} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.s $const5 $tmp110 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:587
#                                        FromFlatHexTileData(manifoldMulti.hextile3)};
	aref		$tmp111 manifoldMulti.hextile3 $const3 	%line{587} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.t $const5 $tmp111 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:587
#                                        FromFlatHexTileData(manifoldMulti.hextile3)};
	aref		$tmp112 manifoldMulti.hextile3 $const4 	%line{587} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.w $const5 $tmp112 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:587
#                                        FromFlatHexTileData(manifoldMulti.hextile3)};
	aref		$tmp113 manifoldMulti.hextile3 $const5 	%line{587} %argrw{"wrr"}
# PxrMultiTexture.osl:584
#     HexTileData hexData[NUM_STGRPS] = {FromFlatHexTileData(manifoldMulti.hextile0),
	aassign		hexData.r $const5 $tmp113 	%line{584} %argrw{"wrr"}
# PxrMultiTexture.osl:588
#     HexTileTexture hexTex[NUM_STGRPS] = {HEXTILETEXTURE_ZERO, HEXTILETEXTURE_ZERO,
	aassign		hexTex.powerTtoG $const2 $const40 	%line{588} %argrw{"wrr"}
	aassign		hexTex.powerGtoT $const2 $const40 	%argrw{"wrr"}
	aassign		hexTex.powerTtoG $const3 $const40 	%argrw{"wrr"}
	aassign		hexTex.powerGtoT $const3 $const40 	%argrw{"wrr"}
	aassign		hexTex.powerTtoG $const4 $const40 	%argrw{"wrr"}
	aassign		hexTex.powerGtoT $const4 $const40 	%argrw{"wrr"}
	aassign		hexTex.powerTtoG $const5 $const40 	%argrw{"wrr"}
	aassign		hexTex.powerGtoT $const5 $const40 	%argrw{"wrr"}
# PxrMultiTexture.osl:591
#     int doHexTile = validHexTileData(hexData[0]) + validHexTileData(hexData[1]) +
	aref		$tmp123.s hexData.s $const2 	%line{591} %argrw{"wrr"}
	aref		$tmp123.t hexData.t $const2 	%argrw{"wrr"}
	aref		$tmp123.w hexData.w $const2 	%argrw{"wrr"}
	aref		$tmp123.r hexData.r $const2 	%argrw{"wrr"}
	functioncall	$const41 305 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:78
#     return hxt.w == INVALID_HEXTILE_WEIGHT ? 0 : 1;
	eq		$tmp125 $tmp123.w $const7 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{78} %argrw{"wrr"}
	if		$tmp125 303 304 	%argrw{"r"}
	assign		$tmp122 $const2 	%argrw{"wr"}
	assign		$tmp122 $const3 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:591
#     int doHexTile = validHexTileData(hexData[0]) + validHexTileData(hexData[1]) +
	aref		$tmp127.s hexData.s $const3 	%filename{"PxrMultiTexture.osl"} %line{591} %argrw{"wrr"}
	aref		$tmp127.t hexData.t $const3 	%argrw{"wrr"}
	aref		$tmp127.w hexData.w $const3 	%argrw{"wrr"}
	aref		$tmp127.r hexData.r $const3 	%argrw{"wrr"}
	functioncall	$const41 315 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:78
#     return hxt.w == INVALID_HEXTILE_WEIGHT ? 0 : 1;
	eq		$tmp129 $tmp127.w $const7 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{78} %argrw{"wrr"}
	if		$tmp129 313 314 	%argrw{"r"}
	assign		$tmp126 $const2 	%argrw{"wr"}
	assign		$tmp126 $const3 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:591
#     int doHexTile = validHexTileData(hexData[0]) + validHexTileData(hexData[1]) +
	add		$tmp130 $tmp122 $tmp126 	%filename{"PxrMultiTexture.osl"} %line{591} %argrw{"wrr"}
# PxrMultiTexture.osl:592
#                     validHexTileData(hexData[2]) + validHexTileData(hexData[3]);
	aref		$tmp132.s hexData.s $const4 	%line{592} %argrw{"wrr"}
	aref		$tmp132.t hexData.t $const4 	%argrw{"wrr"}
	aref		$tmp132.w hexData.w $const4 	%argrw{"wrr"}
	aref		$tmp132.r hexData.r $const4 	%argrw{"wrr"}
	functioncall	$const41 326 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:78
#     return hxt.w == INVALID_HEXTILE_WEIGHT ? 0 : 1;
	eq		$tmp134 $tmp132.w $const7 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{78} %argrw{"wrr"}
	if		$tmp134 324 325 	%argrw{"r"}
	assign		$tmp131 $const2 	%argrw{"wr"}
	assign		$tmp131 $const3 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:591
#     int doHexTile = validHexTileData(hexData[0]) + validHexTileData(hexData[1]) +
	add		$tmp135 $tmp130 $tmp131 	%filename{"PxrMultiTexture.osl"} %line{591} %argrw{"wrr"}
# PxrMultiTexture.osl:592
#                     validHexTileData(hexData[2]) + validHexTileData(hexData[3]);
	aref		$tmp137.s hexData.s $const5 	%line{592} %argrw{"wrr"}
	aref		$tmp137.t hexData.t $const5 	%argrw{"wrr"}
	aref		$tmp137.w hexData.w $const5 	%argrw{"wrr"}
	aref		$tmp137.r hexData.r $const5 	%argrw{"wrr"}
	functioncall	$const41 337 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:78
#     return hxt.w == INVALID_HEXTILE_WEIGHT ? 0 : 1;
	eq		$tmp139 $tmp137.w $const7 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{78} %argrw{"wrr"}
	if		$tmp139 335 336 	%argrw{"r"}
	assign		$tmp136 $const2 	%argrw{"wr"}
	assign		$tmp136 $const3 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:592
#                     validHexTileData(hexData[2]) + validHexTileData(hexData[3]);
	add		doHexTile $tmp135 $tmp136 	%filename{"PxrMultiTexture.osl"} %line{592} %argrw{"wrr"}
# PxrMultiTexture.osl:599
#     int minNumTex = min(10, manifoldMulti.minNumTextures);
	min		minNumTex $const42 manifoldMulti.minNumTextures 	%line{599} %argrw{"wrr"}
# PxrMultiTexture.osl:600
#     int numRequested = max(manifoldMulti.numTextures, minNumTex);
	max		numRequested manifoldMulti.numTextures minNumTex 	%line{600} %argrw{"wrr"}
# PxrMultiTexture.osl:601
#     float numTexturesF = manifoldMulti.numTextures;
	assign		numTexturesF manifoldMulti.numTextures 	%line{601} %argrw{"wr"}
# PxrMultiTexture.osl:620
#     float objSeed = valid_out_flt;
	assign		objSeed $const3 	%line{620} %argrw{"wr"}
# PxrMultiTexture.osl:621
#     vector nullvec = null_out_vec;
	assign		nullvec $const1 	%line{621} %argrw{"wr"}
# PxrMultiTexture.osl:622
#     getRandomVector(randomSource, randomSeed, matchCppPattern,
	functioncall	$const43 1123 	%line{622} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:120
#     float seed = 0.0;
	assign		___755_seed $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h"} %line{120} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:121
#     if (source == k_src_objectId)
	eq		$tmp140 randomSource $const2 	%line{121} %argrw{"wrr"}
	if		$tmp140 351 370 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:124
#         getattribute("builtin", "id", itmp);
	getattribute	$tmp141 $const44 $const45 ___756_itmp 	%line{124} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:128
#         seed = itmp * 3 + 1;
	mul		$tmp142 ___756_itmp $const5 	%line{128} %argrw{"wrr"}
	add		$tmp143 $tmp142 $const3 	%argrw{"wrr"}
	assign		___755_seed $tmp143 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:130
#     else if (source == k_src_objectName)
	eq		$tmp144 randomSource $const3 	%line{130} %argrw{"wrr"}
	if		$tmp144 366 370 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:133
#         COMPAT_NAME_HASH(seed);
	eq		$tmp145 matchCppPattern $const2 	%line{133} %argrw{"wrr"}
	neq		$tmp146 $tmp145 $const2 	%argrw{"wrr"}
	if		$tmp146 356 360 	%argrw{"r"}
	getattribute	$tmp147 $const46 ___755_seed 	%argrw{"wrw"}
	eq		$tmp148 $tmp147 $const2 	%argrw{"wrr"}
	neq		$tmp149 $tmp148 $const2 	%argrw{"wrr"}
	assign		$tmp146 $tmp149 	%argrw{"wr"}
	if		$tmp146 366 366 	%argrw{"r"}
	assign		___758_idname $const47 	%argrw{"wr"}
	getattribute	$tmp150 $const48 ___758_idname 	%argrw{"wrw"}
	hash		$tmp151 ___758_idname 	%argrw{"wr"}
	mod		$tmp152 $tmp151 $const49 	%argrw{"wrr"}
	assign		___755_seed $tmp152 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:135
#     else if (source == k_src_constant)
	eq		$tmp153 randomSource $const5 	%line{135} %argrw{"wrr"}
	if		$tmp153 369 370 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:137
#             seed = 0.0;
	assign		___755_seed $const18 	%line{137} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:141
#         error("PxrMultiTex::getRandomVector :"
	error		$const50 randomSource 	%line{141} %argrw{"rr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:146
#     float procPrimId = 0;
	assign		___755_procPrimId $const2 	%line{146} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:147
#     if (getattribute("user:procprimid", procPrimId))
	getattribute	$tmp154 $const51 ___755_procPrimId 	%line{147} %argrw{"wrw"}
	if		$tmp154 379 379 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:149
#         seed = mod(seed + procPrimId, 65535);
	add		$tmp155 ___755_seed ___755_procPrimId 	%line{149} %argrw{"wrr"}
	functioncall	$const54 379 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp157 $tmp155 $const53 	%filename{"/Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp156 $tmp157 	%argrw{"wr"}
	mul		$tmp158 $const53 $tmp156 	%argrw{"wrr"}
	sub		___755_seed $tmp155 $tmp158 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:153
#     if (!matchCppPattern) seed = fmod(seed, 65536.0);
	eq		$tmp159 matchCppPattern $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h"} %line{153} %argrw{"wrr"}
	if		$tmp159 382 382 	%argrw{"r"}
	fmod		___755_seed ___755_seed $const55 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:155
#     if (randVec)
	neq		$tmp160 nullvec $const18 	%line{155} %argrw{"wrr"}
	if		$tmp160 631 631 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:157
#         randVec = matchCppPattern ?
	if		matchCppPattern 625 628 	%line{157} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:158
#                     rxcellnoise(vector(seed + extraSeed)) :
	add		$tmp162 ___755_seed randomSeed 	%line{158} %argrw{"wrr"}
	assign		$tmp161 $tmp162 	%argrw{"wr"}
	functioncall	$const56 625 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:954
#     noise_parameters np = {3, 3, INPUT3W(seed), point(0), NONPERIODIC};
	assign		___621_np.domain $const5 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h"} %line{954} %argrw{"wr"}
	assign		___621_np.range $const5 	%argrw{"wr"}
	compref		$tmp164 $tmp161 $const2 	%argrw{"wrr"}
	fmod		$tmp163 $tmp164 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const2 $tmp163 	%argrw{"wrr"}
	compref		$tmp166 $tmp161 $const3 	%argrw{"wrr"}
	fmod		$tmp165 $tmp166 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const3 $tmp165 	%argrw{"wrr"}
	compref		$tmp168 $tmp161 $const4 	%argrw{"wrr"}
	fmod		$tmp167 $tmp168 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const4 $tmp167 	%argrw{"wrr"}
	aassign		___621_np.input $const5 $const2 	%argrw{"wrr"}
	assign		___621_np.result $const6 	%argrw{"wr"}
	assign		___621_np.periodic $const2 	%argrw{"wr"}
	assign		___621_np.period $const57 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:955
#     rx_cell_noise(np);
	functioncall	$const58 621 	%line{955} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:68
#     float rxcellrandtable[4096] = {
	assign		___558_rxcellrandtable $const59 	%line{68} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:582
#     int rxcellpermute[4096] = {
	assign		___558_rxcellpermute $const60 	%line{582} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:904
#     int k = 0;
	assign		___558_k $const2 	%line{904} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:905
#     if (np.domain == 1)
	eq		$tmp169 ___621_np.domain $const3 	%line{905} %argrw{"wrr"}
	if		$tmp169 435 621 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:907
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp170 ___621_np.input $const2 	%line{907} %argrw{"wrr"}
	add		___558_v0 $tmp170 $const61 	%argrw{"wrr"}
	lt		$tmp171 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp171 418 422 	%argrw{"r"}
	lt		$tmp172 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp172 416 418 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp173 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp173 $const3 	%argrw{"wrr"}
	gt		$tmp174 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp174 421 422 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	for		$tmp176 424 426 432 435 	%line{908} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp175 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp176 $tmp175 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:910
#             v0 = rxcellrandtable[CELLPERMUTE(int00)];
	bitand		$tmp177 ___558_int00 $const64 	%line{910} %argrw{"wrr"}
	aref		$tmp178 ___558_rxcellpermute $tmp177 	%argrw{"wrr"}
	aref		___558_v0 ___558_rxcellrandtable $tmp178 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:911
#             np.result[k++] = v0;
	assign		$tmp179 ___558_k 	%line{911} %argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp179 ___558_v0 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	assign		$tmp180 ___558_i 	%line{908} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:914
#     else if (np.domain == 2)
	eq		$tmp181 ___621_np.domain $const4 	%line{914} %argrw{"wrr"}
	if		$tmp181 480 621 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:916
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp182 ___621_np.input $const2 	%line{916} %argrw{"wrr"}
	add		___558_v0 $tmp182 $const61 	%argrw{"wrr"}
	lt		$tmp183 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp183 446 450 	%argrw{"r"}
	lt		$tmp184 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp184 444 446 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp185 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp185 $const3 	%argrw{"wrr"}
	gt		$tmp186 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp186 449 450 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:917
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp187 ___621_np.input $const3 	%line{917} %argrw{"wrr"}
	add		___558_v0 $tmp187 $const61 	%argrw{"wrr"}
	lt		$tmp188 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp188 459 463 	%argrw{"r"}
	lt		$tmp189 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp189 457 459 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp190 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp190 $const3 	%argrw{"wrr"}
	gt		$tmp191 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp191 462 463 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	for		$tmp193 465 467 476 480 	%line{918} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp192 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp193 $tmp192 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:920
#             iy = CELLPERMUTE(int01);
	bitand		$tmp194 ___558_int01 $const64 	%line{920} %argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp194 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:921
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(iy + int00)];
	add		$tmp195 ___558_iy ___558_int00 	%line{921} %argrw{"wrr"}
	bitand		$tmp196 $tmp195 $const64 	%argrw{"wrr"}
	aref		$tmp197 ___558_rxcellpermute $tmp196 	%argrw{"wrr"}
	aref		$tmp198 ___558_rxcellrandtable $tmp197 	%argrw{"wrr"}
	assign		$tmp199 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp199 $tmp198 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	assign		$tmp200 ___558_i 	%line{918} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:924
#     else if (np.domain == 3)
	eq		$tmp201 ___621_np.domain $const5 	%line{924} %argrw{"wrr"}
	if		$tmp201 542 621 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:926
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp202 ___621_np.input $const2 	%line{926} %argrw{"wrr"}
	add		___558_v0 $tmp202 $const61 	%argrw{"wrr"}
	lt		$tmp203 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp203 491 495 	%argrw{"r"}
	lt		$tmp204 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp204 489 491 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp205 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp205 $const3 	%argrw{"wrr"}
	gt		$tmp206 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp206 494 495 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:927
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp207 ___621_np.input $const3 	%line{927} %argrw{"wrr"}
	add		___558_v0 $tmp207 $const61 	%argrw{"wrr"}
	lt		$tmp208 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp208 504 508 	%argrw{"r"}
	lt		$tmp209 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp209 502 504 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp210 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp210 $const3 	%argrw{"wrr"}
	gt		$tmp211 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp211 507 508 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:928
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp212 ___621_np.input $const4 	%line{928} %argrw{"wrr"}
	add		___558_v0 $tmp212 $const61 	%argrw{"wrr"}
	lt		$tmp213 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp213 517 521 	%argrw{"r"}
	lt		$tmp214 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp214 515 517 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp215 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp215 $const3 	%argrw{"wrr"}
	gt		$tmp216 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp216 520 521 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	for		$tmp218 523 525 537 542 	%line{929} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp217 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp218 $tmp217 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:931
#             iz = CELLPERMUTE(int02);
	bitand		$tmp219 ___558_int02 $const64 	%line{931} %argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp219 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:932
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp220 ___558_int01 ___558_iz 	%line{932} %argrw{"wrr"}
	bitand		$tmp221 $tmp220 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp221 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:933
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp222 ___558_int00 ___558_iy 	%line{933} %argrw{"wrr"}
	bitand		$tmp223 $tmp222 $const64 	%argrw{"wrr"}
	aref		$tmp224 ___558_rxcellpermute $tmp223 	%argrw{"wrr"}
	aref		$tmp225 ___558_rxcellrandtable $tmp224 	%argrw{"wrr"}
	assign		$tmp226 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp226 $tmp225 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	assign		$tmp227 ___558_i 	%line{929} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:936
#     else if (np.domain == 4)
	eq		$tmp228 ___621_np.domain $const34 	%line{936} %argrw{"wrr"}
	if		$tmp228 621 621 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:938
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp229 ___621_np.input $const2 	%line{938} %argrw{"wrr"}
	add		___558_v0 $tmp229 $const61 	%argrw{"wrr"}
	lt		$tmp230 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp230 553 557 	%argrw{"r"}
	lt		$tmp231 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp231 551 553 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp232 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp232 $const3 	%argrw{"wrr"}
	gt		$tmp233 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp233 556 557 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:939
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp234 ___621_np.input $const3 	%line{939} %argrw{"wrr"}
	add		___558_v0 $tmp234 $const61 	%argrw{"wrr"}
	lt		$tmp235 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp235 566 570 	%argrw{"r"}
	lt		$tmp236 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp236 564 566 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp237 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp237 $const3 	%argrw{"wrr"}
	gt		$tmp238 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp238 569 570 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:940
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp239 ___621_np.input $const4 	%line{940} %argrw{"wrr"}
	add		___558_v0 $tmp239 $const61 	%argrw{"wrr"}
	lt		$tmp240 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp240 579 583 	%argrw{"r"}
	lt		$tmp241 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp241 577 579 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp242 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp242 $const3 	%argrw{"wrr"}
	gt		$tmp243 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp243 582 583 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:941
#         SETUP_CELL_DOMAIN(3, int03);
	aref		$tmp244 ___621_np.input $const5 	%line{941} %argrw{"wrr"}
	add		___558_v0 $tmp244 $const61 	%argrw{"wrr"}
	lt		$tmp245 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp245 592 596 	%argrw{"r"}
	lt		$tmp246 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp246 590 592 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		$tmp247 ___558_v0 	%argrw{"wr"}
	sub		___558_int03 $tmp247 $const3 	%argrw{"wrr"}
	gt		$tmp248 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp248 595 596 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		___558_int03 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	for		$tmp250 598 600 615 621 	%line{942} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp249 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp250 $tmp249 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:944
#             iz = CELLPERMUTE(int02 + CELLPERMUTE(int03));
	bitand		$tmp251 ___558_int03 $const64 	%line{944} %argrw{"wrr"}
	aref		$tmp252 ___558_rxcellpermute $tmp251 	%argrw{"wrr"}
	add		$tmp253 ___558_int02 $tmp252 	%argrw{"wrr"}
	bitand		$tmp254 $tmp253 $const64 	%argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp254 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:945
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp255 ___558_int01 ___558_iz 	%line{945} %argrw{"wrr"}
	bitand		$tmp256 $tmp255 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp256 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:946
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp257 ___558_int00 ___558_iy 	%line{946} %argrw{"wrr"}
	bitand		$tmp258 $tmp257 $const64 	%argrw{"wrr"}
	aref		$tmp259 ___558_rxcellpermute $tmp258 	%argrw{"wrr"}
	aref		$tmp260 ___558_rxcellrandtable $tmp259 	%argrw{"wrr"}
	assign		$tmp261 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp261 $tmp260 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	assign		$tmp262 ___558_i 	%line{942} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
	add		___558_int03 ___558_int03 $const65 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:956
#     return point(np.result[0], np.result[1], np.result[2]);
	compref		$tmp263 ___621_np.result $const2 	%line{956} %argrw{"wrr"}
	compref		$tmp264 ___621_np.result $const3 	%argrw{"wrr"}
	compref		$tmp265 ___621_np.result $const4 	%argrw{"wrr"}
	point		nullvec $tmp263 $tmp264 $tmp265 	%argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:159
#                     noise("cell", vector(seed + extraSeed));
	add		$tmp267 ___755_seed randomSeed 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h"} %line{159} %argrw{"wrr"}
	assign		$tmp266 $tmp267 	%argrw{"wr"}
	noise		nullvec $const66 $tmp266 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:161
#         randVec = normalize((randVec - vector(0.5)) * 2.0);
	sub		$tmp269 nullvec $const67 	%line{161} %argrw{"wrr"}
	mul		$tmp270 $tmp269 $const68 	%argrw{"wrr"}
	normalize	nullvec $tmp270 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:164
#     if (randVec2)
	neq		$tmp271 nullvec $const18 	%line{164} %argrw{"wrr"}
	if		$tmp271 882 882 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:166
#         randVec2 = matchCppPattern ?
	if		matchCppPattern 875 879 	%line{166} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:167
#                         rxcellnoise(vector(seed * 2.0 + extraSeed)) :
	mul		$tmp273 ___755_seed $const68 	%line{167} %argrw{"wrr"}
	add		$tmp274 $tmp273 randomSeed 	%argrw{"wrr"}
	assign		$tmp272 $tmp274 	%argrw{"wr"}
	functioncall	$const56 875 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:954
#     noise_parameters np = {3, 3, INPUT3W(seed), point(0), NONPERIODIC};
	assign		___621_np.domain $const5 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h"} %line{954} %argrw{"wr"}
	assign		___621_np.range $const5 	%argrw{"wr"}
	compref		$tmp276 $tmp272 $const2 	%argrw{"wrr"}
	fmod		$tmp275 $tmp276 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const2 $tmp275 	%argrw{"wrr"}
	compref		$tmp278 $tmp272 $const3 	%argrw{"wrr"}
	fmod		$tmp277 $tmp278 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const3 $tmp277 	%argrw{"wrr"}
	compref		$tmp280 $tmp272 $const4 	%argrw{"wrr"}
	fmod		$tmp279 $tmp280 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const4 $tmp279 	%argrw{"wrr"}
	aassign		___621_np.input $const5 $const2 	%argrw{"wrr"}
	assign		___621_np.result $const6 	%argrw{"wr"}
	assign		___621_np.periodic $const2 	%argrw{"wr"}
	assign		___621_np.period $const57 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:955
#     rx_cell_noise(np);
	functioncall	$const58 871 	%line{955} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:68
#     float rxcellrandtable[4096] = {
	assign		___558_rxcellrandtable $const59 	%line{68} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:582
#     int rxcellpermute[4096] = {
	assign		___558_rxcellpermute $const60 	%line{582} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:904
#     int k = 0;
	assign		___558_k $const2 	%line{904} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:905
#     if (np.domain == 1)
	eq		$tmp281 ___621_np.domain $const3 	%line{905} %argrw{"wrr"}
	if		$tmp281 685 871 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:907
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp282 ___621_np.input $const2 	%line{907} %argrw{"wrr"}
	add		___558_v0 $tmp282 $const61 	%argrw{"wrr"}
	lt		$tmp283 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp283 668 672 	%argrw{"r"}
	lt		$tmp284 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp284 666 668 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp285 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp285 $const3 	%argrw{"wrr"}
	gt		$tmp286 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp286 671 672 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	for		$tmp288 674 676 682 685 	%line{908} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp287 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp288 $tmp287 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:910
#             v0 = rxcellrandtable[CELLPERMUTE(int00)];
	bitand		$tmp289 ___558_int00 $const64 	%line{910} %argrw{"wrr"}
	aref		$tmp290 ___558_rxcellpermute $tmp289 	%argrw{"wrr"}
	aref		___558_v0 ___558_rxcellrandtable $tmp290 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:911
#             np.result[k++] = v0;
	assign		$tmp291 ___558_k 	%line{911} %argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp291 ___558_v0 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	assign		$tmp292 ___558_i 	%line{908} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:914
#     else if (np.domain == 2)
	eq		$tmp293 ___621_np.domain $const4 	%line{914} %argrw{"wrr"}
	if		$tmp293 730 871 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:916
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp294 ___621_np.input $const2 	%line{916} %argrw{"wrr"}
	add		___558_v0 $tmp294 $const61 	%argrw{"wrr"}
	lt		$tmp295 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp295 696 700 	%argrw{"r"}
	lt		$tmp296 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp296 694 696 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp297 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp297 $const3 	%argrw{"wrr"}
	gt		$tmp298 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp298 699 700 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:917
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp299 ___621_np.input $const3 	%line{917} %argrw{"wrr"}
	add		___558_v0 $tmp299 $const61 	%argrw{"wrr"}
	lt		$tmp300 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp300 709 713 	%argrw{"r"}
	lt		$tmp301 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp301 707 709 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp302 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp302 $const3 	%argrw{"wrr"}
	gt		$tmp303 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp303 712 713 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	for		$tmp305 715 717 726 730 	%line{918} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp304 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp305 $tmp304 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:920
#             iy = CELLPERMUTE(int01);
	bitand		$tmp306 ___558_int01 $const64 	%line{920} %argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp306 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:921
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(iy + int00)];
	add		$tmp307 ___558_iy ___558_int00 	%line{921} %argrw{"wrr"}
	bitand		$tmp308 $tmp307 $const64 	%argrw{"wrr"}
	aref		$tmp309 ___558_rxcellpermute $tmp308 	%argrw{"wrr"}
	aref		$tmp310 ___558_rxcellrandtable $tmp309 	%argrw{"wrr"}
	assign		$tmp311 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp311 $tmp310 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	assign		$tmp312 ___558_i 	%line{918} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:924
#     else if (np.domain == 3)
	eq		$tmp313 ___621_np.domain $const5 	%line{924} %argrw{"wrr"}
	if		$tmp313 792 871 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:926
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp314 ___621_np.input $const2 	%line{926} %argrw{"wrr"}
	add		___558_v0 $tmp314 $const61 	%argrw{"wrr"}
	lt		$tmp315 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp315 741 745 	%argrw{"r"}
	lt		$tmp316 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp316 739 741 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp317 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp317 $const3 	%argrw{"wrr"}
	gt		$tmp318 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp318 744 745 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:927
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp319 ___621_np.input $const3 	%line{927} %argrw{"wrr"}
	add		___558_v0 $tmp319 $const61 	%argrw{"wrr"}
	lt		$tmp320 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp320 754 758 	%argrw{"r"}
	lt		$tmp321 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp321 752 754 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp322 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp322 $const3 	%argrw{"wrr"}
	gt		$tmp323 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp323 757 758 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:928
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp324 ___621_np.input $const4 	%line{928} %argrw{"wrr"}
	add		___558_v0 $tmp324 $const61 	%argrw{"wrr"}
	lt		$tmp325 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp325 767 771 	%argrw{"r"}
	lt		$tmp326 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp326 765 767 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp327 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp327 $const3 	%argrw{"wrr"}
	gt		$tmp328 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp328 770 771 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	for		$tmp330 773 775 787 792 	%line{929} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp329 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp330 $tmp329 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:931
#             iz = CELLPERMUTE(int02);
	bitand		$tmp331 ___558_int02 $const64 	%line{931} %argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp331 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:932
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp332 ___558_int01 ___558_iz 	%line{932} %argrw{"wrr"}
	bitand		$tmp333 $tmp332 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp333 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:933
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp334 ___558_int00 ___558_iy 	%line{933} %argrw{"wrr"}
	bitand		$tmp335 $tmp334 $const64 	%argrw{"wrr"}
	aref		$tmp336 ___558_rxcellpermute $tmp335 	%argrw{"wrr"}
	aref		$tmp337 ___558_rxcellrandtable $tmp336 	%argrw{"wrr"}
	assign		$tmp338 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp338 $tmp337 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	assign		$tmp339 ___558_i 	%line{929} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:936
#     else if (np.domain == 4)
	eq		$tmp340 ___621_np.domain $const34 	%line{936} %argrw{"wrr"}
	if		$tmp340 871 871 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:938
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp341 ___621_np.input $const2 	%line{938} %argrw{"wrr"}
	add		___558_v0 $tmp341 $const61 	%argrw{"wrr"}
	lt		$tmp342 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp342 803 807 	%argrw{"r"}
	lt		$tmp343 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp343 801 803 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp344 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp344 $const3 	%argrw{"wrr"}
	gt		$tmp345 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp345 806 807 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:939
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp346 ___621_np.input $const3 	%line{939} %argrw{"wrr"}
	add		___558_v0 $tmp346 $const61 	%argrw{"wrr"}
	lt		$tmp347 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp347 816 820 	%argrw{"r"}
	lt		$tmp348 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp348 814 816 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp349 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp349 $const3 	%argrw{"wrr"}
	gt		$tmp350 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp350 819 820 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:940
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp351 ___621_np.input $const4 	%line{940} %argrw{"wrr"}
	add		___558_v0 $tmp351 $const61 	%argrw{"wrr"}
	lt		$tmp352 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp352 829 833 	%argrw{"r"}
	lt		$tmp353 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp353 827 829 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp354 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp354 $const3 	%argrw{"wrr"}
	gt		$tmp355 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp355 832 833 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:941
#         SETUP_CELL_DOMAIN(3, int03);
	aref		$tmp356 ___621_np.input $const5 	%line{941} %argrw{"wrr"}
	add		___558_v0 $tmp356 $const61 	%argrw{"wrr"}
	lt		$tmp357 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp357 842 846 	%argrw{"r"}
	lt		$tmp358 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp358 840 842 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		$tmp359 ___558_v0 	%argrw{"wr"}
	sub		___558_int03 $tmp359 $const3 	%argrw{"wrr"}
	gt		$tmp360 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp360 845 846 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		___558_int03 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	for		$tmp362 848 850 865 871 	%line{942} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp361 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp362 $tmp361 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:944
#             iz = CELLPERMUTE(int02 + CELLPERMUTE(int03));
	bitand		$tmp363 ___558_int03 $const64 	%line{944} %argrw{"wrr"}
	aref		$tmp364 ___558_rxcellpermute $tmp363 	%argrw{"wrr"}
	add		$tmp365 ___558_int02 $tmp364 	%argrw{"wrr"}
	bitand		$tmp366 $tmp365 $const64 	%argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp366 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:945
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp367 ___558_int01 ___558_iz 	%line{945} %argrw{"wrr"}
	bitand		$tmp368 $tmp367 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp368 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:946
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp369 ___558_int00 ___558_iy 	%line{946} %argrw{"wrr"}
	bitand		$tmp370 $tmp369 $const64 	%argrw{"wrr"}
	aref		$tmp371 ___558_rxcellpermute $tmp370 	%argrw{"wrr"}
	aref		$tmp372 ___558_rxcellrandtable $tmp371 	%argrw{"wrr"}
	assign		$tmp373 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp373 $tmp372 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	assign		$tmp374 ___558_i 	%line{942} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
	add		___558_int03 ___558_int03 $const65 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:956
#     return point(np.result[0], np.result[1], np.result[2]);
	compref		$tmp375 ___621_np.result $const2 	%line{956} %argrw{"wrr"}
	compref		$tmp376 ___621_np.result $const3 	%argrw{"wrr"}
	compref		$tmp377 ___621_np.result $const4 	%argrw{"wrr"}
	point		nullvec $tmp375 $tmp376 $tmp377 	%argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:168
#                         noise("cell", vector(seed * 2.0 + extraSeed));
	mul		$tmp379 ___755_seed $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h"} %line{168} %argrw{"wrr"}
	add		$tmp380 $tmp379 randomSeed 	%argrw{"wrr"}
	assign		$tmp378 $tmp380 	%argrw{"wr"}
	noise		nullvec $const66 $tmp378 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:170
#         randVec2 = normalize((randVec2 - vector(0.5)) * 2.0);
	sub		$tmp382 nullvec $const67 	%line{170} %argrw{"wrr"}
	mul		$tmp383 $tmp382 $const68 	%argrw{"wrr"}
	normalize	nullvec $tmp383 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:173
#     if (randFlt)
	neq		$tmp384 objSeed $const18 	%line{173} %argrw{"wrr"}
	if		$tmp384 1123 1123 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:175
#         if (randVec)
	neq		$tmp385 nullvec $const18 	%line{175} %argrw{"wrr"}
	if		$tmp385 887 1123 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:176
#             randFlt = randVec[0];
	compref		objSeed nullvec $const2 	%line{176} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:177
#         else if (randVec2)
	neq		$tmp386 nullvec $const18 	%line{177} %argrw{"wrr"}
	if		$tmp386 890 1123 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:178
#             randFlt = randVec2[0];
	compref		objSeed nullvec $const2 	%line{178} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:181
#             randFlt = matchCppPattern ?
	if		matchCppPattern 1121 1123 	%line{181} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:182
#                         rxcellnoise(seed + extraSeed) :
	add		$tmp387 ___755_seed randomSeed 	%line{182} %argrw{"wrr"}
	functioncall	$const56 1121 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:975
#     noise_parameters np = {1, 1, INPUT1(seed), point(0), NONPERIODIC};
	assign		___624_np.domain $const3 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h"} %line{975} %argrw{"wr"}
	assign		___624_np.range $const3 	%argrw{"wr"}
	aassign		___624_np.input $const2 $tmp387 	%argrw{"wrr"}
	aassign		___624_np.input $const3 $const2 	%argrw{"wrr"}
	aassign		___624_np.input $const4 $const2 	%argrw{"wrr"}
	aassign		___624_np.input $const5 $const2 	%argrw{"wrr"}
	assign		___624_np.result $const6 	%argrw{"wr"}
	assign		___624_np.periodic $const2 	%argrw{"wr"}
	assign		___624_np.period $const57 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:976
#     rx_cell_noise(np);
	functioncall	$const58 1120 	%line{976} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:68
#     float rxcellrandtable[4096] = {
	assign		___558_rxcellrandtable $const59 	%line{68} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:582
#     int rxcellpermute[4096] = {
	assign		___558_rxcellpermute $const60 	%line{582} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:904
#     int k = 0;
	assign		___558_k $const2 	%line{904} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:905
#     if (np.domain == 1)
	eq		$tmp388 ___624_np.domain $const3 	%line{905} %argrw{"wrr"}
	if		$tmp388 934 1120 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:907
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp389 ___624_np.input $const2 	%line{907} %argrw{"wrr"}
	add		___558_v0 $tmp389 $const61 	%argrw{"wrr"}
	lt		$tmp390 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp390 917 921 	%argrw{"r"}
	lt		$tmp391 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp391 915 917 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp392 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp392 $const3 	%argrw{"wrr"}
	gt		$tmp393 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp393 920 921 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	for		$tmp395 923 925 931 934 	%line{908} %argrw{"r"}
	assign		___558_i ___624_np.range 	%argrw{"wr"}
	gt		$tmp394 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp395 $tmp394 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:910
#             v0 = rxcellrandtable[CELLPERMUTE(int00)];
	bitand		$tmp396 ___558_int00 $const64 	%line{910} %argrw{"wrr"}
	aref		$tmp397 ___558_rxcellpermute $tmp396 	%argrw{"wrr"}
	aref		___558_v0 ___558_rxcellrandtable $tmp397 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:911
#             np.result[k++] = v0;
	assign		$tmp398 ___558_k 	%line{911} %argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___624_np.result $tmp398 ___558_v0 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	assign		$tmp399 ___558_i 	%line{908} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:914
#     else if (np.domain == 2)
	eq		$tmp400 ___624_np.domain $const4 	%line{914} %argrw{"wrr"}
	if		$tmp400 979 1120 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:916
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp401 ___624_np.input $const2 	%line{916} %argrw{"wrr"}
	add		___558_v0 $tmp401 $const61 	%argrw{"wrr"}
	lt		$tmp402 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp402 945 949 	%argrw{"r"}
	lt		$tmp403 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp403 943 945 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp404 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp404 $const3 	%argrw{"wrr"}
	gt		$tmp405 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp405 948 949 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:917
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp406 ___624_np.input $const3 	%line{917} %argrw{"wrr"}
	add		___558_v0 $tmp406 $const61 	%argrw{"wrr"}
	lt		$tmp407 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp407 958 962 	%argrw{"r"}
	lt		$tmp408 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp408 956 958 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp409 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp409 $const3 	%argrw{"wrr"}
	gt		$tmp410 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp410 961 962 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	for		$tmp412 964 966 975 979 	%line{918} %argrw{"r"}
	assign		___558_i ___624_np.range 	%argrw{"wr"}
	gt		$tmp411 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp412 $tmp411 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:920
#             iy = CELLPERMUTE(int01);
	bitand		$tmp413 ___558_int01 $const64 	%line{920} %argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp413 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:921
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(iy + int00)];
	add		$tmp414 ___558_iy ___558_int00 	%line{921} %argrw{"wrr"}
	bitand		$tmp415 $tmp414 $const64 	%argrw{"wrr"}
	aref		$tmp416 ___558_rxcellpermute $tmp415 	%argrw{"wrr"}
	aref		$tmp417 ___558_rxcellrandtable $tmp416 	%argrw{"wrr"}
	assign		$tmp418 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___624_np.result $tmp418 $tmp417 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	assign		$tmp419 ___558_i 	%line{918} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:924
#     else if (np.domain == 3)
	eq		$tmp420 ___624_np.domain $const5 	%line{924} %argrw{"wrr"}
	if		$tmp420 1041 1120 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:926
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp421 ___624_np.input $const2 	%line{926} %argrw{"wrr"}
	add		___558_v0 $tmp421 $const61 	%argrw{"wrr"}
	lt		$tmp422 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp422 990 994 	%argrw{"r"}
	lt		$tmp423 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp423 988 990 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp424 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp424 $const3 	%argrw{"wrr"}
	gt		$tmp425 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp425 993 994 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:927
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp426 ___624_np.input $const3 	%line{927} %argrw{"wrr"}
	add		___558_v0 $tmp426 $const61 	%argrw{"wrr"}
	lt		$tmp427 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp427 1003 1007 	%argrw{"r"}
	lt		$tmp428 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp428 1001 1003 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp429 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp429 $const3 	%argrw{"wrr"}
	gt		$tmp430 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp430 1006 1007 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:928
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp431 ___624_np.input $const4 	%line{928} %argrw{"wrr"}
	add		___558_v0 $tmp431 $const61 	%argrw{"wrr"}
	lt		$tmp432 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp432 1016 1020 	%argrw{"r"}
	lt		$tmp433 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp433 1014 1016 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp434 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp434 $const3 	%argrw{"wrr"}
	gt		$tmp435 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp435 1019 1020 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	for		$tmp437 1022 1024 1036 1041 	%line{929} %argrw{"r"}
	assign		___558_i ___624_np.range 	%argrw{"wr"}
	gt		$tmp436 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp437 $tmp436 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:931
#             iz = CELLPERMUTE(int02);
	bitand		$tmp438 ___558_int02 $const64 	%line{931} %argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp438 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:932
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp439 ___558_int01 ___558_iz 	%line{932} %argrw{"wrr"}
	bitand		$tmp440 $tmp439 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp440 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:933
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp441 ___558_int00 ___558_iy 	%line{933} %argrw{"wrr"}
	bitand		$tmp442 $tmp441 $const64 	%argrw{"wrr"}
	aref		$tmp443 ___558_rxcellpermute $tmp442 	%argrw{"wrr"}
	aref		$tmp444 ___558_rxcellrandtable $tmp443 	%argrw{"wrr"}
	assign		$tmp445 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___624_np.result $tmp445 $tmp444 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	assign		$tmp446 ___558_i 	%line{929} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:936
#     else if (np.domain == 4)
	eq		$tmp447 ___624_np.domain $const34 	%line{936} %argrw{"wrr"}
	if		$tmp447 1120 1120 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:938
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp448 ___624_np.input $const2 	%line{938} %argrw{"wrr"}
	add		___558_v0 $tmp448 $const61 	%argrw{"wrr"}
	lt		$tmp449 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp449 1052 1056 	%argrw{"r"}
	lt		$tmp450 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp450 1050 1052 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp451 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp451 $const3 	%argrw{"wrr"}
	gt		$tmp452 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp452 1055 1056 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:939
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp453 ___624_np.input $const3 	%line{939} %argrw{"wrr"}
	add		___558_v0 $tmp453 $const61 	%argrw{"wrr"}
	lt		$tmp454 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp454 1065 1069 	%argrw{"r"}
	lt		$tmp455 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp455 1063 1065 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp456 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp456 $const3 	%argrw{"wrr"}
	gt		$tmp457 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp457 1068 1069 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:940
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp458 ___624_np.input $const4 	%line{940} %argrw{"wrr"}
	add		___558_v0 $tmp458 $const61 	%argrw{"wrr"}
	lt		$tmp459 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp459 1078 1082 	%argrw{"r"}
	lt		$tmp460 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp460 1076 1078 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp461 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp461 $const3 	%argrw{"wrr"}
	gt		$tmp462 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp462 1081 1082 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:941
#         SETUP_CELL_DOMAIN(3, int03);
	aref		$tmp463 ___624_np.input $const5 	%line{941} %argrw{"wrr"}
	add		___558_v0 $tmp463 $const61 	%argrw{"wrr"}
	lt		$tmp464 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp464 1091 1095 	%argrw{"r"}
	lt		$tmp465 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp465 1089 1091 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		$tmp466 ___558_v0 	%argrw{"wr"}
	sub		___558_int03 $tmp466 $const3 	%argrw{"wrr"}
	gt		$tmp467 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp467 1094 1095 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		___558_int03 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	for		$tmp469 1097 1099 1114 1120 	%line{942} %argrw{"r"}
	assign		___558_i ___624_np.range 	%argrw{"wr"}
	gt		$tmp468 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp469 $tmp468 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:944
#             iz = CELLPERMUTE(int02 + CELLPERMUTE(int03));
	bitand		$tmp470 ___558_int03 $const64 	%line{944} %argrw{"wrr"}
	aref		$tmp471 ___558_rxcellpermute $tmp470 	%argrw{"wrr"}
	add		$tmp472 ___558_int02 $tmp471 	%argrw{"wrr"}
	bitand		$tmp473 $tmp472 $const64 	%argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp473 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:945
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp474 ___558_int01 ___558_iz 	%line{945} %argrw{"wrr"}
	bitand		$tmp475 $tmp474 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp475 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:946
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp476 ___558_int00 ___558_iy 	%line{946} %argrw{"wrr"}
	bitand		$tmp477 $tmp476 $const64 	%argrw{"wrr"}
	aref		$tmp478 ___558_rxcellpermute $tmp477 	%argrw{"wrr"}
	aref		$tmp479 ___558_rxcellrandtable $tmp478 	%argrw{"wrr"}
	assign		$tmp480 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___624_np.result $tmp480 $tmp479 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	assign		$tmp481 ___558_i 	%line{942} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
	add		___558_int03 ___558_int03 $const65 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:977
#     return np.result[0];
	compref		objSeed ___624_np.result $const2 	%line{977} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h:183
#                         noise("cell", seed + extraSeed);
	add		$tmp482 ___755_seed randomSeed 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLMultiManifold.h"} %line{183} %argrw{"wrr"}
	noise		objSeed $const66 $tmp482 	%argrw{"wrr"}
# PxrMultiTexture.osl:624
#     objSeed = floor(objSeed * 1223.0);
	mul		$tmp483 objSeed $const69 	%filename{"PxrMultiTexture.osl"} %line{624} %argrw{"wrr"}
	floor		objSeed $tmp483 	%argrw{"wr"}
# PxrMultiTexture.osl:626
#     int randomize = (randomHue || randomSaturation || randomLuminance || randomGamma);
	neq		$tmp484 randomHue $const18 	%line{626} %argrw{"wrr"}
	if		$tmp484 1127 1129 	%argrw{"r"}
	neq		$tmp485 randomSaturation $const18 	%argrw{"wrr"}
	assign		$tmp484 $tmp485 	%argrw{"wr"}
	neq		$tmp486 $tmp484 $const2 	%argrw{"wrr"}
	if		$tmp486 1131 1133 	%argrw{"r"}
	neq		$tmp487 randomLuminance $const18 	%argrw{"wrr"}
	assign		$tmp486 $tmp487 	%argrw{"wr"}
	neq		$tmp488 $tmp486 $const2 	%argrw{"wrr"}
	if		$tmp488 1135 1137 	%argrw{"r"}
	neq		$tmp489 randomGamma $const18 	%argrw{"wrr"}
	assign		$tmp488 $tmp489 	%argrw{"wr"}
	assign		randomize $tmp488 	%argrw{"wr"}
# PxrMultiTexture.osl:627
#     int doHue = (randomHue != 0.0);
	neq		doHue randomHue $const18 	%line{627} %argrw{"wrr"}
# PxrMultiTexture.osl:628
#     int doSat = (randomSaturation != 0.0);
	neq		doSat randomSaturation $const18 	%line{628} %argrw{"wrr"}
# PxrMultiTexture.osl:629
#     int doLum = (randomLuminance != 0.0);
	neq		doLum randomLuminance $const18 	%line{629} %argrw{"wrr"}
# PxrMultiTexture.osl:630
#     int doGam = (randomGamma != 0.0);
	neq		doGam randomGamma $const18 	%line{630} %argrw{"wrr"}
# PxrMultiTexture.osl:632
#     float rHue = randomHue;
	assign		rHue randomHue 	%line{632} %argrw{"wr"}
# PxrMultiTexture.osl:633
#     float rSat = randomSaturation;
	assign		rSat randomSaturation 	%line{633} %argrw{"wr"}
# PxrMultiTexture.osl:634
#     float rLum = randomLuminance;
	assign		rLum randomLuminance 	%line{634} %argrw{"wr"}
# PxrMultiTexture.osl:635
#     float rGam = randomGamma;
	assign		rGam randomGamma 	%line{635} %argrw{"wr"}
# PxrMultiTexture.osl:639
#     for (int g = 0; g < NUM_STGRPS; g++)
	for		$tmp491 1148 1150 7174 7176 	%line{639} %argrw{"r"}
	assign		___818_g $const2 	%argrw{"wr"}
	lt		$tmp490 ___818_g $const34 	%argrw{"wrr"}
	neq		$tmp491 $tmp490 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:641
#         enable[g] = 0;
	aassign		enable ___818_g $const2 	%line{641} %argrw{"wrr"}
# PxrMultiTexture.osl:645
#         if (sta[g] == null_sta)
	aref		$tmp492 sta ___818_g 	%line{645} %argrw{"wrr"}
	eq		$tmp494 $tmp492 $const7 	%argrw{"wrr"}
	if		$tmp494 1155 1155 	%argrw{"r"}
# PxrMultiTexture.osl:646
#             continue;
	continue	%line{646}
# PxrMultiTexture.osl:651
#         enable[g] = int(idf[g][2]);
	aref		$tmp497 idf ___818_g 	%line{651} %argrw{"wrr"}
	compref		$tmp496 $tmp497 $const4 	%argrw{"wrr"}
	assign		$tmp495 $tmp496 	%argrw{"wr"}
	aassign		enable ___818_g $tmp495 	%argrw{"wrr"}
# PxrMultiTexture.osl:653
#         if (enable[g])
	aref		$tmp498 enable ___818_g 	%line{653} %argrw{"wrr"}
	if		$tmp498 7169 7174 	%argrw{"r"}
# PxrMultiTexture.osl:655
#             int texId = 0;          // texture index
	assign		___820_texId $const2 	%line{655} %argrw{"wr"}
# PxrMultiTexture.osl:656
#             float tx = idf[g][0];   // tile id x
	aref		$tmp499 idf ___818_g 	%line{656} %argrw{"wrr"}
	compref		___820_tx $tmp499 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:657
#             float ty = idf[g][1];   // tile id y
	aref		$tmp500 idf ___818_g 	%line{657} %argrw{"wrr"}
	compref		___820_ty $tmp500 $const3 	%argrw{"wrr"}
# PxrMultiTexture.osl:660
#             if (manifoldMulti.numTextures == 1)
	eq		$tmp501 manifoldMulti.numTextures $const3 	%line{660} %argrw{"wrr"}
	if		$tmp501 1169 1469 	%argrw{"r"}
# PxrMultiTexture.osl:662
#                 texId = 0;
	assign		___820_texId $const2 	%line{662} %argrw{"wr"}
# PxrMultiTexture.osl:666
#                 if (manifoldMulti.textureOrder == k_ordered)
	eq		$tmp502 manifoldMulti.textureOrder $const2 	%line{666} %argrw{"wrr"}
	if		$tmp502 1212 1469 	%argrw{"r"}
# PxrMultiTexture.osl:671
#                     float m = RixMod(tx, minNumTex) +
	assign		$tmp504 minNumTex 	%line{671} %argrw{"wr"}
	functioncall	$const70 1183 	%argrw{"r"}
# PxrMultiTexture.osl:63
#     float n = float(int(x/y));
	div		$tmp506 ___820_tx $tmp504 	%line{63} %argrw{"wrr"}
	assign		$tmp505 $tmp506 	%argrw{"wr"}
	assign		$tmp507 $tmp505 	%argrw{"wr"}
	assign		___816_n $tmp507 	%argrw{"wr"}
# PxrMultiTexture.osl:64
#     float result = x - n*y;
	mul		$tmp508 ___816_n $tmp504 	%line{64} %argrw{"wrr"}
	sub		___816_result ___820_tx $tmp508 	%argrw{"wrr"}
# PxrMultiTexture.osl:65
#     if (result < 0.0) result += y;
	lt		$tmp509 ___816_result $const18 	%line{65} %argrw{"wrr"}
	if		$tmp509 1182 1182 	%argrw{"r"}
	add		___816_result ___816_result $tmp504 	%argrw{"wrr"}
# PxrMultiTexture.osl:66
#     return result;
	assign		$tmp503 ___816_result 	%line{66} %argrw{"wr"}
# PxrMultiTexture.osl:672
#                               RixMod(ty, minNumTex) *
	assign		$tmp511 minNumTex 	%line{672} %argrw{"wr"}
	functioncall	$const70 1195 	%argrw{"r"}
# PxrMultiTexture.osl:63
#     float n = float(int(x/y));
	div		$tmp513 ___820_ty $tmp511 	%line{63} %argrw{"wrr"}
	assign		$tmp512 $tmp513 	%argrw{"wr"}
	assign		$tmp514 $tmp512 	%argrw{"wr"}
	assign		___816_n $tmp514 	%argrw{"wr"}
# PxrMultiTexture.osl:64
#     float result = x - n*y;
	mul		$tmp515 ___816_n $tmp511 	%line{64} %argrw{"wrr"}
	sub		___816_result ___820_ty $tmp515 	%argrw{"wrr"}
# PxrMultiTexture.osl:65
#     if (result < 0.0) result += y;
	lt		$tmp516 ___816_result $const18 	%line{65} %argrw{"wrr"}
	if		$tmp516 1194 1194 	%argrw{"r"}
	add		___816_result ___816_result $tmp511 	%argrw{"wrr"}
# PxrMultiTexture.osl:66
#     return result;
	assign		$tmp510 ___816_result 	%line{66} %argrw{"wr"}
# PxrMultiTexture.osl:673
#                               float(minNumTex);
	assign		$tmp518 minNumTex 	%line{673} %argrw{"wr"}
	assign		$tmp517 $tmp518 	%argrw{"wr"}
# PxrMultiTexture.osl:672
#                               RixMod(ty, minNumTex) *
	mul		$tmp519 $tmp510 $tmp517 	%line{672} %argrw{"wrr"}
# PxrMultiTexture.osl:671
#                     float m = RixMod(tx, minNumTex) +
	add		___823_m $tmp503 $tmp519 	%line{671} %argrw{"wrr"}
# PxrMultiTexture.osl:674
#                     texId = int(RixMod(m, manifoldMulti.numTextures));
	assign		$tmp521 manifoldMulti.numTextures 	%line{674} %argrw{"wr"}
	functioncall	$const70 1211 	%argrw{"r"}
# PxrMultiTexture.osl:63
#     float n = float(int(x/y));
	div		$tmp523 ___823_m $tmp521 	%line{63} %argrw{"wrr"}
	assign		$tmp522 $tmp523 	%argrw{"wr"}
	assign		$tmp524 $tmp522 	%argrw{"wr"}
	assign		___816_n $tmp524 	%argrw{"wr"}
# PxrMultiTexture.osl:64
#     float result = x - n*y;
	mul		$tmp525 ___816_n $tmp521 	%line{64} %argrw{"wrr"}
	sub		___816_result ___823_m $tmp525 	%argrw{"wrr"}
# PxrMultiTexture.osl:65
#     if (result < 0.0) result += y;
	lt		$tmp526 ___816_result $const18 	%line{65} %argrw{"wrr"}
	if		$tmp526 1210 1210 	%argrw{"r"}
	add		___816_result ___816_result $tmp521 	%argrw{"wrr"}
# PxrMultiTexture.osl:66
#     return result;
	assign		$tmp520 ___816_result 	%line{66} %argrw{"wr"}
# PxrMultiTexture.osl:674
#                     texId = int(RixMod(m, manifoldMulti.numTextures));
	assign		___820_texId $tmp520 	%line{674} %argrw{"wr"}
# PxrMultiTexture.osl:676
#                 else if (manifoldMulti.textureOrder == k_random)
	eq		$tmp527 manifoldMulti.textureOrder $const3 	%line{676} %argrw{"wrr"}
	if		$tmp527 1467 1469 	%argrw{"r"}
# PxrMultiTexture.osl:678
#                     point p = point(tx * 7.0,
	mul		$tmp528 ___820_tx $const71 	%line{678} %argrw{"wrr"}
# PxrMultiTexture.osl:679
#                                     ty * 3.0,
	mul		$tmp529 ___820_ty $const72 	%line{679} %argrw{"wrr"}
# PxrMultiTexture.osl:680
#                                     tx + ty * 11.0);
	mul		$tmp530 ___820_ty $const73 	%line{680} %argrw{"wrr"}
	add		$tmp531 ___820_tx $tmp530 	%argrw{"wrr"}
# PxrMultiTexture.osl:678
#                     point p = point(tx * 7.0,
	point		___824_p $tmp528 $tmp529 $tmp531 	%line{678} %argrw{"wrrr"}
# PxrMultiTexture.osl:681
#                     float rnd = matchCppPattern ?
	if		matchCppPattern 1452 1453 	%line{681} %argrw{"r"}
# PxrMultiTexture.osl:682
#                                     rxcellnoise(p) :
	functioncall	$const56 1452 	%line{682} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:961
#     noise_parameters np = {3, 1, INPUT3(seed), point(0), NONPERIODIC};
	assign		___622_np.domain $const5 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h"} %line{961} %argrw{"wr"}
	assign		___622_np.range $const3 	%argrw{"wr"}
	compref		$tmp532 ___824_p $const2 	%argrw{"wrr"}
	aassign		___622_np.input $const2 $tmp532 	%argrw{"wrr"}
	compref		$tmp533 ___824_p $const3 	%argrw{"wrr"}
	aassign		___622_np.input $const3 $tmp533 	%argrw{"wrr"}
	compref		$tmp534 ___824_p $const4 	%argrw{"wrr"}
	aassign		___622_np.input $const4 $tmp534 	%argrw{"wrr"}
	aassign		___622_np.input $const5 $const2 	%argrw{"wrr"}
	assign		___622_np.result $const6 	%argrw{"wr"}
	assign		___622_np.periodic $const2 	%argrw{"wr"}
	assign		___622_np.period $const57 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:962
#     rx_cell_noise(np);
	functioncall	$const58 1451 	%line{962} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:68
#     float rxcellrandtable[4096] = {
	assign		___558_rxcellrandtable $const59 	%line{68} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:582
#     int rxcellpermute[4096] = {
	assign		___558_rxcellpermute $const60 	%line{582} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:904
#     int k = 0;
	assign		___558_k $const2 	%line{904} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:905
#     if (np.domain == 1)
	eq		$tmp535 ___622_np.domain $const3 	%line{905} %argrw{"wrr"}
	if		$tmp535 1265 1451 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:907
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp536 ___622_np.input $const2 	%line{907} %argrw{"wrr"}
	add		___558_v0 $tmp536 $const61 	%argrw{"wrr"}
	lt		$tmp537 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp537 1248 1252 	%argrw{"r"}
	lt		$tmp538 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp538 1246 1248 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp539 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp539 $const3 	%argrw{"wrr"}
	gt		$tmp540 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp540 1251 1252 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	for		$tmp542 1254 1256 1262 1265 	%line{908} %argrw{"r"}
	assign		___558_i ___622_np.range 	%argrw{"wr"}
	gt		$tmp541 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp542 $tmp541 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:910
#             v0 = rxcellrandtable[CELLPERMUTE(int00)];
	bitand		$tmp543 ___558_int00 $const64 	%line{910} %argrw{"wrr"}
	aref		$tmp544 ___558_rxcellpermute $tmp543 	%argrw{"wrr"}
	aref		___558_v0 ___558_rxcellrandtable $tmp544 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:911
#             np.result[k++] = v0;
	assign		$tmp545 ___558_k 	%line{911} %argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___622_np.result $tmp545 ___558_v0 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	assign		$tmp546 ___558_i 	%line{908} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:914
#     else if (np.domain == 2)
	eq		$tmp547 ___622_np.domain $const4 	%line{914} %argrw{"wrr"}
	if		$tmp547 1310 1451 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:916
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp548 ___622_np.input $const2 	%line{916} %argrw{"wrr"}
	add		___558_v0 $tmp548 $const61 	%argrw{"wrr"}
	lt		$tmp549 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp549 1276 1280 	%argrw{"r"}
	lt		$tmp550 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp550 1274 1276 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp551 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp551 $const3 	%argrw{"wrr"}
	gt		$tmp552 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp552 1279 1280 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:917
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp553 ___622_np.input $const3 	%line{917} %argrw{"wrr"}
	add		___558_v0 $tmp553 $const61 	%argrw{"wrr"}
	lt		$tmp554 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp554 1289 1293 	%argrw{"r"}
	lt		$tmp555 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp555 1287 1289 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp556 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp556 $const3 	%argrw{"wrr"}
	gt		$tmp557 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp557 1292 1293 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	for		$tmp559 1295 1297 1306 1310 	%line{918} %argrw{"r"}
	assign		___558_i ___622_np.range 	%argrw{"wr"}
	gt		$tmp558 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp559 $tmp558 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:920
#             iy = CELLPERMUTE(int01);
	bitand		$tmp560 ___558_int01 $const64 	%line{920} %argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp560 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:921
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(iy + int00)];
	add		$tmp561 ___558_iy ___558_int00 	%line{921} %argrw{"wrr"}
	bitand		$tmp562 $tmp561 $const64 	%argrw{"wrr"}
	aref		$tmp563 ___558_rxcellpermute $tmp562 	%argrw{"wrr"}
	aref		$tmp564 ___558_rxcellrandtable $tmp563 	%argrw{"wrr"}
	assign		$tmp565 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___622_np.result $tmp565 $tmp564 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	assign		$tmp566 ___558_i 	%line{918} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:924
#     else if (np.domain == 3)
	eq		$tmp567 ___622_np.domain $const5 	%line{924} %argrw{"wrr"}
	if		$tmp567 1372 1451 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:926
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp568 ___622_np.input $const2 	%line{926} %argrw{"wrr"}
	add		___558_v0 $tmp568 $const61 	%argrw{"wrr"}
	lt		$tmp569 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp569 1321 1325 	%argrw{"r"}
	lt		$tmp570 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp570 1319 1321 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp571 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp571 $const3 	%argrw{"wrr"}
	gt		$tmp572 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp572 1324 1325 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:927
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp573 ___622_np.input $const3 	%line{927} %argrw{"wrr"}
	add		___558_v0 $tmp573 $const61 	%argrw{"wrr"}
	lt		$tmp574 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp574 1334 1338 	%argrw{"r"}
	lt		$tmp575 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp575 1332 1334 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp576 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp576 $const3 	%argrw{"wrr"}
	gt		$tmp577 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp577 1337 1338 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:928
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp578 ___622_np.input $const4 	%line{928} %argrw{"wrr"}
	add		___558_v0 $tmp578 $const61 	%argrw{"wrr"}
	lt		$tmp579 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp579 1347 1351 	%argrw{"r"}
	lt		$tmp580 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp580 1345 1347 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp581 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp581 $const3 	%argrw{"wrr"}
	gt		$tmp582 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp582 1350 1351 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	for		$tmp584 1353 1355 1367 1372 	%line{929} %argrw{"r"}
	assign		___558_i ___622_np.range 	%argrw{"wr"}
	gt		$tmp583 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp584 $tmp583 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:931
#             iz = CELLPERMUTE(int02);
	bitand		$tmp585 ___558_int02 $const64 	%line{931} %argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp585 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:932
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp586 ___558_int01 ___558_iz 	%line{932} %argrw{"wrr"}
	bitand		$tmp587 $tmp586 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp587 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:933
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp588 ___558_int00 ___558_iy 	%line{933} %argrw{"wrr"}
	bitand		$tmp589 $tmp588 $const64 	%argrw{"wrr"}
	aref		$tmp590 ___558_rxcellpermute $tmp589 	%argrw{"wrr"}
	aref		$tmp591 ___558_rxcellrandtable $tmp590 	%argrw{"wrr"}
	assign		$tmp592 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___622_np.result $tmp592 $tmp591 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	assign		$tmp593 ___558_i 	%line{929} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:936
#     else if (np.domain == 4)
	eq		$tmp594 ___622_np.domain $const34 	%line{936} %argrw{"wrr"}
	if		$tmp594 1451 1451 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:938
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp595 ___622_np.input $const2 	%line{938} %argrw{"wrr"}
	add		___558_v0 $tmp595 $const61 	%argrw{"wrr"}
	lt		$tmp596 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp596 1383 1387 	%argrw{"r"}
	lt		$tmp597 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp597 1381 1383 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp598 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp598 $const3 	%argrw{"wrr"}
	gt		$tmp599 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp599 1386 1387 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:939
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp600 ___622_np.input $const3 	%line{939} %argrw{"wrr"}
	add		___558_v0 $tmp600 $const61 	%argrw{"wrr"}
	lt		$tmp601 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp601 1396 1400 	%argrw{"r"}
	lt		$tmp602 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp602 1394 1396 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp603 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp603 $const3 	%argrw{"wrr"}
	gt		$tmp604 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp604 1399 1400 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:940
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp605 ___622_np.input $const4 	%line{940} %argrw{"wrr"}
	add		___558_v0 $tmp605 $const61 	%argrw{"wrr"}
	lt		$tmp606 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp606 1409 1413 	%argrw{"r"}
	lt		$tmp607 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp607 1407 1409 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp608 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp608 $const3 	%argrw{"wrr"}
	gt		$tmp609 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp609 1412 1413 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:941
#         SETUP_CELL_DOMAIN(3, int03);
	aref		$tmp610 ___622_np.input $const5 	%line{941} %argrw{"wrr"}
	add		___558_v0 $tmp610 $const61 	%argrw{"wrr"}
	lt		$tmp611 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp611 1422 1426 	%argrw{"r"}
	lt		$tmp612 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp612 1420 1422 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		$tmp613 ___558_v0 	%argrw{"wr"}
	sub		___558_int03 $tmp613 $const3 	%argrw{"wrr"}
	gt		$tmp614 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp614 1425 1426 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		___558_int03 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	for		$tmp616 1428 1430 1445 1451 	%line{942} %argrw{"r"}
	assign		___558_i ___622_np.range 	%argrw{"wr"}
	gt		$tmp615 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp616 $tmp615 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:944
#             iz = CELLPERMUTE(int02 + CELLPERMUTE(int03));
	bitand		$tmp617 ___558_int03 $const64 	%line{944} %argrw{"wrr"}
	aref		$tmp618 ___558_rxcellpermute $tmp617 	%argrw{"wrr"}
	add		$tmp619 ___558_int02 $tmp618 	%argrw{"wrr"}
	bitand		$tmp620 $tmp619 $const64 	%argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp620 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:945
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp621 ___558_int01 ___558_iz 	%line{945} %argrw{"wrr"}
	bitand		$tmp622 $tmp621 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp622 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:946
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp623 ___558_int00 ___558_iy 	%line{946} %argrw{"wrr"}
	bitand		$tmp624 $tmp623 $const64 	%argrw{"wrr"}
	aref		$tmp625 ___558_rxcellpermute $tmp624 	%argrw{"wrr"}
	aref		$tmp626 ___558_rxcellrandtable $tmp625 	%argrw{"wrr"}
	assign		$tmp627 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___622_np.result $tmp627 $tmp626 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	assign		$tmp628 ___558_i 	%line{942} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
	add		___558_int03 ___558_int03 $const65 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:963
#     return np.result[0];
	compref		___824_rnd ___622_np.result $const2 	%line{963} %argrw{"wrr"}
# PxrMultiTexture.osl:683
#                                     noise("cell", p);
	noise		___824_rnd $const66 ___824_p 	%filename{"PxrMultiTexture.osl"} %line{683} %argrw{"wrr"}
# PxrMultiTexture.osl:684
#                     texId = int(RixMod(rnd * 10000.0, min(10.0, numTexturesF)));
	mul		$tmp630 ___824_rnd $const74 	%line{684} %argrw{"wrr"}
	min		$tmp631 $const75 numTexturesF 	%argrw{"wrr"}
	functioncall	$const70 1466 	%argrw{"r"}
# PxrMultiTexture.osl:63
#     float n = float(int(x/y));
	div		$tmp633 $tmp630 $tmp631 	%line{63} %argrw{"wrr"}
	assign		$tmp632 $tmp633 	%argrw{"wr"}
	assign		$tmp634 $tmp632 	%argrw{"wr"}
	assign		___816_n $tmp634 	%argrw{"wr"}
# PxrMultiTexture.osl:64
#     float result = x - n*y;
	mul		$tmp635 ___816_n $tmp631 	%line{64} %argrw{"wrr"}
	sub		___816_result $tmp630 $tmp635 	%argrw{"wrr"}
# PxrMultiTexture.osl:65
#     if (result < 0.0) result += y;
	lt		$tmp636 ___816_result $const18 	%line{65} %argrw{"wrr"}
	if		$tmp636 1465 1465 	%argrw{"r"}
	add		___816_result ___816_result $tmp631 	%argrw{"wrr"}
# PxrMultiTexture.osl:66
#     return result;
	assign		$tmp629 ___816_result 	%line{66} %argrw{"wr"}
# PxrMultiTexture.osl:684
#                     texId = int(RixMod(rnd * 10000.0, min(10.0, numTexturesF)));
	assign		___820_texId $tmp629 	%line{684} %argrw{"wr"}
# PxrMultiTexture.osl:688
#                     texId = 0;
	assign		___820_texId $const2 	%line{688} %argrw{"wr"}
# PxrMultiTexture.osl:689
#                     error("PxrMultiTexture: Unknown texture order");
	error		$const76 	%line{689} %argrw{"r"}
# PxrMultiTexture.osl:700
#             if (blendingContrast > 0 && hexTex[g].powerTtoG == color(0))
	gt		$tmp637 blendingContrast $const2 	%line{700} %argrw{"wrr"}
	neq		$tmp638 $tmp637 $const2 	%argrw{"wrr"}
	if		$tmp638 1476 1476 	%argrw{"r"}
	aref		$tmp639 hexTex.powerTtoG ___818_g 	%argrw{"wrr"}
	eq		$tmp641 $tmp639 $const40 	%argrw{"wrr"}
	neq		$tmp642 $tmp641 $const2 	%argrw{"wrr"}
	assign		$tmp638 $tmp642 	%argrw{"wr"}
	if		$tmp638 1857 1857 	%argrw{"r"}
# PxrMultiTexture.osl:702
#                 if (texId == 0) // This if-else awkwardness is to work-around XPU's texturing limitations
	eq		$tmp643 ___820_texId $const2 	%line{702} %argrw{"wrr"}
	if		$tmp643 1515 1857 	%argrw{"r"}
# PxrMultiTexture.osl:704
#                     hexTex[g] = hexTileTextureExponents(filename0, linearize);
	functioncall	$const77 1513 	%line{704} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename0 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1505 1505 	%line{255} %argrw{"r"}
	functioncall	$const26 1505 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1487 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp646 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp645 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp647 $tmp645 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp647 1505 1505 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp649 1491 1493 1504 1505 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp648 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp649 $tmp648 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp650 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp651 $tmp650 $const29 	%argrw{"wrr"}
	if		$tmp651 1499 1504 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp652 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp653 $tmp652 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp653 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp655 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp656 $tmp655 $const31 	%argrw{"wrr"}
	mul		$tmp657 $tmp656 $const32 	%argrw{"wrr"}
	pow		$tmp654 $tmp657 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp654 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp658 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp660 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp658 $tmp660 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp644.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp644.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:704
#                     hexTex[g] = hexTileTextureExponents(filename0, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp644.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{704} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp644.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:706
#                 else if (texId == 1)
	eq		$tmp661 ___820_texId $const3 	%line{706} %argrw{"wrr"}
	if		$tmp661 1553 1857 	%argrw{"r"}
# PxrMultiTexture.osl:708
#                     hexTex[g] = hexTileTextureExponents(filename1, linearize);
	functioncall	$const77 1551 	%line{708} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename1 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1543 1543 	%line{255} %argrw{"r"}
	functioncall	$const26 1543 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1525 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp664 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp663 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp665 $tmp663 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp665 1543 1543 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp667 1529 1531 1542 1543 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp666 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp667 $tmp666 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp668 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp669 $tmp668 $const29 	%argrw{"wrr"}
	if		$tmp669 1537 1542 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp670 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp671 $tmp670 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp671 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp673 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp674 $tmp673 $const31 	%argrw{"wrr"}
	mul		$tmp675 $tmp674 $const32 	%argrw{"wrr"}
	pow		$tmp672 $tmp675 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp672 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp676 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp678 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp676 $tmp678 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp662.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp662.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:708
#                     hexTex[g] = hexTileTextureExponents(filename1, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp662.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{708} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp662.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:710
#                 else if (texId == 2)
	eq		$tmp679 ___820_texId $const4 	%line{710} %argrw{"wrr"}
	if		$tmp679 1591 1857 	%argrw{"r"}
# PxrMultiTexture.osl:712
#                     hexTex[g] = hexTileTextureExponents(filename2, linearize);
	functioncall	$const77 1589 	%line{712} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename2 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1581 1581 	%line{255} %argrw{"r"}
	functioncall	$const26 1581 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1563 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp682 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp681 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp683 $tmp681 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp683 1581 1581 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp685 1567 1569 1580 1581 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp684 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp685 $tmp684 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp686 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp687 $tmp686 $const29 	%argrw{"wrr"}
	if		$tmp687 1575 1580 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp688 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp689 $tmp688 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp689 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp691 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp692 $tmp691 $const31 	%argrw{"wrr"}
	mul		$tmp693 $tmp692 $const32 	%argrw{"wrr"}
	pow		$tmp690 $tmp693 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp690 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp694 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp696 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp694 $tmp696 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp680.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp680.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:712
#                     hexTex[g] = hexTileTextureExponents(filename2, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp680.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{712} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp680.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:714
#                 else if (texId == 3)
	eq		$tmp697 ___820_texId $const5 	%line{714} %argrw{"wrr"}
	if		$tmp697 1629 1857 	%argrw{"r"}
# PxrMultiTexture.osl:716
#                     hexTex[g] = hexTileTextureExponents(filename3, linearize);
	functioncall	$const77 1627 	%line{716} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename3 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1619 1619 	%line{255} %argrw{"r"}
	functioncall	$const26 1619 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1601 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp700 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp699 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp701 $tmp699 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp701 1619 1619 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp703 1605 1607 1618 1619 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp702 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp703 $tmp702 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp704 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp705 $tmp704 $const29 	%argrw{"wrr"}
	if		$tmp705 1613 1618 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp706 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp707 $tmp706 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp707 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp709 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp710 $tmp709 $const31 	%argrw{"wrr"}
	mul		$tmp711 $tmp710 $const32 	%argrw{"wrr"}
	pow		$tmp708 $tmp711 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp708 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp712 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp714 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp712 $tmp714 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp698.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp698.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:716
#                     hexTex[g] = hexTileTextureExponents(filename3, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp698.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{716} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp698.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:718
#                 else if (texId == 4)
	eq		$tmp715 ___820_texId $const34 	%line{718} %argrw{"wrr"}
	if		$tmp715 1667 1857 	%argrw{"r"}
# PxrMultiTexture.osl:720
#                     hexTex[g] = hexTileTextureExponents(filename4, linearize);
	functioncall	$const77 1665 	%line{720} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename4 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1657 1657 	%line{255} %argrw{"r"}
	functioncall	$const26 1657 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1639 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp718 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp717 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp719 $tmp717 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp719 1657 1657 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp721 1643 1645 1656 1657 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp720 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp721 $tmp720 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp722 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp723 $tmp722 $const29 	%argrw{"wrr"}
	if		$tmp723 1651 1656 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp724 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp725 $tmp724 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp725 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp727 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp728 $tmp727 $const31 	%argrw{"wrr"}
	mul		$tmp729 $tmp728 $const32 	%argrw{"wrr"}
	pow		$tmp726 $tmp729 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp726 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp730 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp732 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp730 $tmp732 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp716.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp716.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:720
#                     hexTex[g] = hexTileTextureExponents(filename4, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp716.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{720} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp716.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:722
#                 else if (texId == 5)
	eq		$tmp733 ___820_texId $const35 	%line{722} %argrw{"wrr"}
	if		$tmp733 1705 1857 	%argrw{"r"}
# PxrMultiTexture.osl:724
#                     hexTex[g] = hexTileTextureExponents(filename5, linearize);
	functioncall	$const77 1703 	%line{724} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename5 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1695 1695 	%line{255} %argrw{"r"}
	functioncall	$const26 1695 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1677 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp736 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp735 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp737 $tmp735 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp737 1695 1695 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp739 1681 1683 1694 1695 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp738 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp739 $tmp738 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp740 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp741 $tmp740 $const29 	%argrw{"wrr"}
	if		$tmp741 1689 1694 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp742 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp743 $tmp742 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp743 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp745 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp746 $tmp745 $const31 	%argrw{"wrr"}
	mul		$tmp747 $tmp746 $const32 	%argrw{"wrr"}
	pow		$tmp744 $tmp747 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp744 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp748 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp750 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp748 $tmp750 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp734.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp734.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:724
#                     hexTex[g] = hexTileTextureExponents(filename5, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp734.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{724} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp734.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:726
#                 else if (texId == 6)
	eq		$tmp751 ___820_texId $const36 	%line{726} %argrw{"wrr"}
	if		$tmp751 1743 1857 	%argrw{"r"}
# PxrMultiTexture.osl:728
#                     hexTex[g] = hexTileTextureExponents(filename6, linearize);
	functioncall	$const77 1741 	%line{728} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename6 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1733 1733 	%line{255} %argrw{"r"}
	functioncall	$const26 1733 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1715 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp754 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp753 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp755 $tmp753 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp755 1733 1733 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp757 1719 1721 1732 1733 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp756 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp757 $tmp756 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp758 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp759 $tmp758 $const29 	%argrw{"wrr"}
	if		$tmp759 1727 1732 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp760 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp761 $tmp760 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp761 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp763 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp764 $tmp763 $const31 	%argrw{"wrr"}
	mul		$tmp765 $tmp764 $const32 	%argrw{"wrr"}
	pow		$tmp762 $tmp765 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp762 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp766 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp768 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp766 $tmp768 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp752.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp752.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:728
#                     hexTex[g] = hexTileTextureExponents(filename6, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp752.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{728} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp752.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:730
#                 else if (texId == 7)
	eq		$tmp769 ___820_texId $const37 	%line{730} %argrw{"wrr"}
	if		$tmp769 1781 1857 	%argrw{"r"}
# PxrMultiTexture.osl:732
#                     hexTex[g] = hexTileTextureExponents(filename7, linearize);
	functioncall	$const77 1779 	%line{732} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename7 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1771 1771 	%line{255} %argrw{"r"}
	functioncall	$const26 1771 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1753 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp772 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp771 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp773 $tmp771 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp773 1771 1771 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp775 1757 1759 1770 1771 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp774 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp775 $tmp774 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp776 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp777 $tmp776 $const29 	%argrw{"wrr"}
	if		$tmp777 1765 1770 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp778 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp779 $tmp778 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp779 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp781 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp782 $tmp781 $const31 	%argrw{"wrr"}
	mul		$tmp783 $tmp782 $const32 	%argrw{"wrr"}
	pow		$tmp780 $tmp783 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp780 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp784 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp786 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp784 $tmp786 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp770.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp770.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:732
#                     hexTex[g] = hexTileTextureExponents(filename7, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp770.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{732} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp770.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:734
#                 else if (texId == 8)
	eq		$tmp787 ___820_texId $const38 	%line{734} %argrw{"wrr"}
	if		$tmp787 1819 1857 	%argrw{"r"}
# PxrMultiTexture.osl:736
#                     hexTex[g] = hexTileTextureExponents(filename8, linearize);
	functioncall	$const77 1817 	%line{736} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename8 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1809 1809 	%line{255} %argrw{"r"}
	functioncall	$const26 1809 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1791 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp790 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp789 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp791 $tmp789 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp791 1809 1809 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp793 1795 1797 1808 1809 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp792 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp793 $tmp792 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp794 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp795 $tmp794 $const29 	%argrw{"wrr"}
	if		$tmp795 1803 1808 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp796 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp797 $tmp796 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp797 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp799 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp800 $tmp799 $const31 	%argrw{"wrr"}
	mul		$tmp801 $tmp800 $const32 	%argrw{"wrr"}
	pow		$tmp798 $tmp801 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp798 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp802 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp804 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp802 $tmp804 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp788.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp788.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:736
#                     hexTex[g] = hexTileTextureExponents(filename8, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp788.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{736} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp788.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:738
#                 else if (texId == 9)
	eq		$tmp805 ___820_texId $const39 	%line{738} %argrw{"wrr"}
	if		$tmp805 1857 1857 	%argrw{"r"}
# PxrMultiTexture.osl:740
#                     hexTex[g] = hexTileTextureExponents(filename9, linearize);
	functioncall	$const77 1855 	%line{740} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:253
#     color Tcenter = texture(filename, 0.5, 0.5,
	texture		___746_Tcenter filename9 $const78 $const78 $const80 $const80 $const80 $const80 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{253} %argrw{"wrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:255
#     if (linearize) PxrLinearizeSRGB(Tcenter);
	if		linearize 1847 1847 	%line{255} %argrw{"r"}
	functioncall	$const26 1847 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 1829 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp808 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp807 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp809 $tmp807 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp809 1847 1847 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp811 1833 1835 1846 1847 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp810 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp811 $tmp810 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp812 ___746_Tcenter ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp813 $tmp812 $const29 	%argrw{"wrr"}
	if		$tmp813 1841 1846 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp814 ___746_Tcenter ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp815 $tmp814 $const30 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp815 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp817 ___746_Tcenter ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp818 $tmp817 $const31 	%argrw{"wrr"}
	mul		$tmp819 $tmp818 $const32 	%argrw{"wrr"}
	pow		$tmp816 $tmp819 $const33 	%argrw{"wrr"}
	compassign	___746_Tcenter ___667_i $tmp816 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:259
#     result.powerTtoG = log(HEXT_GCENTER) / log(Tcenter);
	log		$tmp820 $const81 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{259} %argrw{"wr"}
	log		$tmp822 ___746_Tcenter 	%argrw{"wr"}
	div		___746_result.powerTtoG $tmp820 $tmp822 	%argrw{"wrr"}
	assign		___746_result.powerTtoG ___746_result.powerTtoG 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:260
#     result.powerGtoT = 1.0 / result.powerTtoG;
	div		___746_result.powerGtoT $const9 ___746_result.powerTtoG 	%line{260} %argrw{"wrr"}
	assign		___746_result.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:261
#     return result;
	assign		$tmp806.powerTtoG ___746_result.powerTtoG 	%line{261} %argrw{"wr"}
	assign		$tmp806.powerGtoT ___746_result.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:740
#                     hexTex[g] = hexTileTextureExponents(filename9, linearize);
	aassign		hexTex.powerTtoG ___818_g $tmp806.powerTtoG 	%filename{"PxrMultiTexture.osl"} %line{740} %argrw{"wrr"}
	aassign		hexTex.powerGtoT ___818_g $tmp806.powerGtoT 	%argrw{"wrr"}
# PxrMultiTexture.osl:747
#             grads[g] = 0;
	assign		$tmp823 $const2 	%line{747} %argrw{"wr"}
	aassign		grads ___818_g $tmp823 	%argrw{"wrr"}
# PxrMultiTexture.osl:748
#             alphas[g] = 0;
	aassign		alphas ___818_g $const2 	%line{748} %argrw{"wrr"}
# PxrMultiTexture.osl:749
#             colors[g] = 0;
	assign		$tmp824 $const2 	%line{749} %argrw{"wr"}
	aassign		colors ___818_g $tmp824 	%argrw{"wrr"}
# PxrMultiTexture.osl:750
#             if (validHexTileData(hexData[g]))
	aref		$tmp826.s hexData.s ___818_g 	%line{750} %argrw{"wrr"}
	aref		$tmp826.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp826.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp826.r hexData.r ___818_g 	%argrw{"wrr"}
	functioncall	$const41 1872 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:78
#     return hxt.w == INVALID_HEXTILE_WEIGHT ? 0 : 1;
	eq		$tmp828 $tmp826.w $const7 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{78} %argrw{"wrr"}
	if		$tmp828 1870 1871 	%argrw{"r"}
	assign		$tmp825 $const2 	%argrw{"wr"}
	assign		$tmp825 $const3 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:750
#             if (validHexTileData(hexData[g]))
	if		$tmp825 6131 6831 	%filename{"PxrMultiTexture.osl"} %line{750} %argrw{"r"}
# PxrMultiTexture.osl:752
#                 if (texId == 0) // This if-else awkwardness is to work-around XPU's texturing limitations
	eq		$tmp829 ___820_texId $const2 	%line{752} %argrw{"wrr"}
	if		$tmp829 2299 6131 	%argrw{"r"}
# PxrMultiTexture.osl:757
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp831.powerTtoG hexTex.powerTtoG ___818_g 	%line{757} %argrw{"wrr"}
	aref		$tmp831.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp832.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp832.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp832.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp832.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp833 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp834 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:754
#                     colors[g] = hexTileLookup(filename0, txparams, linearize, mipBias,
	functioncall	$const82 2296 	%line{754} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp834 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp836 1892 1894 2282 2284 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp835 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp836 $tmp835 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp832.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp837 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp837 1898 1898 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp838 $tmp832.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp839 $tmp832.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 2023 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 1908 1909 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 1908 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp840 $tmp839 	%line{48} %argrw{"wr"}
	add		$tmp841 $tmp840 $const9 	%argrw{"wrr"}
	floor		$tmp842 $tmp839 	%argrw{"wr"}
	sub		$tmp843 $tmp839 $tmp842 	%argrw{"wrr"}
	sub		___656__tt $tmp841 $tmp843 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp839 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 2008 2015 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp844 $tmp838 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp844 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp845 $tmp838 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp845 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp846 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp846 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp847 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp847 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp848 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp849 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp848 $tmp849 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp850 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp850 1934 1968 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp851 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp852 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp853 $tmp851 $tmp852 	%argrw{"wrr"}
	div		___657_dPds $tmp853 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp854 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp855 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp856 $tmp854 $tmp855 	%argrw{"wrr"}
	div		___657_dPdt $tmp856 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp857 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp857 1937 1938 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp858 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp858 1941 1942 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp859 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp860 $tmp859 $const18 	%argrw{"wrr"}
	neq		$tmp861 $tmp860 $const2 	%argrw{"wrr"}
	if		$tmp861 1949 1949 	%argrw{"r"}
	neq		$tmp862 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp863 $tmp862 $const2 	%argrw{"wrr"}
	assign		$tmp861 $tmp863 	%argrw{"wr"}
	if		$tmp861 1951 1951 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp864 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp865 $tmp864 $const18 	%argrw{"wrr"}
	neq		$tmp866 $tmp865 $const2 	%argrw{"wrr"}
	if		$tmp866 1958 1958 	%argrw{"r"}
	neq		$tmp867 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp868 $tmp867 $const2 	%argrw{"wrr"}
	assign		$tmp866 $tmp868 	%argrw{"wr"}
	if		$tmp866 1960 1960 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp869 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp870 $tmp869 $const18 	%argrw{"wrr"}
	if		$tmp870 1964 1964 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp871 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp872 $tmp871 $const18 	%argrw{"wrr"}
	if		$tmp872 1968 1968 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp873 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp873 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp874 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp874 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp838 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp838 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp875 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp876 ___657_dyss 	%argrw{"wr"}
	gt		$tmp877 $tmp875 $tmp876 	%argrw{"wrr"}
	if		$tmp877 1981 1982 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp878 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp879 ___657_dytt 	%argrw{"wr"}
	gt		$tmp880 $tmp878 $tmp879 	%argrw{"wrr"}
	if		$tmp880 1987 1988 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp881 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp882 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp881 $tmp882 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 2001 2008 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp838 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp838 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp838 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp838 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp838 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp883 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp884 $tmp883 $const2 	%argrw{"wrr"}
	if		$tmp884 2026 2029 	%argrw{"r"}
	neq		$tmp885 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp886 $tmp885 $const2 	%argrw{"wrr"}
	assign		$tmp884 $tmp886 	%argrw{"wr"}
	if		$tmp884 2097 2097 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 2097 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp887 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp887 2035 2036 	%argrw{"r"}
	assign		$tmp888 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp888 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp889 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp889 2097 2097 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 2082 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp890 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp891 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp890 $tmp891 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp892 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp893 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp892 $tmp893 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp894 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp894 2073 2082 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp895 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp895 2066 2073 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp896 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp896 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp897 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp897 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp898 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp898 2082 2082 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp899 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp899 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp900 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp900 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp901 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp902 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp901 $tmp902 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp903 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp904 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp903 $tmp904 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp905 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 2092 2093 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 2128 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp906 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename0 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp906 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp907 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp907 2107 2107 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename0 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp908 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp908 2113 2113 	%argrw{"r"}
	neq		$tmp909 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp908 $tmp909 	%argrw{"wr"}
	if		$tmp908 2127 2127 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp910 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp911 $tmp910 $const2 	%argrw{"wrr"}
	if		$tmp911 2117 2120 	%argrw{"r"}
	eq		$tmp912 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp913 $tmp912 $const2 	%argrw{"wrr"}
	assign		$tmp911 $tmp913 	%argrw{"wr"}
	if		$tmp911 2127 2127 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp914 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp914 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp915 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp915 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp916 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp916 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 2230 2230 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp917.x $tmp832.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp917.y $tmp832.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 2178 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp918 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp919 $tmp918 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp919 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp920 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp921 $tmp920 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp921 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp923 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp922 dPdv $tmp923 	%argrw{"wrr"}
	lt		$tmp924 $tmp922 $const18 	%argrw{"wrr"}
	if		$tmp924 2143 2144 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 2147 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp917.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp917.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 2150 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp917.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp917.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp925.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp925.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 2156 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp926 ___714_dSTdx.x $tmp925.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp927 ___714_dSTdx.y $tmp925.y 	%argrw{"wrr"}
	add		___714_det $tmp926 $tmp927 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp928 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp928 2159 2160 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp929.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp929.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 2168 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp930.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp930.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 2168 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp929.x $tmp930.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp929.y $tmp930.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp931 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp932 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp931 $tmp932 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp933 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp934 $tmp933 $const18 	%argrw{"wrr"}
	if		$tmp934 2175 2175 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp935 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp936 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp935 $tmp936 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 2197 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp937 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp937 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp938 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp938 2183 2196 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp939 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp939 2188 2196 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp940 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp941 $tmp940 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp941 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 2192 2192 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp942 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp943 $tmp942 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp943 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 2196 2196 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp944 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp945 $tmp944 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp945 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 2224 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp948 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp950 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp951 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp949 $tmp950 $tmp951 	%argrw{"wrr"}
	mul		$tmp952 ___715_scale $tmp949 	%argrw{"wrr"}
	max		___715_z_ma $tmp948 $tmp952 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 2209 2210 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp954.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp955 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp954.y ___715_s $tmp955 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 2216 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp953.x $tmp954.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp953.y $tmp954.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 2223 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp956.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp956.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 2223 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp947.x $tmp953.x $tmp956.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp947.y $tmp953.y $tmp956.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 2228 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp957 $tmp947.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp958 $tmp947.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp946 $tmp957 $tmp958 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp959 $tmp946 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp834 $tmp834 $tmp959 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 2254 2254 	%line{333} %argrw{"r"}
	functioncall	$const26 2254 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 2236 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp961 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp960 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp962 $tmp960 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp962 2254 2254 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp964 2240 2242 2253 2254 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp963 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp964 $tmp963 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp965 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp966 $tmp965 $const29 	%argrw{"wrr"}
	if		$tmp966 2248 2253 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp967 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp968 $tmp967 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp968 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp970 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp971 $tmp970 $const31 	%argrw{"wrr"}
	mul		$tmp972 $tmp971 $const32 	%argrw{"wrr"}
	pow		$tmp969 $tmp972 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp969 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 2267 2267 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 2266 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename0 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp833 $tmp833 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp973 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp973 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp974 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp974 2282 2282 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 2282 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp975 ___749_c $tmp831.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp976 $tmp975 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp976 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp977 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp977 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp978 $tmp831.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp978 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp979 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp980 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp980 2295 2295 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 2295 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp981 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp981 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp983 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp984 ___748_norm $tmp983 	%argrw{"wrr"}
	add		___748_result $tmp984 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp830 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:757
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp833 	%filename{"PxrMultiTexture.osl"} %line{757} %argrw{"wrr"}
	aassign		grads ___818_g $tmp834 	%argrw{"wrr"}
# PxrMultiTexture.osl:754
#                     colors[g] = hexTileLookup(filename0, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp830 	%line{754} %argrw{"wrr"}
# PxrMultiTexture.osl:759
#                 else if (texId == 1)
	eq		$tmp987 ___820_texId $const3 	%line{759} %argrw{"wrr"}
	if		$tmp987 2725 6131 	%argrw{"r"}
# PxrMultiTexture.osl:764
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp989.powerTtoG hexTex.powerTtoG ___818_g 	%line{764} %argrw{"wrr"}
	aref		$tmp989.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp990.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp990.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp990.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp990.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp991 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp992 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:761
#                     colors[g] = hexTileLookup(filename1, txparams, linearize, mipBias,
	functioncall	$const82 2722 	%line{761} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp992 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp994 2318 2320 2708 2710 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp993 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp994 $tmp993 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp990.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp995 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp995 2324 2324 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp996 $tmp990.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp997 $tmp990.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 2449 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 2334 2335 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 2334 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp998 $tmp997 	%line{48} %argrw{"wr"}
	add		$tmp999 $tmp998 $const9 	%argrw{"wrr"}
	floor		$tmp1000 $tmp997 	%argrw{"wr"}
	sub		$tmp1001 $tmp997 $tmp1000 	%argrw{"wrr"}
	sub		___656__tt $tmp999 $tmp1001 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp997 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 2434 2441 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp1002 $tmp996 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp1002 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp1003 $tmp996 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp1003 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp1004 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp1004 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp1005 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp1005 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp1006 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp1007 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp1006 $tmp1007 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp1008 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp1008 2360 2394 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp1009 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp1010 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp1011 $tmp1009 $tmp1010 	%argrw{"wrr"}
	div		___657_dPds $tmp1011 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp1012 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp1013 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp1014 $tmp1012 $tmp1013 	%argrw{"wrr"}
	div		___657_dPdt $tmp1014 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp1015 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp1015 2363 2364 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp1016 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp1016 2367 2368 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp1017 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp1018 $tmp1017 $const18 	%argrw{"wrr"}
	neq		$tmp1019 $tmp1018 $const2 	%argrw{"wrr"}
	if		$tmp1019 2375 2375 	%argrw{"r"}
	neq		$tmp1020 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp1021 $tmp1020 $const2 	%argrw{"wrr"}
	assign		$tmp1019 $tmp1021 	%argrw{"wr"}
	if		$tmp1019 2377 2377 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp1022 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp1023 $tmp1022 $const18 	%argrw{"wrr"}
	neq		$tmp1024 $tmp1023 $const2 	%argrw{"wrr"}
	if		$tmp1024 2384 2384 	%argrw{"r"}
	neq		$tmp1025 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp1026 $tmp1025 $const2 	%argrw{"wrr"}
	assign		$tmp1024 $tmp1026 	%argrw{"wr"}
	if		$tmp1024 2386 2386 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp1027 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp1028 $tmp1027 $const18 	%argrw{"wrr"}
	if		$tmp1028 2390 2390 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp1029 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp1030 $tmp1029 $const18 	%argrw{"wrr"}
	if		$tmp1030 2394 2394 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp1031 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp1031 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp1032 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp1032 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp996 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp996 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp1033 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp1034 ___657_dyss 	%argrw{"wr"}
	gt		$tmp1035 $tmp1033 $tmp1034 	%argrw{"wrr"}
	if		$tmp1035 2407 2408 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp1036 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp1037 ___657_dytt 	%argrw{"wr"}
	gt		$tmp1038 $tmp1036 $tmp1037 	%argrw{"wrr"}
	if		$tmp1038 2413 2414 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp1039 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp1040 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp1039 $tmp1040 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 2427 2434 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp996 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp996 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp996 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp996 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp996 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp1041 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp1042 $tmp1041 $const2 	%argrw{"wrr"}
	if		$tmp1042 2452 2455 	%argrw{"r"}
	neq		$tmp1043 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp1044 $tmp1043 $const2 	%argrw{"wrr"}
	assign		$tmp1042 $tmp1044 	%argrw{"wr"}
	if		$tmp1042 2523 2523 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 2523 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp1045 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp1045 2461 2462 	%argrw{"r"}
	assign		$tmp1046 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp1046 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp1047 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp1047 2523 2523 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 2508 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp1048 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp1049 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp1048 $tmp1049 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp1050 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp1051 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp1050 $tmp1051 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp1052 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp1052 2499 2508 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp1053 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp1053 2492 2499 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp1054 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp1054 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp1055 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp1055 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp1056 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp1056 2508 2508 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp1057 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp1057 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp1058 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp1058 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp1059 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp1060 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp1059 $tmp1060 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp1061 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp1062 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp1061 $tmp1062 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp1063 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 2518 2519 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 2554 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp1064 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename1 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp1064 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp1065 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp1065 2533 2533 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename1 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp1066 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp1066 2539 2539 	%argrw{"r"}
	neq		$tmp1067 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp1066 $tmp1067 	%argrw{"wr"}
	if		$tmp1066 2553 2553 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp1068 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp1069 $tmp1068 $const2 	%argrw{"wrr"}
	if		$tmp1069 2543 2546 	%argrw{"r"}
	eq		$tmp1070 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp1071 $tmp1070 $const2 	%argrw{"wrr"}
	assign		$tmp1069 $tmp1071 	%argrw{"wr"}
	if		$tmp1069 2553 2553 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp1072 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp1072 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp1073 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp1073 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp1074 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp1074 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 2656 2656 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp1075.x $tmp990.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp1075.y $tmp990.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 2604 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1076 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp1077 $tmp1076 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp1077 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1078 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp1079 $tmp1078 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp1079 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp1081 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp1080 dPdv $tmp1081 	%argrw{"wrr"}
	lt		$tmp1082 $tmp1080 $const18 	%argrw{"wrr"}
	if		$tmp1082 2569 2570 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 2573 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp1075.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp1075.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 2576 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp1075.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp1075.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp1083.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp1083.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 2582 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp1084 ___714_dSTdx.x $tmp1083.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp1085 ___714_dSTdx.y $tmp1083.y 	%argrw{"wrr"}
	add		___714_det $tmp1084 $tmp1085 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp1086 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp1086 2585 2586 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp1087.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp1087.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 2594 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp1088.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp1088.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 2594 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp1087.x $tmp1088.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp1087.y $tmp1088.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp1089 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp1090 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp1089 $tmp1090 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp1091 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp1092 $tmp1091 $const18 	%argrw{"wrr"}
	if		$tmp1092 2601 2601 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp1093 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp1094 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp1093 $tmp1094 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 2623 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp1095 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp1095 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp1096 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp1096 2609 2622 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp1097 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp1097 2614 2622 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp1098 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp1099 $tmp1098 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1099 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 2618 2618 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp1100 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp1101 $tmp1100 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp1101 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 2622 2622 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp1102 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp1103 $tmp1102 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1103 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 2650 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp1106 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp1108 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp1109 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp1107 $tmp1108 $tmp1109 	%argrw{"wrr"}
	mul		$tmp1110 ___715_scale $tmp1107 	%argrw{"wrr"}
	max		___715_z_ma $tmp1106 $tmp1110 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 2635 2636 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp1112.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp1113 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp1112.y ___715_s $tmp1113 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 2642 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp1111.x $tmp1112.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp1111.y $tmp1112.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 2649 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp1114.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp1114.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 2649 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp1105.x $tmp1111.x $tmp1114.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp1105.y $tmp1111.y $tmp1114.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 2654 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp1115 $tmp1105.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp1116 $tmp1105.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp1104 $tmp1115 $tmp1116 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp1117 $tmp1104 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp992 $tmp992 $tmp1117 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 2680 2680 	%line{333} %argrw{"r"}
	functioncall	$const26 2680 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 2662 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp1119 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp1118 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp1120 $tmp1118 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp1120 2680 2680 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp1122 2666 2668 2679 2680 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp1121 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp1122 $tmp1121 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp1123 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp1124 $tmp1123 $const29 	%argrw{"wrr"}
	if		$tmp1124 2674 2679 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp1125 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp1126 $tmp1125 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1126 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp1128 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp1129 $tmp1128 $const31 	%argrw{"wrr"}
	mul		$tmp1130 $tmp1129 $const32 	%argrw{"wrr"}
	pow		$tmp1127 $tmp1130 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1127 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 2693 2693 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 2692 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename1 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp991 $tmp991 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp1131 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp1131 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp1132 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp1132 2708 2708 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 2708 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp1133 ___749_c $tmp989.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp1134 $tmp1133 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp1134 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp1135 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp1135 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp1136 $tmp989.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp1136 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp1137 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp1138 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp1138 2721 2721 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 2721 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp1139 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp1139 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp1141 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp1142 ___748_norm $tmp1141 	%argrw{"wrr"}
	add		___748_result $tmp1142 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp988 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:764
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp991 	%filename{"PxrMultiTexture.osl"} %line{764} %argrw{"wrr"}
	aassign		grads ___818_g $tmp992 	%argrw{"wrr"}
# PxrMultiTexture.osl:761
#                     colors[g] = hexTileLookup(filename1, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp988 	%line{761} %argrw{"wrr"}
# PxrMultiTexture.osl:766
#                 else if (texId == 2)
	eq		$tmp1145 ___820_texId $const4 	%line{766} %argrw{"wrr"}
	if		$tmp1145 3151 6131 	%argrw{"r"}
# PxrMultiTexture.osl:771
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp1147.powerTtoG hexTex.powerTtoG ___818_g 	%line{771} %argrw{"wrr"}
	aref		$tmp1147.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp1148.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp1148.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp1148.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp1148.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp1149 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp1150 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:768
#                     colors[g] = hexTileLookup(filename2, txparams, linearize, mipBias,
	functioncall	$const82 3148 	%line{768} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp1150 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp1152 2744 2746 3134 3136 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp1151 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp1152 $tmp1151 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp1148.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp1153 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp1153 2750 2750 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp1154 $tmp1148.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp1155 $tmp1148.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 2875 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 2760 2761 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 2760 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp1156 $tmp1155 	%line{48} %argrw{"wr"}
	add		$tmp1157 $tmp1156 $const9 	%argrw{"wrr"}
	floor		$tmp1158 $tmp1155 	%argrw{"wr"}
	sub		$tmp1159 $tmp1155 $tmp1158 	%argrw{"wrr"}
	sub		___656__tt $tmp1157 $tmp1159 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp1155 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 2860 2867 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp1160 $tmp1154 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp1160 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp1161 $tmp1154 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp1161 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp1162 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp1162 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp1163 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp1163 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp1164 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp1165 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp1164 $tmp1165 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp1166 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp1166 2786 2820 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp1167 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp1168 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp1169 $tmp1167 $tmp1168 	%argrw{"wrr"}
	div		___657_dPds $tmp1169 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp1170 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp1171 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp1172 $tmp1170 $tmp1171 	%argrw{"wrr"}
	div		___657_dPdt $tmp1172 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp1173 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp1173 2789 2790 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp1174 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp1174 2793 2794 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp1175 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp1176 $tmp1175 $const18 	%argrw{"wrr"}
	neq		$tmp1177 $tmp1176 $const2 	%argrw{"wrr"}
	if		$tmp1177 2801 2801 	%argrw{"r"}
	neq		$tmp1178 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp1179 $tmp1178 $const2 	%argrw{"wrr"}
	assign		$tmp1177 $tmp1179 	%argrw{"wr"}
	if		$tmp1177 2803 2803 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp1180 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp1181 $tmp1180 $const18 	%argrw{"wrr"}
	neq		$tmp1182 $tmp1181 $const2 	%argrw{"wrr"}
	if		$tmp1182 2810 2810 	%argrw{"r"}
	neq		$tmp1183 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp1184 $tmp1183 $const2 	%argrw{"wrr"}
	assign		$tmp1182 $tmp1184 	%argrw{"wr"}
	if		$tmp1182 2812 2812 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp1185 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp1186 $tmp1185 $const18 	%argrw{"wrr"}
	if		$tmp1186 2816 2816 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp1187 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp1188 $tmp1187 $const18 	%argrw{"wrr"}
	if		$tmp1188 2820 2820 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp1189 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp1189 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp1190 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp1190 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp1154 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp1154 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp1191 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp1192 ___657_dyss 	%argrw{"wr"}
	gt		$tmp1193 $tmp1191 $tmp1192 	%argrw{"wrr"}
	if		$tmp1193 2833 2834 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp1194 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp1195 ___657_dytt 	%argrw{"wr"}
	gt		$tmp1196 $tmp1194 $tmp1195 	%argrw{"wrr"}
	if		$tmp1196 2839 2840 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp1197 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp1198 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp1197 $tmp1198 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 2853 2860 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp1154 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp1154 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp1154 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp1154 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp1154 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp1199 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp1200 $tmp1199 $const2 	%argrw{"wrr"}
	if		$tmp1200 2878 2881 	%argrw{"r"}
	neq		$tmp1201 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp1202 $tmp1201 $const2 	%argrw{"wrr"}
	assign		$tmp1200 $tmp1202 	%argrw{"wr"}
	if		$tmp1200 2949 2949 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 2949 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp1203 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp1203 2887 2888 	%argrw{"r"}
	assign		$tmp1204 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp1204 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp1205 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp1205 2949 2949 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 2934 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp1206 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp1207 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp1206 $tmp1207 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp1208 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp1209 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp1208 $tmp1209 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp1210 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp1210 2925 2934 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp1211 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp1211 2918 2925 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp1212 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp1212 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp1213 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp1213 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp1214 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp1214 2934 2934 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp1215 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp1215 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp1216 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp1216 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp1217 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp1218 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp1217 $tmp1218 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp1219 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp1220 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp1219 $tmp1220 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp1221 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 2944 2945 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 2980 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp1222 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename2 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp1222 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp1223 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp1223 2959 2959 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename2 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp1224 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp1224 2965 2965 	%argrw{"r"}
	neq		$tmp1225 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp1224 $tmp1225 	%argrw{"wr"}
	if		$tmp1224 2979 2979 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp1226 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp1227 $tmp1226 $const2 	%argrw{"wrr"}
	if		$tmp1227 2969 2972 	%argrw{"r"}
	eq		$tmp1228 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp1229 $tmp1228 $const2 	%argrw{"wrr"}
	assign		$tmp1227 $tmp1229 	%argrw{"wr"}
	if		$tmp1227 2979 2979 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp1230 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp1230 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp1231 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp1231 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp1232 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp1232 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 3082 3082 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp1233.x $tmp1148.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp1233.y $tmp1148.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 3030 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1234 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp1235 $tmp1234 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp1235 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1236 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp1237 $tmp1236 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp1237 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp1239 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp1238 dPdv $tmp1239 	%argrw{"wrr"}
	lt		$tmp1240 $tmp1238 $const18 	%argrw{"wrr"}
	if		$tmp1240 2995 2996 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 2999 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp1233.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp1233.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 3002 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp1233.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp1233.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp1241.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp1241.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 3008 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp1242 ___714_dSTdx.x $tmp1241.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp1243 ___714_dSTdx.y $tmp1241.y 	%argrw{"wrr"}
	add		___714_det $tmp1242 $tmp1243 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp1244 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp1244 3011 3012 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp1245.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp1245.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3020 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp1246.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp1246.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3020 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp1245.x $tmp1246.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp1245.y $tmp1246.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp1247 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp1248 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp1247 $tmp1248 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp1249 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp1250 $tmp1249 $const18 	%argrw{"wrr"}
	if		$tmp1250 3027 3027 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp1251 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp1252 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp1251 $tmp1252 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 3049 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp1253 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp1253 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp1254 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp1254 3035 3048 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp1255 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp1255 3040 3048 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp1256 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp1257 $tmp1256 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1257 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 3044 3044 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp1258 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp1259 $tmp1258 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp1259 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 3048 3048 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp1260 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp1261 $tmp1260 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1261 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 3076 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp1264 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp1266 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp1267 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp1265 $tmp1266 $tmp1267 	%argrw{"wrr"}
	mul		$tmp1268 ___715_scale $tmp1265 	%argrw{"wrr"}
	max		___715_z_ma $tmp1264 $tmp1268 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 3061 3062 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp1270.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp1271 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp1270.y ___715_s $tmp1271 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 3068 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp1269.x $tmp1270.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp1269.y $tmp1270.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 3075 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp1272.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp1272.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3075 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp1263.x $tmp1269.x $tmp1272.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp1263.y $tmp1269.y $tmp1272.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 3080 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp1273 $tmp1263.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp1274 $tmp1263.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp1262 $tmp1273 $tmp1274 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp1275 $tmp1262 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp1150 $tmp1150 $tmp1275 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 3106 3106 	%line{333} %argrw{"r"}
	functioncall	$const26 3106 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 3088 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp1277 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp1276 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp1278 $tmp1276 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp1278 3106 3106 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp1280 3092 3094 3105 3106 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp1279 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp1280 $tmp1279 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp1281 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp1282 $tmp1281 $const29 	%argrw{"wrr"}
	if		$tmp1282 3100 3105 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp1283 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp1284 $tmp1283 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1284 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp1286 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp1287 $tmp1286 $const31 	%argrw{"wrr"}
	mul		$tmp1288 $tmp1287 $const32 	%argrw{"wrr"}
	pow		$tmp1285 $tmp1288 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1285 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 3119 3119 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 3118 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename2 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp1149 $tmp1149 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp1289 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp1289 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp1290 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp1290 3134 3134 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 3134 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp1291 ___749_c $tmp1147.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp1292 $tmp1291 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp1292 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp1293 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp1293 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp1294 $tmp1147.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp1294 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp1295 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp1296 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp1296 3147 3147 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 3147 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp1297 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp1297 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp1299 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp1300 ___748_norm $tmp1299 	%argrw{"wrr"}
	add		___748_result $tmp1300 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp1146 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:771
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp1149 	%filename{"PxrMultiTexture.osl"} %line{771} %argrw{"wrr"}
	aassign		grads ___818_g $tmp1150 	%argrw{"wrr"}
# PxrMultiTexture.osl:768
#                     colors[g] = hexTileLookup(filename2, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp1146 	%line{768} %argrw{"wrr"}
# PxrMultiTexture.osl:773
#                 else if (texId == 3)
	eq		$tmp1303 ___820_texId $const5 	%line{773} %argrw{"wrr"}
	if		$tmp1303 3577 6131 	%argrw{"r"}
# PxrMultiTexture.osl:778
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp1305.powerTtoG hexTex.powerTtoG ___818_g 	%line{778} %argrw{"wrr"}
	aref		$tmp1305.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp1306.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp1306.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp1306.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp1306.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp1307 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp1308 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:775
#                     colors[g] = hexTileLookup(filename3, txparams, linearize, mipBias,
	functioncall	$const82 3574 	%line{775} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp1308 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp1310 3170 3172 3560 3562 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp1309 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp1310 $tmp1309 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp1306.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp1311 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp1311 3176 3176 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp1312 $tmp1306.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp1313 $tmp1306.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 3301 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 3186 3187 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 3186 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp1314 $tmp1313 	%line{48} %argrw{"wr"}
	add		$tmp1315 $tmp1314 $const9 	%argrw{"wrr"}
	floor		$tmp1316 $tmp1313 	%argrw{"wr"}
	sub		$tmp1317 $tmp1313 $tmp1316 	%argrw{"wrr"}
	sub		___656__tt $tmp1315 $tmp1317 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp1313 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 3286 3293 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp1318 $tmp1312 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp1318 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp1319 $tmp1312 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp1319 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp1320 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp1320 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp1321 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp1321 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp1322 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp1323 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp1322 $tmp1323 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp1324 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp1324 3212 3246 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp1325 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp1326 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp1327 $tmp1325 $tmp1326 	%argrw{"wrr"}
	div		___657_dPds $tmp1327 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp1328 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp1329 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp1330 $tmp1328 $tmp1329 	%argrw{"wrr"}
	div		___657_dPdt $tmp1330 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp1331 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp1331 3215 3216 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp1332 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp1332 3219 3220 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp1333 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp1334 $tmp1333 $const18 	%argrw{"wrr"}
	neq		$tmp1335 $tmp1334 $const2 	%argrw{"wrr"}
	if		$tmp1335 3227 3227 	%argrw{"r"}
	neq		$tmp1336 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp1337 $tmp1336 $const2 	%argrw{"wrr"}
	assign		$tmp1335 $tmp1337 	%argrw{"wr"}
	if		$tmp1335 3229 3229 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp1338 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp1339 $tmp1338 $const18 	%argrw{"wrr"}
	neq		$tmp1340 $tmp1339 $const2 	%argrw{"wrr"}
	if		$tmp1340 3236 3236 	%argrw{"r"}
	neq		$tmp1341 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp1342 $tmp1341 $const2 	%argrw{"wrr"}
	assign		$tmp1340 $tmp1342 	%argrw{"wr"}
	if		$tmp1340 3238 3238 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp1343 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp1344 $tmp1343 $const18 	%argrw{"wrr"}
	if		$tmp1344 3242 3242 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp1345 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp1346 $tmp1345 $const18 	%argrw{"wrr"}
	if		$tmp1346 3246 3246 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp1347 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp1347 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp1348 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp1348 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp1312 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp1312 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp1349 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp1350 ___657_dyss 	%argrw{"wr"}
	gt		$tmp1351 $tmp1349 $tmp1350 	%argrw{"wrr"}
	if		$tmp1351 3259 3260 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp1352 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp1353 ___657_dytt 	%argrw{"wr"}
	gt		$tmp1354 $tmp1352 $tmp1353 	%argrw{"wrr"}
	if		$tmp1354 3265 3266 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp1355 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp1356 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp1355 $tmp1356 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 3279 3286 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp1312 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp1312 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp1312 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp1312 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp1312 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp1357 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp1358 $tmp1357 $const2 	%argrw{"wrr"}
	if		$tmp1358 3304 3307 	%argrw{"r"}
	neq		$tmp1359 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp1360 $tmp1359 $const2 	%argrw{"wrr"}
	assign		$tmp1358 $tmp1360 	%argrw{"wr"}
	if		$tmp1358 3375 3375 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 3375 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp1361 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp1361 3313 3314 	%argrw{"r"}
	assign		$tmp1362 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp1362 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp1363 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp1363 3375 3375 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 3360 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp1364 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp1365 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp1364 $tmp1365 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp1366 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp1367 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp1366 $tmp1367 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp1368 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp1368 3351 3360 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp1369 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp1369 3344 3351 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp1370 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp1370 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp1371 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp1371 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp1372 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp1372 3360 3360 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp1373 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp1373 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp1374 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp1374 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp1375 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp1376 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp1375 $tmp1376 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp1377 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp1378 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp1377 $tmp1378 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp1379 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 3370 3371 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 3406 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp1380 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename3 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp1380 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp1381 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp1381 3385 3385 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename3 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp1382 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp1382 3391 3391 	%argrw{"r"}
	neq		$tmp1383 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp1382 $tmp1383 	%argrw{"wr"}
	if		$tmp1382 3405 3405 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp1384 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp1385 $tmp1384 $const2 	%argrw{"wrr"}
	if		$tmp1385 3395 3398 	%argrw{"r"}
	eq		$tmp1386 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp1387 $tmp1386 $const2 	%argrw{"wrr"}
	assign		$tmp1385 $tmp1387 	%argrw{"wr"}
	if		$tmp1385 3405 3405 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp1388 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp1388 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp1389 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp1389 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp1390 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp1390 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 3508 3508 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp1391.x $tmp1306.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp1391.y $tmp1306.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 3456 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1392 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp1393 $tmp1392 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp1393 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1394 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp1395 $tmp1394 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp1395 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp1397 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp1396 dPdv $tmp1397 	%argrw{"wrr"}
	lt		$tmp1398 $tmp1396 $const18 	%argrw{"wrr"}
	if		$tmp1398 3421 3422 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 3425 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp1391.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp1391.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 3428 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp1391.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp1391.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp1399.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp1399.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 3434 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp1400 ___714_dSTdx.x $tmp1399.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp1401 ___714_dSTdx.y $tmp1399.y 	%argrw{"wrr"}
	add		___714_det $tmp1400 $tmp1401 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp1402 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp1402 3437 3438 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp1403.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp1403.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3446 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp1404.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp1404.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3446 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp1403.x $tmp1404.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp1403.y $tmp1404.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp1405 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp1406 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp1405 $tmp1406 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp1407 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp1408 $tmp1407 $const18 	%argrw{"wrr"}
	if		$tmp1408 3453 3453 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp1409 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp1410 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp1409 $tmp1410 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 3475 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp1411 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp1411 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp1412 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp1412 3461 3474 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp1413 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp1413 3466 3474 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp1414 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp1415 $tmp1414 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1415 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 3470 3470 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp1416 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp1417 $tmp1416 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp1417 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 3474 3474 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp1418 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp1419 $tmp1418 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1419 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 3502 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp1422 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp1424 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp1425 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp1423 $tmp1424 $tmp1425 	%argrw{"wrr"}
	mul		$tmp1426 ___715_scale $tmp1423 	%argrw{"wrr"}
	max		___715_z_ma $tmp1422 $tmp1426 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 3487 3488 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp1428.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp1429 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp1428.y ___715_s $tmp1429 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 3494 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp1427.x $tmp1428.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp1427.y $tmp1428.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 3501 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp1430.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp1430.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3501 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp1421.x $tmp1427.x $tmp1430.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp1421.y $tmp1427.y $tmp1430.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 3506 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp1431 $tmp1421.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp1432 $tmp1421.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp1420 $tmp1431 $tmp1432 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp1433 $tmp1420 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp1308 $tmp1308 $tmp1433 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 3532 3532 	%line{333} %argrw{"r"}
	functioncall	$const26 3532 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 3514 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp1435 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp1434 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp1436 $tmp1434 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp1436 3532 3532 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp1438 3518 3520 3531 3532 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp1437 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp1438 $tmp1437 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp1439 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp1440 $tmp1439 $const29 	%argrw{"wrr"}
	if		$tmp1440 3526 3531 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp1441 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp1442 $tmp1441 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1442 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp1444 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp1445 $tmp1444 $const31 	%argrw{"wrr"}
	mul		$tmp1446 $tmp1445 $const32 	%argrw{"wrr"}
	pow		$tmp1443 $tmp1446 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1443 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 3545 3545 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 3544 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename3 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp1307 $tmp1307 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp1447 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp1447 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp1448 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp1448 3560 3560 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 3560 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp1449 ___749_c $tmp1305.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp1450 $tmp1449 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp1450 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp1451 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp1451 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp1452 $tmp1305.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp1452 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp1453 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp1454 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp1454 3573 3573 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 3573 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp1455 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp1455 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp1457 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp1458 ___748_norm $tmp1457 	%argrw{"wrr"}
	add		___748_result $tmp1458 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp1304 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:778
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp1307 	%filename{"PxrMultiTexture.osl"} %line{778} %argrw{"wrr"}
	aassign		grads ___818_g $tmp1308 	%argrw{"wrr"}
# PxrMultiTexture.osl:775
#                     colors[g] = hexTileLookup(filename3, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp1304 	%line{775} %argrw{"wrr"}
# PxrMultiTexture.osl:780
#                 else if (texId == 4)
	eq		$tmp1461 ___820_texId $const34 	%line{780} %argrw{"wrr"}
	if		$tmp1461 4003 6131 	%argrw{"r"}
# PxrMultiTexture.osl:785
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp1463.powerTtoG hexTex.powerTtoG ___818_g 	%line{785} %argrw{"wrr"}
	aref		$tmp1463.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp1464.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp1464.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp1464.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp1464.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp1465 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp1466 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:782
#                     colors[g] = hexTileLookup(filename4, txparams, linearize, mipBias,
	functioncall	$const82 4000 	%line{782} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp1466 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp1468 3596 3598 3986 3988 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp1467 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp1468 $tmp1467 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp1464.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp1469 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp1469 3602 3602 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp1470 $tmp1464.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp1471 $tmp1464.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 3727 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 3612 3613 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 3612 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp1472 $tmp1471 	%line{48} %argrw{"wr"}
	add		$tmp1473 $tmp1472 $const9 	%argrw{"wrr"}
	floor		$tmp1474 $tmp1471 	%argrw{"wr"}
	sub		$tmp1475 $tmp1471 $tmp1474 	%argrw{"wrr"}
	sub		___656__tt $tmp1473 $tmp1475 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp1471 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 3712 3719 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp1476 $tmp1470 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp1476 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp1477 $tmp1470 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp1477 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp1478 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp1478 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp1479 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp1479 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp1480 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp1481 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp1480 $tmp1481 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp1482 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp1482 3638 3672 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp1483 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp1484 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp1485 $tmp1483 $tmp1484 	%argrw{"wrr"}
	div		___657_dPds $tmp1485 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp1486 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp1487 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp1488 $tmp1486 $tmp1487 	%argrw{"wrr"}
	div		___657_dPdt $tmp1488 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp1489 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp1489 3641 3642 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp1490 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp1490 3645 3646 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp1491 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp1492 $tmp1491 $const18 	%argrw{"wrr"}
	neq		$tmp1493 $tmp1492 $const2 	%argrw{"wrr"}
	if		$tmp1493 3653 3653 	%argrw{"r"}
	neq		$tmp1494 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp1495 $tmp1494 $const2 	%argrw{"wrr"}
	assign		$tmp1493 $tmp1495 	%argrw{"wr"}
	if		$tmp1493 3655 3655 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp1496 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp1497 $tmp1496 $const18 	%argrw{"wrr"}
	neq		$tmp1498 $tmp1497 $const2 	%argrw{"wrr"}
	if		$tmp1498 3662 3662 	%argrw{"r"}
	neq		$tmp1499 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp1500 $tmp1499 $const2 	%argrw{"wrr"}
	assign		$tmp1498 $tmp1500 	%argrw{"wr"}
	if		$tmp1498 3664 3664 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp1501 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp1502 $tmp1501 $const18 	%argrw{"wrr"}
	if		$tmp1502 3668 3668 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp1503 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp1504 $tmp1503 $const18 	%argrw{"wrr"}
	if		$tmp1504 3672 3672 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp1505 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp1505 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp1506 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp1506 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp1470 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp1470 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp1507 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp1508 ___657_dyss 	%argrw{"wr"}
	gt		$tmp1509 $tmp1507 $tmp1508 	%argrw{"wrr"}
	if		$tmp1509 3685 3686 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp1510 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp1511 ___657_dytt 	%argrw{"wr"}
	gt		$tmp1512 $tmp1510 $tmp1511 	%argrw{"wrr"}
	if		$tmp1512 3691 3692 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp1513 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp1514 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp1513 $tmp1514 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 3705 3712 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp1470 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp1470 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp1470 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp1470 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp1470 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp1515 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp1516 $tmp1515 $const2 	%argrw{"wrr"}
	if		$tmp1516 3730 3733 	%argrw{"r"}
	neq		$tmp1517 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp1518 $tmp1517 $const2 	%argrw{"wrr"}
	assign		$tmp1516 $tmp1518 	%argrw{"wr"}
	if		$tmp1516 3801 3801 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 3801 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp1519 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp1519 3739 3740 	%argrw{"r"}
	assign		$tmp1520 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp1520 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp1521 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp1521 3801 3801 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 3786 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp1522 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp1523 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp1522 $tmp1523 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp1524 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp1525 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp1524 $tmp1525 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp1526 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp1526 3777 3786 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp1527 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp1527 3770 3777 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp1528 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp1528 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp1529 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp1529 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp1530 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp1530 3786 3786 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp1531 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp1531 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp1532 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp1532 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp1533 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp1534 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp1533 $tmp1534 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp1535 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp1536 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp1535 $tmp1536 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp1537 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 3796 3797 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 3832 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp1538 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename4 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp1538 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp1539 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp1539 3811 3811 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename4 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp1540 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp1540 3817 3817 	%argrw{"r"}
	neq		$tmp1541 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp1540 $tmp1541 	%argrw{"wr"}
	if		$tmp1540 3831 3831 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp1542 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp1543 $tmp1542 $const2 	%argrw{"wrr"}
	if		$tmp1543 3821 3824 	%argrw{"r"}
	eq		$tmp1544 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp1545 $tmp1544 $const2 	%argrw{"wrr"}
	assign		$tmp1543 $tmp1545 	%argrw{"wr"}
	if		$tmp1543 3831 3831 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp1546 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp1546 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp1547 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp1547 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp1548 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp1548 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 3934 3934 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp1549.x $tmp1464.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp1549.y $tmp1464.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 3882 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1550 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp1551 $tmp1550 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp1551 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1552 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp1553 $tmp1552 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp1553 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp1555 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp1554 dPdv $tmp1555 	%argrw{"wrr"}
	lt		$tmp1556 $tmp1554 $const18 	%argrw{"wrr"}
	if		$tmp1556 3847 3848 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 3851 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp1549.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp1549.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 3854 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp1549.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp1549.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp1557.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp1557.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 3860 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp1558 ___714_dSTdx.x $tmp1557.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp1559 ___714_dSTdx.y $tmp1557.y 	%argrw{"wrr"}
	add		___714_det $tmp1558 $tmp1559 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp1560 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp1560 3863 3864 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp1561.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp1561.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3872 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp1562.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp1562.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3872 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp1561.x $tmp1562.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp1561.y $tmp1562.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp1563 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp1564 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp1563 $tmp1564 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp1565 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp1566 $tmp1565 $const18 	%argrw{"wrr"}
	if		$tmp1566 3879 3879 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp1567 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp1568 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp1567 $tmp1568 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 3901 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp1569 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp1569 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp1570 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp1570 3887 3900 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp1571 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp1571 3892 3900 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp1572 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp1573 $tmp1572 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1573 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 3896 3896 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp1574 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp1575 $tmp1574 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp1575 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 3900 3900 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp1576 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp1577 $tmp1576 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1577 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 3928 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp1580 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp1582 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp1583 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp1581 $tmp1582 $tmp1583 	%argrw{"wrr"}
	mul		$tmp1584 ___715_scale $tmp1581 	%argrw{"wrr"}
	max		___715_z_ma $tmp1580 $tmp1584 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 3913 3914 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp1586.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp1587 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp1586.y ___715_s $tmp1587 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 3920 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp1585.x $tmp1586.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp1585.y $tmp1586.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 3927 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp1588.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp1588.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 3927 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp1579.x $tmp1585.x $tmp1588.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp1579.y $tmp1585.y $tmp1588.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 3932 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp1589 $tmp1579.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp1590 $tmp1579.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp1578 $tmp1589 $tmp1590 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp1591 $tmp1578 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp1466 $tmp1466 $tmp1591 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 3958 3958 	%line{333} %argrw{"r"}
	functioncall	$const26 3958 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 3940 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp1593 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp1592 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp1594 $tmp1592 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp1594 3958 3958 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp1596 3944 3946 3957 3958 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp1595 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp1596 $tmp1595 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp1597 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp1598 $tmp1597 $const29 	%argrw{"wrr"}
	if		$tmp1598 3952 3957 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp1599 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp1600 $tmp1599 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1600 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp1602 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp1603 $tmp1602 $const31 	%argrw{"wrr"}
	mul		$tmp1604 $tmp1603 $const32 	%argrw{"wrr"}
	pow		$tmp1601 $tmp1604 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1601 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 3971 3971 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 3970 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename4 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp1465 $tmp1465 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp1605 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp1605 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp1606 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp1606 3986 3986 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 3986 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp1607 ___749_c $tmp1463.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp1608 $tmp1607 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp1608 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp1609 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp1609 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp1610 $tmp1463.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp1610 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp1611 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp1612 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp1612 3999 3999 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 3999 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp1613 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp1613 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp1615 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp1616 ___748_norm $tmp1615 	%argrw{"wrr"}
	add		___748_result $tmp1616 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp1462 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:785
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp1465 	%filename{"PxrMultiTexture.osl"} %line{785} %argrw{"wrr"}
	aassign		grads ___818_g $tmp1466 	%argrw{"wrr"}
# PxrMultiTexture.osl:782
#                     colors[g] = hexTileLookup(filename4, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp1462 	%line{782} %argrw{"wrr"}
# PxrMultiTexture.osl:787
#                 else if (texId == 5)
	eq		$tmp1619 ___820_texId $const35 	%line{787} %argrw{"wrr"}
	if		$tmp1619 4429 6131 	%argrw{"r"}
# PxrMultiTexture.osl:792
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp1621.powerTtoG hexTex.powerTtoG ___818_g 	%line{792} %argrw{"wrr"}
	aref		$tmp1621.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp1622.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp1622.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp1622.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp1622.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp1623 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp1624 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:789
#                     colors[g] = hexTileLookup(filename5, txparams, linearize, mipBias,
	functioncall	$const82 4426 	%line{789} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp1624 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp1626 4022 4024 4412 4414 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp1625 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp1626 $tmp1625 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp1622.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp1627 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp1627 4028 4028 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp1628 $tmp1622.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp1629 $tmp1622.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 4153 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 4038 4039 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 4038 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp1630 $tmp1629 	%line{48} %argrw{"wr"}
	add		$tmp1631 $tmp1630 $const9 	%argrw{"wrr"}
	floor		$tmp1632 $tmp1629 	%argrw{"wr"}
	sub		$tmp1633 $tmp1629 $tmp1632 	%argrw{"wrr"}
	sub		___656__tt $tmp1631 $tmp1633 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp1629 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 4138 4145 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp1634 $tmp1628 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp1634 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp1635 $tmp1628 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp1635 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp1636 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp1636 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp1637 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp1637 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp1638 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp1639 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp1638 $tmp1639 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp1640 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp1640 4064 4098 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp1641 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp1642 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp1643 $tmp1641 $tmp1642 	%argrw{"wrr"}
	div		___657_dPds $tmp1643 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp1644 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp1645 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp1646 $tmp1644 $tmp1645 	%argrw{"wrr"}
	div		___657_dPdt $tmp1646 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp1647 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp1647 4067 4068 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp1648 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp1648 4071 4072 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp1649 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp1650 $tmp1649 $const18 	%argrw{"wrr"}
	neq		$tmp1651 $tmp1650 $const2 	%argrw{"wrr"}
	if		$tmp1651 4079 4079 	%argrw{"r"}
	neq		$tmp1652 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp1653 $tmp1652 $const2 	%argrw{"wrr"}
	assign		$tmp1651 $tmp1653 	%argrw{"wr"}
	if		$tmp1651 4081 4081 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp1654 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp1655 $tmp1654 $const18 	%argrw{"wrr"}
	neq		$tmp1656 $tmp1655 $const2 	%argrw{"wrr"}
	if		$tmp1656 4088 4088 	%argrw{"r"}
	neq		$tmp1657 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp1658 $tmp1657 $const2 	%argrw{"wrr"}
	assign		$tmp1656 $tmp1658 	%argrw{"wr"}
	if		$tmp1656 4090 4090 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp1659 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp1660 $tmp1659 $const18 	%argrw{"wrr"}
	if		$tmp1660 4094 4094 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp1661 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp1662 $tmp1661 $const18 	%argrw{"wrr"}
	if		$tmp1662 4098 4098 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp1663 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp1663 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp1664 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp1664 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp1628 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp1628 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp1665 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp1666 ___657_dyss 	%argrw{"wr"}
	gt		$tmp1667 $tmp1665 $tmp1666 	%argrw{"wrr"}
	if		$tmp1667 4111 4112 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp1668 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp1669 ___657_dytt 	%argrw{"wr"}
	gt		$tmp1670 $tmp1668 $tmp1669 	%argrw{"wrr"}
	if		$tmp1670 4117 4118 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp1671 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp1672 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp1671 $tmp1672 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 4131 4138 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp1628 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp1628 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp1628 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp1628 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp1628 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp1673 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp1674 $tmp1673 $const2 	%argrw{"wrr"}
	if		$tmp1674 4156 4159 	%argrw{"r"}
	neq		$tmp1675 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp1676 $tmp1675 $const2 	%argrw{"wrr"}
	assign		$tmp1674 $tmp1676 	%argrw{"wr"}
	if		$tmp1674 4227 4227 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 4227 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp1677 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp1677 4165 4166 	%argrw{"r"}
	assign		$tmp1678 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp1678 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp1679 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp1679 4227 4227 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 4212 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp1680 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp1681 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp1680 $tmp1681 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp1682 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp1683 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp1682 $tmp1683 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp1684 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp1684 4203 4212 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp1685 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp1685 4196 4203 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp1686 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp1686 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp1687 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp1687 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp1688 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp1688 4212 4212 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp1689 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp1689 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp1690 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp1690 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp1691 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp1692 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp1691 $tmp1692 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp1693 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp1694 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp1693 $tmp1694 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp1695 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 4222 4223 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 4258 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp1696 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename5 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp1696 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp1697 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp1697 4237 4237 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename5 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp1698 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp1698 4243 4243 	%argrw{"r"}
	neq		$tmp1699 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp1698 $tmp1699 	%argrw{"wr"}
	if		$tmp1698 4257 4257 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp1700 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp1701 $tmp1700 $const2 	%argrw{"wrr"}
	if		$tmp1701 4247 4250 	%argrw{"r"}
	eq		$tmp1702 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp1703 $tmp1702 $const2 	%argrw{"wrr"}
	assign		$tmp1701 $tmp1703 	%argrw{"wr"}
	if		$tmp1701 4257 4257 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp1704 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp1704 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp1705 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp1705 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp1706 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp1706 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 4360 4360 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp1707.x $tmp1622.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp1707.y $tmp1622.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 4308 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1708 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp1709 $tmp1708 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp1709 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1710 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp1711 $tmp1710 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp1711 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp1713 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp1712 dPdv $tmp1713 	%argrw{"wrr"}
	lt		$tmp1714 $tmp1712 $const18 	%argrw{"wrr"}
	if		$tmp1714 4273 4274 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 4277 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp1707.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp1707.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 4280 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp1707.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp1707.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp1715.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp1715.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 4286 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp1716 ___714_dSTdx.x $tmp1715.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp1717 ___714_dSTdx.y $tmp1715.y 	%argrw{"wrr"}
	add		___714_det $tmp1716 $tmp1717 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp1718 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp1718 4289 4290 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp1719.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp1719.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 4298 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp1720.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp1720.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 4298 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp1719.x $tmp1720.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp1719.y $tmp1720.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp1721 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp1722 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp1721 $tmp1722 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp1723 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp1724 $tmp1723 $const18 	%argrw{"wrr"}
	if		$tmp1724 4305 4305 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp1725 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp1726 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp1725 $tmp1726 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 4327 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp1727 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp1727 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp1728 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp1728 4313 4326 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp1729 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp1729 4318 4326 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp1730 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp1731 $tmp1730 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1731 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 4322 4322 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp1732 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp1733 $tmp1732 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp1733 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 4326 4326 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp1734 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp1735 $tmp1734 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1735 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 4354 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp1738 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp1740 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp1741 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp1739 $tmp1740 $tmp1741 	%argrw{"wrr"}
	mul		$tmp1742 ___715_scale $tmp1739 	%argrw{"wrr"}
	max		___715_z_ma $tmp1738 $tmp1742 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 4339 4340 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp1744.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp1745 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp1744.y ___715_s $tmp1745 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 4346 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp1743.x $tmp1744.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp1743.y $tmp1744.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 4353 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp1746.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp1746.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 4353 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp1737.x $tmp1743.x $tmp1746.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp1737.y $tmp1743.y $tmp1746.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 4358 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp1747 $tmp1737.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp1748 $tmp1737.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp1736 $tmp1747 $tmp1748 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp1749 $tmp1736 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp1624 $tmp1624 $tmp1749 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 4384 4384 	%line{333} %argrw{"r"}
	functioncall	$const26 4384 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 4366 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp1751 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp1750 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp1752 $tmp1750 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp1752 4384 4384 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp1754 4370 4372 4383 4384 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp1753 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp1754 $tmp1753 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp1755 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp1756 $tmp1755 $const29 	%argrw{"wrr"}
	if		$tmp1756 4378 4383 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp1757 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp1758 $tmp1757 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1758 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp1760 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp1761 $tmp1760 $const31 	%argrw{"wrr"}
	mul		$tmp1762 $tmp1761 $const32 	%argrw{"wrr"}
	pow		$tmp1759 $tmp1762 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1759 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 4397 4397 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 4396 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename5 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp1623 $tmp1623 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp1763 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp1763 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp1764 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp1764 4412 4412 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 4412 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp1765 ___749_c $tmp1621.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp1766 $tmp1765 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp1766 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp1767 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp1767 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp1768 $tmp1621.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp1768 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp1769 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp1770 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp1770 4425 4425 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 4425 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp1771 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp1771 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp1773 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp1774 ___748_norm $tmp1773 	%argrw{"wrr"}
	add		___748_result $tmp1774 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp1620 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:792
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp1623 	%filename{"PxrMultiTexture.osl"} %line{792} %argrw{"wrr"}
	aassign		grads ___818_g $tmp1624 	%argrw{"wrr"}
# PxrMultiTexture.osl:789
#                     colors[g] = hexTileLookup(filename5, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp1620 	%line{789} %argrw{"wrr"}
# PxrMultiTexture.osl:794
#                 else if (texId == 6)
	eq		$tmp1777 ___820_texId $const36 	%line{794} %argrw{"wrr"}
	if		$tmp1777 4855 6131 	%argrw{"r"}
# PxrMultiTexture.osl:799
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp1779.powerTtoG hexTex.powerTtoG ___818_g 	%line{799} %argrw{"wrr"}
	aref		$tmp1779.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp1780.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp1780.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp1780.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp1780.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp1781 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp1782 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:796
#                     colors[g] = hexTileLookup(filename6, txparams, linearize, mipBias,
	functioncall	$const82 4852 	%line{796} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp1782 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp1784 4448 4450 4838 4840 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp1783 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp1784 $tmp1783 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp1780.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp1785 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp1785 4454 4454 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp1786 $tmp1780.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp1787 $tmp1780.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 4579 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 4464 4465 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 4464 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp1788 $tmp1787 	%line{48} %argrw{"wr"}
	add		$tmp1789 $tmp1788 $const9 	%argrw{"wrr"}
	floor		$tmp1790 $tmp1787 	%argrw{"wr"}
	sub		$tmp1791 $tmp1787 $tmp1790 	%argrw{"wrr"}
	sub		___656__tt $tmp1789 $tmp1791 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp1787 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 4564 4571 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp1792 $tmp1786 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp1792 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp1793 $tmp1786 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp1793 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp1794 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp1794 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp1795 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp1795 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp1796 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp1797 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp1796 $tmp1797 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp1798 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp1798 4490 4524 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp1799 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp1800 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp1801 $tmp1799 $tmp1800 	%argrw{"wrr"}
	div		___657_dPds $tmp1801 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp1802 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp1803 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp1804 $tmp1802 $tmp1803 	%argrw{"wrr"}
	div		___657_dPdt $tmp1804 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp1805 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp1805 4493 4494 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp1806 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp1806 4497 4498 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp1807 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp1808 $tmp1807 $const18 	%argrw{"wrr"}
	neq		$tmp1809 $tmp1808 $const2 	%argrw{"wrr"}
	if		$tmp1809 4505 4505 	%argrw{"r"}
	neq		$tmp1810 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp1811 $tmp1810 $const2 	%argrw{"wrr"}
	assign		$tmp1809 $tmp1811 	%argrw{"wr"}
	if		$tmp1809 4507 4507 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp1812 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp1813 $tmp1812 $const18 	%argrw{"wrr"}
	neq		$tmp1814 $tmp1813 $const2 	%argrw{"wrr"}
	if		$tmp1814 4514 4514 	%argrw{"r"}
	neq		$tmp1815 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp1816 $tmp1815 $const2 	%argrw{"wrr"}
	assign		$tmp1814 $tmp1816 	%argrw{"wr"}
	if		$tmp1814 4516 4516 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp1817 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp1818 $tmp1817 $const18 	%argrw{"wrr"}
	if		$tmp1818 4520 4520 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp1819 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp1820 $tmp1819 $const18 	%argrw{"wrr"}
	if		$tmp1820 4524 4524 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp1821 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp1821 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp1822 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp1822 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp1786 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp1786 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp1823 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp1824 ___657_dyss 	%argrw{"wr"}
	gt		$tmp1825 $tmp1823 $tmp1824 	%argrw{"wrr"}
	if		$tmp1825 4537 4538 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp1826 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp1827 ___657_dytt 	%argrw{"wr"}
	gt		$tmp1828 $tmp1826 $tmp1827 	%argrw{"wrr"}
	if		$tmp1828 4543 4544 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp1829 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp1830 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp1829 $tmp1830 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 4557 4564 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp1786 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp1786 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp1786 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp1786 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp1786 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp1831 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp1832 $tmp1831 $const2 	%argrw{"wrr"}
	if		$tmp1832 4582 4585 	%argrw{"r"}
	neq		$tmp1833 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp1834 $tmp1833 $const2 	%argrw{"wrr"}
	assign		$tmp1832 $tmp1834 	%argrw{"wr"}
	if		$tmp1832 4653 4653 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 4653 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp1835 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp1835 4591 4592 	%argrw{"r"}
	assign		$tmp1836 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp1836 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp1837 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp1837 4653 4653 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 4638 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp1838 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp1839 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp1838 $tmp1839 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp1840 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp1841 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp1840 $tmp1841 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp1842 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp1842 4629 4638 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp1843 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp1843 4622 4629 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp1844 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp1844 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp1845 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp1845 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp1846 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp1846 4638 4638 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp1847 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp1847 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp1848 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp1848 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp1849 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp1850 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp1849 $tmp1850 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp1851 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp1852 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp1851 $tmp1852 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp1853 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 4648 4649 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 4684 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp1854 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename6 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp1854 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp1855 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp1855 4663 4663 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename6 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp1856 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp1856 4669 4669 	%argrw{"r"}
	neq		$tmp1857 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp1856 $tmp1857 	%argrw{"wr"}
	if		$tmp1856 4683 4683 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp1858 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp1859 $tmp1858 $const2 	%argrw{"wrr"}
	if		$tmp1859 4673 4676 	%argrw{"r"}
	eq		$tmp1860 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp1861 $tmp1860 $const2 	%argrw{"wrr"}
	assign		$tmp1859 $tmp1861 	%argrw{"wr"}
	if		$tmp1859 4683 4683 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp1862 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp1862 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp1863 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp1863 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp1864 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp1864 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 4786 4786 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp1865.x $tmp1780.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp1865.y $tmp1780.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 4734 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1866 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp1867 $tmp1866 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp1867 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp1868 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp1869 $tmp1868 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp1869 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp1871 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp1870 dPdv $tmp1871 	%argrw{"wrr"}
	lt		$tmp1872 $tmp1870 $const18 	%argrw{"wrr"}
	if		$tmp1872 4699 4700 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 4703 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp1865.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp1865.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 4706 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp1865.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp1865.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp1873.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp1873.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 4712 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp1874 ___714_dSTdx.x $tmp1873.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp1875 ___714_dSTdx.y $tmp1873.y 	%argrw{"wrr"}
	add		___714_det $tmp1874 $tmp1875 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp1876 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp1876 4715 4716 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp1877.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp1877.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 4724 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp1878.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp1878.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 4724 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp1877.x $tmp1878.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp1877.y $tmp1878.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp1879 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp1880 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp1879 $tmp1880 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp1881 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp1882 $tmp1881 $const18 	%argrw{"wrr"}
	if		$tmp1882 4731 4731 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp1883 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp1884 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp1883 $tmp1884 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 4753 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp1885 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp1885 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp1886 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp1886 4739 4752 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp1887 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp1887 4744 4752 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp1888 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp1889 $tmp1888 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1889 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 4748 4748 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp1890 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp1891 $tmp1890 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp1891 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 4752 4752 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp1892 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp1893 $tmp1892 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp1893 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 4780 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp1896 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp1898 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp1899 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp1897 $tmp1898 $tmp1899 	%argrw{"wrr"}
	mul		$tmp1900 ___715_scale $tmp1897 	%argrw{"wrr"}
	max		___715_z_ma $tmp1896 $tmp1900 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 4765 4766 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp1902.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp1903 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp1902.y ___715_s $tmp1903 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 4772 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp1901.x $tmp1902.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp1901.y $tmp1902.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 4779 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp1904.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp1904.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 4779 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp1895.x $tmp1901.x $tmp1904.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp1895.y $tmp1901.y $tmp1904.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 4784 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp1905 $tmp1895.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp1906 $tmp1895.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp1894 $tmp1905 $tmp1906 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp1907 $tmp1894 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp1782 $tmp1782 $tmp1907 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 4810 4810 	%line{333} %argrw{"r"}
	functioncall	$const26 4810 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 4792 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp1909 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp1908 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp1910 $tmp1908 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp1910 4810 4810 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp1912 4796 4798 4809 4810 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp1911 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp1912 $tmp1911 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp1913 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp1914 $tmp1913 $const29 	%argrw{"wrr"}
	if		$tmp1914 4804 4809 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp1915 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp1916 $tmp1915 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1916 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp1918 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp1919 $tmp1918 $const31 	%argrw{"wrr"}
	mul		$tmp1920 $tmp1919 $const32 	%argrw{"wrr"}
	pow		$tmp1917 $tmp1920 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp1917 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 4823 4823 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 4822 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename6 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp1781 $tmp1781 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp1921 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp1921 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp1922 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp1922 4838 4838 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 4838 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp1923 ___749_c $tmp1779.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp1924 $tmp1923 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp1924 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp1925 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp1925 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp1926 $tmp1779.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp1926 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp1927 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp1928 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp1928 4851 4851 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 4851 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp1929 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp1929 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp1931 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp1932 ___748_norm $tmp1931 	%argrw{"wrr"}
	add		___748_result $tmp1932 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp1778 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:799
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp1781 	%filename{"PxrMultiTexture.osl"} %line{799} %argrw{"wrr"}
	aassign		grads ___818_g $tmp1782 	%argrw{"wrr"}
# PxrMultiTexture.osl:796
#                     colors[g] = hexTileLookup(filename6, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp1778 	%line{796} %argrw{"wrr"}
# PxrMultiTexture.osl:801
#                 else if (texId == 7)
	eq		$tmp1935 ___820_texId $const37 	%line{801} %argrw{"wrr"}
	if		$tmp1935 5281 6131 	%argrw{"r"}
# PxrMultiTexture.osl:806
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp1937.powerTtoG hexTex.powerTtoG ___818_g 	%line{806} %argrw{"wrr"}
	aref		$tmp1937.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp1938.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp1938.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp1938.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp1938.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp1939 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp1940 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:803
#                     colors[g] = hexTileLookup(filename7, txparams, linearize, mipBias,
	functioncall	$const82 5278 	%line{803} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp1940 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp1942 4874 4876 5264 5266 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp1941 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp1942 $tmp1941 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp1938.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp1943 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp1943 4880 4880 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp1944 $tmp1938.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp1945 $tmp1938.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 5005 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 4890 4891 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 4890 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp1946 $tmp1945 	%line{48} %argrw{"wr"}
	add		$tmp1947 $tmp1946 $const9 	%argrw{"wrr"}
	floor		$tmp1948 $tmp1945 	%argrw{"wr"}
	sub		$tmp1949 $tmp1945 $tmp1948 	%argrw{"wrr"}
	sub		___656__tt $tmp1947 $tmp1949 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp1945 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 4990 4997 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp1950 $tmp1944 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp1950 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp1951 $tmp1944 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp1951 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp1952 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp1952 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp1953 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp1953 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp1954 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp1955 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp1954 $tmp1955 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp1956 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp1956 4916 4950 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp1957 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp1958 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp1959 $tmp1957 $tmp1958 	%argrw{"wrr"}
	div		___657_dPds $tmp1959 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp1960 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp1961 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp1962 $tmp1960 $tmp1961 	%argrw{"wrr"}
	div		___657_dPdt $tmp1962 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp1963 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp1963 4919 4920 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp1964 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp1964 4923 4924 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp1965 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp1966 $tmp1965 $const18 	%argrw{"wrr"}
	neq		$tmp1967 $tmp1966 $const2 	%argrw{"wrr"}
	if		$tmp1967 4931 4931 	%argrw{"r"}
	neq		$tmp1968 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp1969 $tmp1968 $const2 	%argrw{"wrr"}
	assign		$tmp1967 $tmp1969 	%argrw{"wr"}
	if		$tmp1967 4933 4933 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp1970 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp1971 $tmp1970 $const18 	%argrw{"wrr"}
	neq		$tmp1972 $tmp1971 $const2 	%argrw{"wrr"}
	if		$tmp1972 4940 4940 	%argrw{"r"}
	neq		$tmp1973 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp1974 $tmp1973 $const2 	%argrw{"wrr"}
	assign		$tmp1972 $tmp1974 	%argrw{"wr"}
	if		$tmp1972 4942 4942 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp1975 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp1976 $tmp1975 $const18 	%argrw{"wrr"}
	if		$tmp1976 4946 4946 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp1977 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp1978 $tmp1977 $const18 	%argrw{"wrr"}
	if		$tmp1978 4950 4950 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp1979 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp1979 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp1980 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp1980 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp1944 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp1944 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp1981 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp1982 ___657_dyss 	%argrw{"wr"}
	gt		$tmp1983 $tmp1981 $tmp1982 	%argrw{"wrr"}
	if		$tmp1983 4963 4964 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp1984 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp1985 ___657_dytt 	%argrw{"wr"}
	gt		$tmp1986 $tmp1984 $tmp1985 	%argrw{"wrr"}
	if		$tmp1986 4969 4970 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp1987 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp1988 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp1987 $tmp1988 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 4983 4990 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp1944 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp1944 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp1944 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp1944 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp1944 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp1989 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp1990 $tmp1989 $const2 	%argrw{"wrr"}
	if		$tmp1990 5008 5011 	%argrw{"r"}
	neq		$tmp1991 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp1992 $tmp1991 $const2 	%argrw{"wrr"}
	assign		$tmp1990 $tmp1992 	%argrw{"wr"}
	if		$tmp1990 5079 5079 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 5079 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp1993 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp1993 5017 5018 	%argrw{"r"}
	assign		$tmp1994 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp1994 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp1995 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp1995 5079 5079 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 5064 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp1996 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp1997 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp1996 $tmp1997 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp1998 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp1999 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp1998 $tmp1999 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp2000 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp2000 5055 5064 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp2001 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp2001 5048 5055 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp2002 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp2002 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp2003 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp2003 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp2004 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp2004 5064 5064 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp2005 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp2005 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp2006 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp2006 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp2007 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp2008 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp2007 $tmp2008 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp2009 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp2010 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp2009 $tmp2010 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp2011 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 5074 5075 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 5110 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2012 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename7 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2012 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2013 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2013 5089 5089 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename7 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2014 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2014 5095 5095 	%argrw{"r"}
	neq		$tmp2015 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2014 $tmp2015 	%argrw{"wr"}
	if		$tmp2014 5109 5109 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2016 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2017 $tmp2016 $const2 	%argrw{"wrr"}
	if		$tmp2017 5099 5102 	%argrw{"r"}
	eq		$tmp2018 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2019 $tmp2018 $const2 	%argrw{"wrr"}
	assign		$tmp2017 $tmp2019 	%argrw{"wr"}
	if		$tmp2017 5109 5109 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2020 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2020 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2021 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2021 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2022 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2022 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 5212 5212 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp2023.x $tmp1938.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp2023.y $tmp1938.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 5160 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp2024 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp2025 $tmp2024 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp2025 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp2026 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp2027 $tmp2026 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp2027 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp2029 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp2028 dPdv $tmp2029 	%argrw{"wrr"}
	lt		$tmp2030 $tmp2028 $const18 	%argrw{"wrr"}
	if		$tmp2030 5125 5126 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 5129 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp2023.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp2023.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 5132 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp2023.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp2023.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp2031.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp2031.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 5138 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp2032 ___714_dSTdx.x $tmp2031.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp2033 ___714_dSTdx.y $tmp2031.y 	%argrw{"wrr"}
	add		___714_det $tmp2032 $tmp2033 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp2034 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp2034 5141 5142 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp2035.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp2035.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 5150 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp2036.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp2036.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 5150 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp2035.x $tmp2036.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp2035.y $tmp2036.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp2037 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp2038 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp2037 $tmp2038 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp2039 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp2040 $tmp2039 $const18 	%argrw{"wrr"}
	if		$tmp2040 5157 5157 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp2041 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp2042 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp2041 $tmp2042 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 5179 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp2043 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp2043 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp2044 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp2044 5165 5178 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp2045 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp2045 5170 5178 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp2046 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp2047 $tmp2046 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp2047 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 5174 5174 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp2048 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp2049 $tmp2048 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp2049 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 5178 5178 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp2050 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp2051 $tmp2050 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp2051 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 5206 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp2054 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp2056 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp2057 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp2055 $tmp2056 $tmp2057 	%argrw{"wrr"}
	mul		$tmp2058 ___715_scale $tmp2055 	%argrw{"wrr"}
	max		___715_z_ma $tmp2054 $tmp2058 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 5191 5192 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp2060.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp2061 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp2060.y ___715_s $tmp2061 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 5198 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp2059.x $tmp2060.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp2059.y $tmp2060.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 5205 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp2062.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp2062.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 5205 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp2053.x $tmp2059.x $tmp2062.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp2053.y $tmp2059.y $tmp2062.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 5210 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp2063 $tmp2053.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp2064 $tmp2053.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp2052 $tmp2063 $tmp2064 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp2065 $tmp2052 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp1940 $tmp1940 $tmp2065 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 5236 5236 	%line{333} %argrw{"r"}
	functioncall	$const26 5236 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 5218 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp2067 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp2066 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp2068 $tmp2066 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp2068 5236 5236 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp2070 5222 5224 5235 5236 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp2069 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp2070 $tmp2069 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp2071 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp2072 $tmp2071 $const29 	%argrw{"wrr"}
	if		$tmp2072 5230 5235 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp2073 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp2074 $tmp2073 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp2074 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp2076 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp2077 $tmp2076 $const31 	%argrw{"wrr"}
	mul		$tmp2078 $tmp2077 $const32 	%argrw{"wrr"}
	pow		$tmp2075 $tmp2078 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp2075 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 5249 5249 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 5248 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename7 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp1939 $tmp1939 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp2079 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp2079 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp2080 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp2080 5264 5264 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 5264 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp2081 ___749_c $tmp1937.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp2082 $tmp2081 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp2082 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp2083 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp2083 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp2084 $tmp1937.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp2084 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp2085 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp2086 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp2086 5277 5277 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 5277 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp2087 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp2087 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp2089 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp2090 ___748_norm $tmp2089 	%argrw{"wrr"}
	add		___748_result $tmp2090 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp1936 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:806
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp1939 	%filename{"PxrMultiTexture.osl"} %line{806} %argrw{"wrr"}
	aassign		grads ___818_g $tmp1940 	%argrw{"wrr"}
# PxrMultiTexture.osl:803
#                     colors[g] = hexTileLookup(filename7, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp1936 	%line{803} %argrw{"wrr"}
# PxrMultiTexture.osl:808
#                 else if (texId == 8)
	eq		$tmp2093 ___820_texId $const38 	%line{808} %argrw{"wrr"}
	if		$tmp2093 5707 6131 	%argrw{"r"}
# PxrMultiTexture.osl:813
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp2095.powerTtoG hexTex.powerTtoG ___818_g 	%line{813} %argrw{"wrr"}
	aref		$tmp2095.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp2096.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp2096.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp2096.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp2096.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp2097 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp2098 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:810
#                     colors[g] = hexTileLookup(filename8, txparams, linearize, mipBias,
	functioncall	$const82 5704 	%line{810} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp2098 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp2100 5300 5302 5690 5692 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp2099 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp2100 $tmp2099 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp2096.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp2101 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp2101 5306 5306 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp2102 $tmp2096.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp2103 $tmp2096.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 5431 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 5316 5317 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 5316 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp2104 $tmp2103 	%line{48} %argrw{"wr"}
	add		$tmp2105 $tmp2104 $const9 	%argrw{"wrr"}
	floor		$tmp2106 $tmp2103 	%argrw{"wr"}
	sub		$tmp2107 $tmp2103 $tmp2106 	%argrw{"wrr"}
	sub		___656__tt $tmp2105 $tmp2107 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp2103 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 5416 5423 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp2108 $tmp2102 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp2108 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp2109 $tmp2102 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp2109 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp2110 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp2110 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp2111 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp2111 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp2112 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp2113 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp2112 $tmp2113 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp2114 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp2114 5342 5376 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp2115 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp2116 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp2117 $tmp2115 $tmp2116 	%argrw{"wrr"}
	div		___657_dPds $tmp2117 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp2118 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp2119 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp2120 $tmp2118 $tmp2119 	%argrw{"wrr"}
	div		___657_dPdt $tmp2120 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp2121 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp2121 5345 5346 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp2122 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp2122 5349 5350 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp2123 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp2124 $tmp2123 $const18 	%argrw{"wrr"}
	neq		$tmp2125 $tmp2124 $const2 	%argrw{"wrr"}
	if		$tmp2125 5357 5357 	%argrw{"r"}
	neq		$tmp2126 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp2127 $tmp2126 $const2 	%argrw{"wrr"}
	assign		$tmp2125 $tmp2127 	%argrw{"wr"}
	if		$tmp2125 5359 5359 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp2128 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp2129 $tmp2128 $const18 	%argrw{"wrr"}
	neq		$tmp2130 $tmp2129 $const2 	%argrw{"wrr"}
	if		$tmp2130 5366 5366 	%argrw{"r"}
	neq		$tmp2131 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp2132 $tmp2131 $const2 	%argrw{"wrr"}
	assign		$tmp2130 $tmp2132 	%argrw{"wr"}
	if		$tmp2130 5368 5368 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp2133 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp2134 $tmp2133 $const18 	%argrw{"wrr"}
	if		$tmp2134 5372 5372 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp2135 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp2136 $tmp2135 $const18 	%argrw{"wrr"}
	if		$tmp2136 5376 5376 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp2137 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp2137 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp2138 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp2138 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp2102 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp2102 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp2139 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp2140 ___657_dyss 	%argrw{"wr"}
	gt		$tmp2141 $tmp2139 $tmp2140 	%argrw{"wrr"}
	if		$tmp2141 5389 5390 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp2142 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp2143 ___657_dytt 	%argrw{"wr"}
	gt		$tmp2144 $tmp2142 $tmp2143 	%argrw{"wrr"}
	if		$tmp2144 5395 5396 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp2145 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp2146 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp2145 $tmp2146 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 5409 5416 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp2102 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp2102 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp2102 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp2102 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp2102 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp2147 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp2148 $tmp2147 $const2 	%argrw{"wrr"}
	if		$tmp2148 5434 5437 	%argrw{"r"}
	neq		$tmp2149 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp2150 $tmp2149 $const2 	%argrw{"wrr"}
	assign		$tmp2148 $tmp2150 	%argrw{"wr"}
	if		$tmp2148 5505 5505 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 5505 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp2151 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp2151 5443 5444 	%argrw{"r"}
	assign		$tmp2152 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp2152 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp2153 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp2153 5505 5505 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 5490 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp2154 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp2155 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp2154 $tmp2155 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp2156 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp2157 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp2156 $tmp2157 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp2158 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp2158 5481 5490 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp2159 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp2159 5474 5481 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp2160 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp2160 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp2161 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp2161 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp2162 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp2162 5490 5490 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp2163 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp2163 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp2164 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp2164 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp2165 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp2166 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp2165 $tmp2166 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp2167 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp2168 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp2167 $tmp2168 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp2169 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 5500 5501 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 5536 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2170 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename8 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2170 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2171 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2171 5515 5515 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename8 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2172 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2172 5521 5521 	%argrw{"r"}
	neq		$tmp2173 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2172 $tmp2173 	%argrw{"wr"}
	if		$tmp2172 5535 5535 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2174 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2175 $tmp2174 $const2 	%argrw{"wrr"}
	if		$tmp2175 5525 5528 	%argrw{"r"}
	eq		$tmp2176 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2177 $tmp2176 $const2 	%argrw{"wrr"}
	assign		$tmp2175 $tmp2177 	%argrw{"wr"}
	if		$tmp2175 5535 5535 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2178 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2178 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2179 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2179 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2180 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2180 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 5638 5638 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp2181.x $tmp2096.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp2181.y $tmp2096.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 5586 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp2182 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp2183 $tmp2182 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp2183 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp2184 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp2185 $tmp2184 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp2185 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp2187 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp2186 dPdv $tmp2187 	%argrw{"wrr"}
	lt		$tmp2188 $tmp2186 $const18 	%argrw{"wrr"}
	if		$tmp2188 5551 5552 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 5555 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp2181.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp2181.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 5558 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp2181.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp2181.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp2189.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp2189.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 5564 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp2190 ___714_dSTdx.x $tmp2189.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp2191 ___714_dSTdx.y $tmp2189.y 	%argrw{"wrr"}
	add		___714_det $tmp2190 $tmp2191 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp2192 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp2192 5567 5568 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp2193.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp2193.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 5576 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp2194.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp2194.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 5576 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp2193.x $tmp2194.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp2193.y $tmp2194.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp2195 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp2196 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp2195 $tmp2196 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp2197 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp2198 $tmp2197 $const18 	%argrw{"wrr"}
	if		$tmp2198 5583 5583 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp2199 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp2200 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp2199 $tmp2200 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 5605 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp2201 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp2201 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp2202 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp2202 5591 5604 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp2203 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp2203 5596 5604 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp2204 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp2205 $tmp2204 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp2205 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 5600 5600 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp2206 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp2207 $tmp2206 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp2207 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 5604 5604 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp2208 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp2209 $tmp2208 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp2209 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 5632 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp2212 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp2214 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp2215 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp2213 $tmp2214 $tmp2215 	%argrw{"wrr"}
	mul		$tmp2216 ___715_scale $tmp2213 	%argrw{"wrr"}
	max		___715_z_ma $tmp2212 $tmp2216 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 5617 5618 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp2218.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp2219 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp2218.y ___715_s $tmp2219 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 5624 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp2217.x $tmp2218.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp2217.y $tmp2218.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 5631 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp2220.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp2220.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 5631 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp2211.x $tmp2217.x $tmp2220.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp2211.y $tmp2217.y $tmp2220.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 5636 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp2221 $tmp2211.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp2222 $tmp2211.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp2210 $tmp2221 $tmp2222 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp2223 $tmp2210 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp2098 $tmp2098 $tmp2223 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 5662 5662 	%line{333} %argrw{"r"}
	functioncall	$const26 5662 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 5644 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp2225 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp2224 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp2226 $tmp2224 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp2226 5662 5662 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp2228 5648 5650 5661 5662 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp2227 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp2228 $tmp2227 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp2229 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp2230 $tmp2229 $const29 	%argrw{"wrr"}
	if		$tmp2230 5656 5661 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp2231 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp2232 $tmp2231 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp2232 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp2234 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp2235 $tmp2234 $const31 	%argrw{"wrr"}
	mul		$tmp2236 $tmp2235 $const32 	%argrw{"wrr"}
	pow		$tmp2233 $tmp2236 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp2233 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 5675 5675 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 5674 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename8 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp2097 $tmp2097 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp2237 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp2237 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp2238 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp2238 5690 5690 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 5690 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp2239 ___749_c $tmp2095.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp2240 $tmp2239 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp2240 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp2241 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp2241 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp2242 $tmp2095.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp2242 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp2243 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp2244 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp2244 5703 5703 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 5703 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp2245 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp2245 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp2247 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp2248 ___748_norm $tmp2247 	%argrw{"wrr"}
	add		___748_result $tmp2248 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp2094 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:813
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp2097 	%filename{"PxrMultiTexture.osl"} %line{813} %argrw{"wrr"}
	aassign		grads ___818_g $tmp2098 	%argrw{"wrr"}
# PxrMultiTexture.osl:810
#                     colors[g] = hexTileLookup(filename8, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp2094 	%line{810} %argrw{"wrr"}
# PxrMultiTexture.osl:820
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aref		$tmp2252.powerTtoG hexTex.powerTtoG ___818_g 	%line{820} %argrw{"wrr"}
	aref		$tmp2252.powerGtoT hexTex.powerGtoT ___818_g 	%argrw{"wrr"}
	aref		$tmp2253.s hexData.s ___818_g 	%argrw{"wrr"}
	aref		$tmp2253.t hexData.t ___818_g 	%argrw{"wrr"}
	aref		$tmp2253.w hexData.w ___818_g 	%argrw{"wrr"}
	aref		$tmp2253.r hexData.r ___818_g 	%argrw{"wrr"}
	aref		$tmp2254 alphas ___818_g 	%argrw{"wrr"}
	aref		$tmp2255 grads ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:817
#                     colors[g] = hexTileLookup(filename9, txparams, linearize, mipBias,
	functioncall	$const82 6128 	%line{817} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:310
#     HexTileColor hexCol = HEXTILECOLOR_ZERO;
	assign		___749_hexCol.value $const40 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{310} %argrw{"wr"}
	assign		___749_hexCol.norm $const18 	%argrw{"wr"}
	assign		___749_hexCol.powerGtoT $const40 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:311
#     color co = 0, cc = 0, c;
	assign		___749_co $const2 	%line{311} %argrw{"wr"}
	assign		___749_cc $const2 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:313
#     ng = 0;
	assign		$tmp2255 $const2 	%line{313} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	for		$tmp2257 5724 5726 6114 6116 	%line{315} %argrw{"r"}
	assign		___750_i $const2 	%argrw{"wr"}
	lt		$tmp2256 ___750_i $const5 	%argrw{"wrr"}
	neq		$tmp2257 $tmp2256 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:317
#         float w = hexData.w[i];
	compref		___751_w $tmp2253.w ___750_i 	%line{317} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:318
#         if (w == 0.0)
	eq		$tmp2258 ___751_w $const18 	%line{318} %argrw{"wrr"}
	if		$tmp2258 5730 5730 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:319
#             continue;
	continue	%line{319}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:322
#         TxCoords txcoords = initTxCoords(hexData.s[i], hexData.t[i], 0, 1);
	compref		$tmp2259 $tmp2253.s ___750_i 	%line{322} %argrw{"wrr"}
	compref		$tmp2260 $tmp2253.t ___750_i 	%argrw{"wrr"}
	functioncall	$const16 5855 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		$const2 5740 5741 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 5740 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp2261 $tmp2260 	%line{48} %argrw{"wr"}
	add		$tmp2262 $tmp2261 $const9 	%argrw{"wrr"}
	floor		$tmp2263 $tmp2260 	%argrw{"wr"}
	sub		$tmp2264 $tmp2260 $tmp2263 	%argrw{"wrr"}
	sub		___656__tt $tmp2262 $tmp2264 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp2260 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		$const3 5840 5847 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp2265 $tmp2259 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp2265 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp2266 $tmp2259 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp2266 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp2267 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp2267 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp2268 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp2268 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp2269 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp2270 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp2269 $tmp2270 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp2271 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp2271 5766 5800 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp2272 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp2273 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp2274 $tmp2272 $tmp2273 	%argrw{"wrr"}
	div		___657_dPds $tmp2274 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp2275 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp2276 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp2277 $tmp2275 $tmp2276 	%argrw{"wrr"}
	div		___657_dPdt $tmp2277 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp2278 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp2278 5769 5770 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp2279 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp2279 5773 5774 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp2280 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp2281 $tmp2280 $const18 	%argrw{"wrr"}
	neq		$tmp2282 $tmp2281 $const2 	%argrw{"wrr"}
	if		$tmp2282 5781 5781 	%argrw{"r"}
	neq		$tmp2283 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp2284 $tmp2283 $const2 	%argrw{"wrr"}
	assign		$tmp2282 $tmp2284 	%argrw{"wr"}
	if		$tmp2282 5783 5783 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp2285 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp2286 $tmp2285 $const18 	%argrw{"wrr"}
	neq		$tmp2287 $tmp2286 $const2 	%argrw{"wrr"}
	if		$tmp2287 5790 5790 	%argrw{"r"}
	neq		$tmp2288 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp2289 $tmp2288 $const2 	%argrw{"wrr"}
	assign		$tmp2287 $tmp2289 	%argrw{"wr"}
	if		$tmp2287 5792 5792 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp2290 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp2291 $tmp2290 $const18 	%argrw{"wrr"}
	if		$tmp2291 5796 5796 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp2292 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp2293 $tmp2292 $const18 	%argrw{"wrr"}
	if		$tmp2293 5800 5800 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp2294 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp2294 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp2295 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp2295 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp2259 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp2259 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp2296 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp2297 ___657_dyss 	%argrw{"wr"}
	gt		$tmp2298 $tmp2296 $tmp2297 	%argrw{"wrr"}
	if		$tmp2298 5813 5814 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp2299 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp2300 ___657_dytt 	%argrw{"wr"}
	gt		$tmp2301 $tmp2299 $tmp2300 	%argrw{"wrr"}
	if		$tmp2301 5819 5820 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp2302 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp2303 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp2302 $tmp2303 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 5833 5840 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp2259 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp2259 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp2259 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp2259 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp2259 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___751_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___751_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___751_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___751_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___751_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___751_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___751_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:323
#         if (mipBias != 0 || maxResolution != 0)
	neq		$tmp2304 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{323} %argrw{"wrr"}
	neq		$tmp2305 $tmp2304 $const2 	%argrw{"wrr"}
	if		$tmp2305 5858 5861 	%argrw{"r"}
	neq		$tmp2306 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp2307 $tmp2306 $const2 	%argrw{"wrr"}
	assign		$tmp2305 $tmp2307 	%argrw{"wr"}
	if		$tmp2305 5929 5929 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:324
#             PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 5929 	%line{324} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp2308 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp2308 5867 5868 	%argrw{"r"}
	assign		$tmp2309 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp2309 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp2310 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp2310 5929 5929 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 5914 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___751_txcoords.dsdx ___751_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___751_txcoords.dtdx ___751_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___751_txcoords.dsdy ___751_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___751_txcoords.dtdy ___751_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp2311 ___751_txcoords.dsdx ___751_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp2312 ___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp2311 $tmp2312 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp2313 ___751_txcoords.dsdy ___751_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp2314 ___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp2313 $tmp2314 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp2315 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp2315 5905 5914 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp2316 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp2316 5898 5905 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___751_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___751_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___751_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___751_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp2317 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp2317 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___751_txcoords.dsdx ___751_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___751_txcoords.dsdx ___751_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp2318 ___751_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___751_txcoords.dtdx $tmp2318 ___674_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dtdx ___751_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp2319 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp2319 5914 5914 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp2320 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp2320 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp2321 ___751_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___751_txcoords.dsdy $tmp2321 ___675_scale 	%argrw{"wrr"}
	assign		___751_txcoords.dsdy ___751_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___751_txcoords.dtdy ___751_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___751_txcoords.dtdy ___751_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp2322 ___751_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp2323 ___751_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp2322 $tmp2323 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp2324 ___751_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp2325 ___751_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp2324 $tmp2325 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp2326 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 5924 5925 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___751_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:325
#         c = PxrTextureLookup(filename, txcoords, txparams);
	functioncall	$const19 5960 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{325} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2327 ___751_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename9 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2327 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2328 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2328 5939 5939 	%argrw{"r"}
	assign		___749_c ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename9 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2329 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2329 5945 5945 	%argrw{"r"}
	neq		$tmp2330 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2329 $tmp2330 	%argrw{"wr"}
	if		$tmp2329 5959 5959 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2331 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2332 $tmp2331 $const2 	%argrw{"wrr"}
	if		$tmp2332 5949 5952 	%argrw{"r"}
	eq		$tmp2333 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2334 $tmp2333 $const2 	%argrw{"wrr"}
	assign		$tmp2332 $tmp2334 	%argrw{"wr"}
	if		$tmp2332 5959 5959 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2335 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2335 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2336 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2336 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2337 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2337 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		___749_c ___679_finalResult 	%line{357} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:326
#         if (nMap.enabled)
	if		nMap.enabled 6062 6062 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{326} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:329
#             GenBasisTB(Tn, Bn, float2(hexData.s[i], hexData.t[i]), N);
	compref		$tmp2338.x $tmp2253.s ___750_i 	%line{329} %argrw{"wrr"}
	compref		$tmp2338.y $tmp2253.t ___750_i 	%argrw{"wrr"}
	functioncall	$const88 6010 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:55
#     vector sigmaX = dPdu - dot(dPdu, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp2339 dPdu N 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{55} %argrw{"wrr"}
	mul		$tmp2340 $tmp2339 N 	%argrw{"wrr"}
	sub		___714_sigmaX dPdu $tmp2340 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:56
#     vector sigmaY = dPdv - dot(dPdv, nrmBaseNormal)*nrmBaseNormal;
	dot		$tmp2341 dPdv N 	%line{56} %argrw{"wrr"}
	mul		$tmp2342 $tmp2341 N 	%argrw{"wrr"}
	sub		___714_sigmaY dPdv $tmp2342 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:57
#     float flip_sign = dot(dPdv, cross(nrmBaseNormal, dPdu)) < 0.0 ? -1.0 : 1.0;
	cross		$tmp2344 N dPdu 	%line{57} %argrw{"wrr"}
	dot		$tmp2343 dPdv $tmp2344 	%argrw{"wrr"}
	lt		$tmp2345 $tmp2343 $const18 	%argrw{"wrr"}
	if		$tmp2345 5975 5976 	%argrw{"r"}
	assign		___714_flip_sign $const89 	%argrw{"wr"}
	assign		___714_flip_sign $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:59
#     float2 dSTdx = Dx(texST);
	functioncall	$const90 5979 	%line{59} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:167
#     return float2(Dx(a.x), Dx(a.y));
	Dx		___714_dSTdx.x $tmp2338.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{167} %argrw{"wr"} %argderivs{1}
	Dx		___714_dSTdx.y $tmp2338.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:60
#     float2 dSTdy = Dy(texST);
	functioncall	$const91 5982 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{60} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:172
#     return float2(Dy(a.x), Dy(a.y));
	Dy		___714_dSTdy.x $tmp2338.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{172} %argrw{"wr"} %argderivs{1}
	Dy		___714_dSTdy.y $tmp2338.y 	%argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:61
#     float det = dot(dSTdx, float2(dSTdy.y, -dSTdy.x));
	assign		$tmp2346.x ___714_dSTdy.y 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{61} %argrw{"wr"}
	neg		$tmp2346.y ___714_dSTdy.x 	%argrw{"wr"}
	functioncall	$const92 5988 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:162
#     return a.x * b.x + a.y * b.y;
	mul		$tmp2347 ___714_dSTdx.x $tmp2346.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{162} %argrw{"wrr"}
	mul		$tmp2348 ___714_dSTdx.y $tmp2346.y 	%argrw{"wrr"}
	add		___714_det $tmp2347 $tmp2348 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:62
#     float sign_det = det < 0.0 ? -1.0 : 1.0;
	lt		$tmp2349 ___714_det $const18 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{62} %argrw{"wrr"}
	if		$tmp2349 5991 5992 	%argrw{"r"}
	assign		___714_sign_det $const89 	%argrw{"wr"}
	assign		___714_sign_det $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:66
#     float2 invC0 = sign_det * float2(dSTdy.y, -dSTdx.y);
	assign		$tmp2350.x ___714_dSTdy.y 	%line{66} %argrw{"wr"}
	neg		$tmp2350.y ___714_dSTdx.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 6000 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:130
#     return b * float2(a, a);
	assign		$tmp2351.x ___714_sign_det 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{130} %argrw{"wr"}
	assign		$tmp2351.y ___714_sign_det 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 6000 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		___714_invC0.x $tmp2350.x $tmp2351.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		___714_invC0.y $tmp2350.y $tmp2351.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:67
#     vT = sigmaX * invC0.x + sigmaY * invC0.y;
	mul		$tmp2352 ___714_sigmaX ___714_invC0.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{67} %argrw{"wrr"}
	mul		$tmp2353 ___714_sigmaY ___714_invC0.y 	%argrw{"wrr"}
	add		___752_Tn $tmp2352 $tmp2353 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:68
#     if (abs(det) > 0.0) vT = normalize(vT);
	abs		$tmp2354 ___714_det 	%line{68} %argrw{"wr"}
	gt		$tmp2355 $tmp2354 $const18 	%argrw{"wrr"}
	if		$tmp2355 6007 6007 	%argrw{"r"}
	normalize	___752_Tn ___752_Tn 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:69
#     vB = (sign_det * flip_sign) * cross(nrmBaseNormal, vT);
	mul		$tmp2356 ___714_sign_det ___714_flip_sign 	%line{69} %argrw{"wrr"}
	cross		$tmp2357 N ___752_Tn 	%argrw{"wrr"}
	mul		___752_Bn $tmp2356 $tmp2357 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:330
#             setupNormalMapHex(nMap, c);
	functioncall	$const94 6029 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{330} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:171
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp2358 ___749_c $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{171} %argrw{"wrr"}
	sub		___724_tsNormal $tmp2358 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:173
#     if (nmp.orientation == k_opengl)
	eq		$tmp2359 nMap.orientation $const2 	%line{173} %argrw{"wrr"}
	if		$tmp2359 6015 6028 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:177
#     else if (nmp.orientation == k_directx)
	eq		$tmp2360 nMap.orientation $const3 	%line{177} %argrw{"wrr"}
	if		$tmp2360 6020 6028 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:179
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp2361 ___724_tsNormal $const3 	%line{179} %argrw{"wrr"}
	neg		$tmp2362 $tmp2361 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp2362 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:183
#         if (nmp.flipX)
	if		nMap.flipX 6024 6024 	%line{183} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:184
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp2363 ___724_tsNormal $const2 	%line{184} %argrw{"wrr"}
	neg		$tmp2364 $tmp2363 	%argrw{"wr"}
	compassign	___724_tsNormal $const2 $tmp2364 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:185
#         if (nmp.flipY)
	if		nMap.flipY 6028 6028 	%line{185} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:186
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp2365 ___724_tsNormal $const3 	%line{186} %argrw{"wrr"}
	neg		$tmp2366 $tmp2365 	%argrw{"wr"}
	compassign	___724_tsNormal $const3 $tmp2366 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:188
#     nmap = tsNormal;
	assign		___749_c ___724_tsNormal 	%line{188} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const95 6056 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___749_c 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp2369 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp2371 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp2372 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp2370 $tmp2371 $tmp2372 	%argrw{"wrr"}
	mul		$tmp2373 ___715_scale $tmp2370 	%argrw{"wrr"}
	max		___715_z_ma $tmp2369 $tmp2373 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 6041 6042 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp2375.x ___749_c $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp2376 ___749_c $const3 	%argrw{"wrr"}
	mul		$tmp2375.y ___715_s $tmp2376 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 6048 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp2374.x $tmp2375.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp2374.y $tmp2375.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 6055 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp2377.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp2377.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 6055 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp2368.x $tmp2374.x $tmp2377.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp2368.y $tmp2374.y $tmp2377.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	functioncall	$const99 6060 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp2378 $tmp2368.x ___752_Tn 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp2379 $tmp2368.y ___752_Bn 	%argrw{"wrr"}
	add		$tmp2367 $tmp2378 $tmp2379 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:331
#             ng += SurfgradFromTBN(TspaceNormalToDerivative(c), Tn, Bn) * w;
	mul		$tmp2380 $tmp2367 ___751_w 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{331} %argrw{"wrr"}
	add		$tmp2255 $tmp2255 $tmp2380 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:333
#         if (linearize) PxrLinearizeSRGB(c);
	if		linearize 6086 6086 	%line{333} %argrw{"r"}
	functioncall	$const26 6086 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 6068 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp2382 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp2381 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp2383 $tmp2381 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp2383 6086 6086 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp2385 6072 6074 6085 6086 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp2384 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp2385 $tmp2384 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp2386 ___749_c ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp2387 $tmp2386 $const29 	%argrw{"wrr"}
	if		$tmp2387 6080 6085 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp2388 ___749_c ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp2389 $tmp2388 $const30 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp2389 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp2391 ___749_c ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp2392 $tmp2391 $const31 	%argrw{"wrr"}
	mul		$tmp2393 $tmp2392 $const32 	%argrw{"wrr"}
	pow		$tmp2390 $tmp2393 $const33 	%argrw{"wrr"}
	compassign	___749_c ___667_i $tmp2390 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:335
#         if (needAlpha)
	if		needAlpha 6099 6099 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{335} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:337
#             TxParams alphaParams = txparams;
	assign		___753_alphaParams.firstchannel txparams.firstchannel 	%line{337} %argrw{"wr"}
	assign		___753_alphaParams.blur txparams.blur 	%argrw{"wr"}
	assign		___753_alphaParams.missingcolor txparams.missingcolor 	%argrw{"wr"}
	assign		___753_alphaParams.missingalpha txparams.missingalpha 	%argrw{"wr"}
	assign		___753_alphaParams.interp txparams.interp 	%argrw{"wr"}
	assign		___753_alphaParams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:338
#             alphaParams.firstchannel += 3;    // XXX: Assume RGBA
	add		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel $const5 	%line{338} %argrw{"wrr"}
	assign		___753_alphaParams.firstchannel ___753_alphaParams.firstchannel 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:339
#             a = PxrTextureLookup(filename, txcoords, alphaParams);
	functioncall	$const19 6098 	%line{339} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha ___753_alphaParams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		___749_a filename9 ___751_txcoords.s ___751_txcoords.t ___751_txcoords.dsdx ___751_txcoords.dtdx ___751_txcoords.dsdy ___751_txcoords.dtdy $const20 ___753_alphaParams.firstchannel $const21 ___753_alphaParams.blur $const22 ___682_missingalpha $const23 ___753_alphaParams.interp $const24 ___753_alphaParams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:342
#             alpha = mix(alpha, 1, a);
	mix		$tmp2254 $tmp2254 $const9 ___749_a 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{342} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:346
#         co += c * w;
	mul		$tmp2394 ___749_c ___751_w 	%line{346} %argrw{"wrr"}
	add		___749_co ___749_co $tmp2394 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:347
#         if (blendingContrast > 0)
	gt		$tmp2395 blendingContrast $const2 	%line{347} %argrw{"wrr"}
	if		$tmp2395 6114 6114 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:348
#             hexTileAccumulate(c, w, hexTex, hexCol);
	functioncall	$const100 6114 	%line{348} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp2396 ___749_c $tmp2252.powerTtoG 	%line{274} %argrw{"wrr"}
	mul		$tmp2397 $tmp2396 ___751_w 	%argrw{"wrr"}
	add		___749_hexCol.value ___749_hexCol.value $tmp2397 	%argrw{"wrr"}
	assign		___749_hexCol.value ___749_hexCol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp2398 ___751_w ___751_w 	%line{275} %argrw{"wrr"}
	add		___749_hexCol.norm ___749_hexCol.norm $tmp2398 	%argrw{"wrr"}
	assign		___749_hexCol.norm ___749_hexCol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp2399 $tmp2252.powerGtoT ___751_w 	%line{276} %argrw{"wrr"}
	add		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT $tmp2399 	%argrw{"wrr"}
	assign		___749_hexCol.powerGtoT ___749_hexCol.powerGtoT 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:315
#     for (int i=0; i<3; i++)
	assign		$tmp2400 ___750_i 	%line{315} %argrw{"wr"}
	add		___750_i ___750_i $const3 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:350
#     if (blendingContrast > 0)
	gt		$tmp2401 blendingContrast $const2 	%line{350} %argrw{"wrr"}
	if		$tmp2401 6127 6127 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:351
#         cc = hexTileFinalColor(hexCol);
	functioncall	$const101 6127 	%line{351} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp2402 ___749_hexCol.norm 	%line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp2402 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp2404 ___749_hexCol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp2405 ___748_norm $tmp2404 	%argrw{"wrr"}
	add		___748_result $tmp2405 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___749_hexCol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___749_cc ___748_result 	%line{291} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:353
#     return mix(co, cc, blendingContrast);
	mix		$tmp2251 ___749_co ___749_cc blendingContrast 	%line{353} %argrw{"wrrr"}
# PxrMultiTexture.osl:820
#                                               hexTex[g], hexData[g], alphas[g], grads[g]);
	aassign		alphas ___818_g $tmp2254 	%filename{"PxrMultiTexture.osl"} %line{820} %argrw{"wrr"}
	aassign		grads ___818_g $tmp2255 	%argrw{"wrr"}
# PxrMultiTexture.osl:817
#                     colors[g] = hexTileLookup(filename9, txparams, linearize, mipBias,
	aassign		colors ___818_g $tmp2251 	%line{817} %argrw{"wrr"}
# PxrMultiTexture.osl:826
#                 TxCoords txcoords = initTxCoords(sta[g][0], sta[g][1], invertT, smoothRayDerivs);
	aref		$tmp2409 sta ___818_g 	%line{826} %argrw{"wrr"}
	compref		$tmp2408 $tmp2409 $const2 	%argrw{"wrr"}
	aref		$tmp2411 sta ___818_g 	%argrw{"wrr"}
	compref		$tmp2410 $tmp2411 $const3 	%argrw{"wrr"}
	functioncall	$const16 6258 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	if		invertT 6143 6144 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{110} %argrw{"r"}
	functioncall	$const17 6143 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:48
#     return floor(tt) + 1.0 - (tt - floor(tt));
	floor		$tmp2412 $tmp2410 	%line{48} %argrw{"wr"}
	add		$tmp2413 $tmp2412 $const9 	%argrw{"wrr"}
	floor		$tmp2414 $tmp2410 	%argrw{"wr"}
	sub		$tmp2415 $tmp2410 $tmp2414 	%argrw{"wrr"}
	sub		___656__tt $tmp2413 $tmp2415 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:110
#     float _tt = invertT ? invertCoord(tt) : tt;
	assign		___656__tt $tmp2410 	%line{110} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:111
#     float blur0 = 0.0;
	assign		___656_blur0 $const18 	%line{111} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:113
#     if (smoothRayDerivs)
	if		smoothRayDerivs 6243 6250 	%line{113} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:115
#         float du = length(dPdu);  // width of the ray hit footprint projected onto the dPdu direction
	length		___657_du dPdu 	%line{115} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:116
#         float dv = length(dPdv);  // width of the ray hit footprint projected onto the dPdv direction
	length		___657_dv dPdv 	%line{116} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:118
#         float dsdu = Dx(ss) * du;  // change in s over ray hit footprint
	Dx		$tmp2416 $tmp2408 	%line{118} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdu $tmp2416 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:119
#         float dsdv = Dy(ss) * dv;
	Dy		$tmp2417 $tmp2408 	%line{119} %argrw{"wr"} %argderivs{1}
	mul		___657_dsdv $tmp2417 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:120
#         float dtdu = Dx(_tt) * du;  // change in t over ray hit footprint
	Dx		$tmp2418 ___656__tt 	%line{120} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdu $tmp2418 ___657_du 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:121
#         float dtdv = Dy(_tt) * dv;
	Dy		$tmp2419 ___656__tt 	%line{121} %argrw{"wr"} %argderivs{1}
	mul		___657_dtdv $tmp2419 ___657_dv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:148
#         float det = dsdu * dtdv - dtdu * dsdv;
	mul		$tmp2420 ___657_dsdu ___657_dtdv 	%line{148} %argrw{"wrr"}
	mul		$tmp2421 ___657_dtdu ___657_dsdv 	%argrw{"wrr"}
	sub		___657_det $tmp2420 $tmp2421 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:150
#         if (det != 0.0)
	neq		$tmp2422 ___657_det $const18 	%line{150} %argrw{"wrr"}
	if		$tmp2422 6169 6203 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:152
#             dPds = (dPdu*dtdv - dPdv*dtdu) / det;
	mul		$tmp2423 dPdu ___657_dtdv 	%line{152} %argrw{"wrr"}
	mul		$tmp2424 dPdv ___657_dtdu 	%argrw{"wrr"}
	sub		$tmp2425 $tmp2423 $tmp2424 	%argrw{"wrr"}
	div		___657_dPds $tmp2425 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:153
#             dPdt = (dPdv*dsdu - dPdu*dsdv) / det;
	mul		$tmp2426 dPdv ___657_dsdu 	%line{153} %argrw{"wrr"}
	mul		$tmp2427 dPdu ___657_dsdv 	%argrw{"wrr"}
	sub		$tmp2428 $tmp2426 $tmp2427 	%argrw{"wrr"}
	div		___657_dPdt $tmp2428 ___657_det 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:157
#             dPds = (dsdu != 0.0) ? (dPdu / dsdu) : vector(0.0);
	neq		$tmp2429 ___657_dsdu $const18 	%line{157} %argrw{"wrr"}
	if		$tmp2429 6172 6173 	%argrw{"r"}
	div		___657_dPds dPdu ___657_dsdu 	%argrw{"wrr"}
	assign		___657_dPds $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:158
#             dPdt = (dtdv != 0.0) ? (dPdv / dtdv) : vector(0.0);
	neq		$tmp2430 ___657_dtdv $const18 	%line{158} %argrw{"wrr"}
	if		$tmp2430 6176 6177 	%argrw{"r"}
	div		___657_dPdt dPdv ___657_dtdv 	%argrw{"wrr"}
	assign		___657_dPdt $const1 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:160
#             if (length(dPds) == 0.0 && dsdv != 0.0) dPds = dPdv / dsdv;
	length		$tmp2431 ___657_dPds 	%line{160} %argrw{"wr"}
	eq		$tmp2432 $tmp2431 $const18 	%argrw{"wrr"}
	neq		$tmp2433 $tmp2432 $const2 	%argrw{"wrr"}
	if		$tmp2433 6184 6184 	%argrw{"r"}
	neq		$tmp2434 ___657_dsdv $const18 	%argrw{"wrr"}
	neq		$tmp2435 $tmp2434 $const2 	%argrw{"wrr"}
	assign		$tmp2433 $tmp2435 	%argrw{"wr"}
	if		$tmp2433 6186 6186 	%argrw{"r"}
	div		___657_dPds dPdv ___657_dsdv 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:161
#             if (length(dPdt) == 0.0 && dtdu != 0.0) dPdt = dPdu / dtdu;
	length		$tmp2436 ___657_dPdt 	%line{161} %argrw{"wr"}
	eq		$tmp2437 $tmp2436 $const18 	%argrw{"wrr"}
	neq		$tmp2438 $tmp2437 $const2 	%argrw{"wrr"}
	if		$tmp2438 6193 6193 	%argrw{"r"}
	neq		$tmp2439 ___657_dtdu $const18 	%argrw{"wrr"}
	neq		$tmp2440 $tmp2439 $const2 	%argrw{"wrr"}
	assign		$tmp2438 $tmp2440 	%argrw{"wr"}
	if		$tmp2438 6195 6195 	%argrw{"r"}
	div		___657_dPdt dPdu ___657_dtdu 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:163
#             if (length(dPds) == 0.0) dPds = dPdt;
	length		$tmp2441 ___657_dPds 	%line{163} %argrw{"wr"}
	eq		$tmp2442 $tmp2441 $const18 	%argrw{"wrr"}
	if		$tmp2442 6199 6199 	%argrw{"r"}
	assign		___657_dPds ___657_dPdt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:164
#             if (length(dPdt) == 0.0) dPdt = dPds;
	length		$tmp2443 ___657_dPdt 	%line{164} %argrw{"wr"}
	eq		$tmp2444 $tmp2443 $const18 	%argrw{"wrr"}
	if		$tmp2444 6203 6203 	%argrw{"r"}
	assign		___657_dPdt ___657_dPds 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:170
#         float filterwidthS = 1.0 / length(dPds);
	length		$tmp2445 ___657_dPds 	%line{170} %argrw{"wr"}
	div		___657_filterwidthS $const9 $tmp2445 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:171
#         float filterwidthT = 1.0 / length(dPdt);
	length		$tmp2446 ___657_dPdt 	%line{171} %argrw{"wr"}
	div		___657_filterwidthT $const9 $tmp2446 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:176
#         float dxss = Dx(ss);
	Dx		___657_dxss $tmp2408 	%line{176} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:177
#         float dxtt = Dx(_tt);
	Dx		___657_dxtt ___656__tt 	%line{177} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:178
#         float dyss = Dy(ss);
	Dy		___657_dyss $tmp2408 	%line{178} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:179
#         float dytt = Dy(_tt);
	Dy		___657_dytt ___656__tt 	%line{179} %argrw{"wr"} %argderivs{1}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:181
#         float signS = (abs(dxss) > abs(dyss)) ? sign(dxss) : sign(dyss);  // dominant sign (+/-) for ds
	abs		$tmp2447 ___657_dxss 	%line{181} %argrw{"wr"}
	abs		$tmp2448 ___657_dyss 	%argrw{"wr"}
	gt		$tmp2449 $tmp2447 $tmp2448 	%argrw{"wrr"}
	if		$tmp2449 6216 6217 	%argrw{"r"}
	sign		___657_signS ___657_dxss 	%argrw{"wr"}
	sign		___657_signS ___657_dyss 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:182
#         float signT = (abs(dxtt) > abs(dytt)) ? sign(dxtt) : sign(dytt);  // dominant sign (+/-) for dt
	abs		$tmp2450 ___657_dxtt 	%line{182} %argrw{"wr"}
	abs		$tmp2451 ___657_dytt 	%argrw{"wr"}
	gt		$tmp2452 $tmp2450 $tmp2451 	%argrw{"wrr"}
	if		$tmp2452 6222 6223 	%argrw{"r"}
	sign		___657_signT ___657_dxtt 	%argrw{"wr"}
	sign		___657_signT ___657_dytt 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:184
#         filterwidthS *= signS;
	mul		___657_filterwidthS ___657_filterwidthS ___657_signS 	%line{184} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:185
#         filterwidthT *= signT;
	mul		___657_filterwidthT ___657_filterwidthT ___657_signT 	%line{185} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:187
#         int unmixedDerivsAreDominant = (abs(dxss) > abs(dyss));
	abs		$tmp2453 ___657_dxss 	%line{187} %argrw{"wr"}
	abs		$tmp2454 ___657_dyss 	%argrw{"wr"}
	gt		___657_unmixedDerivsAreDominant $tmp2453 $tmp2454 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:188
#         if (unmixedDerivsAreDominant)
	if		___657_unmixedDerivsAreDominant 6236 6243 	%line{188} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:190
#             coords = TxCoords( ss, _tt, filterwidthS, 0.0, 0.0, filterwidthT, blur0 );
	assign		___656_coords.s $tmp2408 	%line{190} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdx $const18 	%argrw{"wr"}
	assign		___656_coords.dsdy $const18 	%argrw{"wr"}
	assign		___656_coords.dtdy ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:194
#             coords = TxCoords( ss, _tt, 0.0, filterwidthT, filterwidthS, 0.0, blur0 );
	assign		___656_coords.s $tmp2408 	%line{194} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	assign		___656_coords.dsdx $const18 	%argrw{"wr"}
	assign		___656_coords.dtdx ___657_filterwidthT 	%argrw{"wr"}
	assign		___656_coords.dsdy ___657_filterwidthS 	%argrw{"wr"}
	assign		___656_coords.dtdy $const18 	%argrw{"wr"}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:200
#         coords = TxCoords( ss, _tt, Dx(ss), Dx(_tt), Dy(ss), Dy(_tt), blur0 );
	assign		___656_coords.s $tmp2408 	%line{200} %argrw{"wr"}
	assign		___656_coords.t ___656__tt 	%argrw{"wr"}
	Dx		___656_coords.dsdx $tmp2408 	%argrw{"wr"} %argderivs{1}
	Dx		___656_coords.dtdx ___656__tt 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dsdy $tmp2408 	%argrw{"wr"} %argderivs{1}
	Dy		___656_coords.dtdy ___656__tt 	%argrw{"wr"} %argderivs{1}
	assign		___656_coords.blur ___656_blur0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:203
#     return coords;
	assign		___848_txcoords.s ___656_coords.s 	%line{203} %argrw{"wr"}
	assign		___848_txcoords.t ___656_coords.t 	%argrw{"wr"}
	assign		___848_txcoords.dsdx ___656_coords.dsdx 	%argrw{"wr"}
	assign		___848_txcoords.dtdx ___656_coords.dtdx 	%argrw{"wr"}
	assign		___848_txcoords.dsdy ___656_coords.dsdy 	%argrw{"wr"}
	assign		___848_txcoords.dtdy ___656_coords.dtdy 	%argrw{"wr"}
	assign		___848_txcoords.blur ___656_coords.blur 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:827
#                 if (mipBias != 0 || maxResolution != 0)
	neq		$tmp2455 mipBias $const2 	%filename{"PxrMultiTexture.osl"} %line{827} %argrw{"wrr"}
	neq		$tmp2456 $tmp2455 $const2 	%argrw{"wrr"}
	if		$tmp2456 6261 6264 	%argrw{"r"}
	neq		$tmp2457 maxResolution $const2 	%argrw{"wrr"}
	neq		$tmp2458 $tmp2457 $const2 	%argrw{"wrr"}
	assign		$tmp2456 $tmp2458 	%argrw{"wr"}
	if		$tmp2456 6332 6332 	%argrw{"r"}
# PxrMultiTexture.osl:828
#                     PxrTxMipControls(mipBias, maxResolution, txcoords, txparams);
	functioncall	$const83 6332 	%line{828} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:283
#     float bias = (mipBias != 0) ? pow(2.0, mipBias) : 1.0;
	neq		$tmp2459 mipBias $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{283} %argrw{"wrr"}
	if		$tmp2459 6270 6271 	%argrw{"r"}
	assign		$tmp2460 mipBias 	%argrw{"wr"}
	pow		___676_bias $const68 $tmp2460 	%argrw{"wrr"}
	assign		___676_bias $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:284
#     params.width *= bias;
	mul		txparams.width txparams.width ___676_bias 	%line{284} %argrw{"wrr"}
	assign		txparams.width txparams.width 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:286
#     if (maxResolution > 0)
	gt		$tmp2461 maxResolution $const2 	%line{286} %argrw{"wrr"}
	if		$tmp2461 6332 6332 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:290
#         float minwidth = 1.0 / maxResolution;
	div		___677_minwidth $const9 maxResolution 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:293
#         adjust_width(params.width, coords);
	functioncall	$const84 6317 	%line{293} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:250
#     coords.dsdx *= width;
	mul		___848_txcoords.dsdx ___848_txcoords.dsdx txparams.width 	%line{250} %argrw{"wrr"}
	assign		___848_txcoords.dsdx ___848_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:251
#     coords.dtdx *= width;
	mul		___848_txcoords.dtdx ___848_txcoords.dtdx txparams.width 	%line{251} %argrw{"wrr"}
	assign		___848_txcoords.dtdx ___848_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:252
#     coords.dsdy *= width;
	mul		___848_txcoords.dsdy ___848_txcoords.dsdy txparams.width 	%line{252} %argrw{"wrr"}
	assign		___848_txcoords.dsdy ___848_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:253
#     coords.dtdy *= width;
	mul		___848_txcoords.dtdy ___848_txcoords.dtdy txparams.width 	%line{253} %argrw{"wrr"}
	assign		___848_txcoords.dtdy ___848_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:256
#     float eps = 1.0e-8, eps2 = eps*eps;
	assign		___671_eps $const85 	%line{256} %argrw{"wr"}
	mul		___671_eps2 ___671_eps ___671_eps 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:257
#     float dxlen2 = coords.dsdx * coords.dsdx + coords.dtdx * coords.dtdx;
	mul		$tmp2462 ___848_txcoords.dsdx ___848_txcoords.dsdx 	%line{257} %argrw{"wrr"}
	mul		$tmp2463 ___848_txcoords.dtdx ___848_txcoords.dtdx 	%argrw{"wrr"}
	add		___671_dxlen2 $tmp2462 $tmp2463 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:258
#     float dylen2 = coords.dsdy * coords.dsdy + coords.dtdy * coords.dtdy;
	mul		$tmp2464 ___848_txcoords.dsdy ___848_txcoords.dsdy 	%line{258} %argrw{"wrr"}
	mul		$tmp2465 ___848_txcoords.dtdy ___848_txcoords.dtdy 	%argrw{"wrr"}
	add		___671_dylen2 $tmp2464 $tmp2465 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:259
#     if (dxlen2 < eps2) {   // Tiny dx
	lt		$tmp2466 ___671_dxlen2 ___671_eps2 	%line{259} %argrw{"wrr"}
	if		$tmp2466 6308 6317 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:260
#         if (dylen2 < eps2) {
	lt		$tmp2467 ___671_dylen2 ___671_eps2 	%line{260} %argrw{"wrr"}
	if		$tmp2467 6301 6308 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:262
#             coords.dsdx = eps; coords.dsdy = 0;
	assign		___848_txcoords.dsdx ___671_eps 	%line{262} %argrw{"wr"}
	assign		___848_txcoords.dsdy $const18 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:263
#             coords.dtdx = 0; coords.dtdy = eps;
	assign		___848_txcoords.dtdx $const18 	%line{263} %argrw{"wr"}
	assign		___848_txcoords.dtdy ___671_eps 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:266
#             float scale = eps / sqrt(dylen2);
	sqrt		$tmp2468 ___671_dylen2 	%line{266} %argrw{"wr"}
	div		___674_scale ___671_eps $tmp2468 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:267
#             coords.dsdx = coords.dtdy * scale;
	mul		___848_txcoords.dsdx ___848_txcoords.dtdy ___674_scale 	%line{267} %argrw{"wrr"}
	assign		___848_txcoords.dsdx ___848_txcoords.dsdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:268
#             coords.dtdx = -coords.dsdy * scale;
	neg		$tmp2469 ___848_txcoords.dsdy 	%line{268} %argrw{"wr"}
	mul		___848_txcoords.dtdx $tmp2469 ___674_scale 	%argrw{"wrr"}
	assign		___848_txcoords.dtdx ___848_txcoords.dtdx 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:270
#     } else if (dylen2 < eps2) {
	lt		$tmp2470 ___671_dylen2 ___671_eps2 	%line{270} %argrw{"wrr"}
	if		$tmp2470 6317 6317 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:272
#         float scale = eps / sqrt(dxlen2);
	sqrt		$tmp2471 ___671_dxlen2 	%line{272} %argrw{"wr"}
	div		___675_scale ___671_eps $tmp2471 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:273
#         coords.dsdy = -coords.dtdx * scale;
	neg		$tmp2472 ___848_txcoords.dtdx 	%line{273} %argrw{"wr"}
	mul		___848_txcoords.dsdy $tmp2472 ___675_scale 	%argrw{"wrr"}
	assign		___848_txcoords.dsdy ___848_txcoords.dsdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:274
#         coords.dtdy = coords.dsdx * scale;
	mul		___848_txcoords.dtdy ___848_txcoords.dsdx ___675_scale 	%line{274} %argrw{"wrr"}
	assign		___848_txcoords.dtdy ___848_txcoords.dtdy 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:297
#         float swidth = max(abs(coords.dsdx), abs(coords.dsdy));
	abs		$tmp2473 ___848_txcoords.dsdx 	%line{297} %argrw{"wr"}
	abs		$tmp2474 ___848_txcoords.dsdy 	%argrw{"wr"}
	max		___677_swidth $tmp2473 $tmp2474 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:298
#         float twidth = max(abs(coords.dtdx), abs(coords.dtdy));
	abs		$tmp2475 ___848_txcoords.dtdx 	%line{298} %argrw{"wr"}
	abs		$tmp2476 ___848_txcoords.dtdy 	%argrw{"wr"}
	max		___677_twidth $tmp2475 $tmp2476 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:299
#         int conservative_filter = 0;
	assign		___677_conservative_filter $const2 	%line{299} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:300
#         getattribute("context", "reyesGrid", conservative_filter);  // 1 if displ. shading, 0 if ray hit
	getattribute	$tmp2477 $const86 $const87 ___677_conservative_filter 	%line{300} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:301
#         float filterwidth = conservative_filter ? max(swidth, twidth)
	if		___677_conservative_filter 6327 6328 	%line{301} %argrw{"r"}
	max		___677_filterwidth ___677_swidth ___677_twidth 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:302
#                                                 : min(swidth, twidth);
	min		___677_filterwidth ___677_swidth ___677_twidth 	%line{302} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:305
#         filterwidth += params.blur;
	add		___677_filterwidth ___677_filterwidth txparams.blur 	%line{305} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:308
#         filterwidth = max(filterwidth, minwidth);
	max		___677_filterwidth ___677_filterwidth ___677_minwidth 	%line{308} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:310
#         coords.blur = filterwidth;  // coords.blur now specifies the texture lookup filter width
	assign		___848_txcoords.blur ___677_filterwidth 	%line{310} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:311
#         params.width = 0.0;  // set multiplier on derivatives to 0 so that only blur determines filter width
	assign		txparams.width $const18 	%line{311} %argrw{"wr"}
# PxrMultiTexture.osl:830
#                 if (texId == 0) // This if-else awkwardness is to work-around XPU's texturing limitations
	eq		$tmp2478 ___820_texId $const2 	%filename{"PxrMultiTexture.osl"} %line{830} %argrw{"wrr"}
	if		$tmp2478 6366 6670 	%argrw{"r"}
# PxrMultiTexture.osl:832
#                     colors[g] = PxrTextureLookup(filename0, txcoords, txparams);
	functioncall	$const19 6365 	%line{832} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2480 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename0 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2480 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2481 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2481 6344 6344 	%argrw{"r"}
	assign		$tmp2479 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename0 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2482 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2482 6350 6350 	%argrw{"r"}
	neq		$tmp2483 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2482 $tmp2483 	%argrw{"wr"}
	if		$tmp2482 6364 6364 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2484 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2485 $tmp2484 $const2 	%argrw{"wrr"}
	if		$tmp2485 6354 6357 	%argrw{"r"}
	eq		$tmp2486 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2487 $tmp2486 $const2 	%argrw{"wrr"}
	assign		$tmp2485 $tmp2487 	%argrw{"wr"}
	if		$tmp2485 6364 6364 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2488 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2488 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2489 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2489 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2490 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2490 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2479 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:832
#                     colors[g] = PxrTextureLookup(filename0, txcoords, txparams);
	aassign		colors ___818_g $tmp2479 	%filename{"PxrMultiTexture.osl"} %line{832} %argrw{"wrr"}
# PxrMultiTexture.osl:834
#                 else if (texId == 1)
	eq		$tmp2491 ___820_texId $const3 	%line{834} %argrw{"wrr"}
	if		$tmp2491 6400 6670 	%argrw{"r"}
# PxrMultiTexture.osl:836
#                     colors[g] = PxrTextureLookup(filename1, txcoords, txparams);
	functioncall	$const19 6399 	%line{836} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2493 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename1 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2493 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2494 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2494 6378 6378 	%argrw{"r"}
	assign		$tmp2492 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename1 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2495 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2495 6384 6384 	%argrw{"r"}
	neq		$tmp2496 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2495 $tmp2496 	%argrw{"wr"}
	if		$tmp2495 6398 6398 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2497 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2498 $tmp2497 $const2 	%argrw{"wrr"}
	if		$tmp2498 6388 6391 	%argrw{"r"}
	eq		$tmp2499 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2500 $tmp2499 $const2 	%argrw{"wrr"}
	assign		$tmp2498 $tmp2500 	%argrw{"wr"}
	if		$tmp2498 6398 6398 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2501 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2501 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2502 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2502 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2503 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2503 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2492 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:836
#                     colors[g] = PxrTextureLookup(filename1, txcoords, txparams);
	aassign		colors ___818_g $tmp2492 	%filename{"PxrMultiTexture.osl"} %line{836} %argrw{"wrr"}
# PxrMultiTexture.osl:838
#                 else if (texId == 2)
	eq		$tmp2504 ___820_texId $const4 	%line{838} %argrw{"wrr"}
	if		$tmp2504 6434 6670 	%argrw{"r"}
# PxrMultiTexture.osl:840
#                     colors[g] = PxrTextureLookup(filename2, txcoords, txparams);
	functioncall	$const19 6433 	%line{840} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2506 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename2 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2506 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2507 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2507 6412 6412 	%argrw{"r"}
	assign		$tmp2505 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename2 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2508 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2508 6418 6418 	%argrw{"r"}
	neq		$tmp2509 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2508 $tmp2509 	%argrw{"wr"}
	if		$tmp2508 6432 6432 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2510 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2511 $tmp2510 $const2 	%argrw{"wrr"}
	if		$tmp2511 6422 6425 	%argrw{"r"}
	eq		$tmp2512 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2513 $tmp2512 $const2 	%argrw{"wrr"}
	assign		$tmp2511 $tmp2513 	%argrw{"wr"}
	if		$tmp2511 6432 6432 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2514 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2514 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2515 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2515 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2516 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2516 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2505 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:840
#                     colors[g] = PxrTextureLookup(filename2, txcoords, txparams);
	aassign		colors ___818_g $tmp2505 	%filename{"PxrMultiTexture.osl"} %line{840} %argrw{"wrr"}
# PxrMultiTexture.osl:842
#                 else if (texId == 3)
	eq		$tmp2517 ___820_texId $const5 	%line{842} %argrw{"wrr"}
	if		$tmp2517 6468 6670 	%argrw{"r"}
# PxrMultiTexture.osl:844
#                    colors[g] = PxrTextureLookup(filename3, txcoords, txparams);
	functioncall	$const19 6467 	%line{844} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2519 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename3 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2519 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2520 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2520 6446 6446 	%argrw{"r"}
	assign		$tmp2518 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename3 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2521 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2521 6452 6452 	%argrw{"r"}
	neq		$tmp2522 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2521 $tmp2522 	%argrw{"wr"}
	if		$tmp2521 6466 6466 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2523 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2524 $tmp2523 $const2 	%argrw{"wrr"}
	if		$tmp2524 6456 6459 	%argrw{"r"}
	eq		$tmp2525 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2526 $tmp2525 $const2 	%argrw{"wrr"}
	assign		$tmp2524 $tmp2526 	%argrw{"wr"}
	if		$tmp2524 6466 6466 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2527 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2527 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2528 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2528 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2529 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2529 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2518 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:844
#                    colors[g] = PxrTextureLookup(filename3, txcoords, txparams);
	aassign		colors ___818_g $tmp2518 	%filename{"PxrMultiTexture.osl"} %line{844} %argrw{"wrr"}
# PxrMultiTexture.osl:846
#                 else if (texId == 4)
	eq		$tmp2530 ___820_texId $const34 	%line{846} %argrw{"wrr"}
	if		$tmp2530 6502 6670 	%argrw{"r"}
# PxrMultiTexture.osl:848
#                     colors[g] = PxrTextureLookup(filename4, txcoords, txparams);
	functioncall	$const19 6501 	%line{848} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2532 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename4 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2532 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2533 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2533 6480 6480 	%argrw{"r"}
	assign		$tmp2531 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename4 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2534 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2534 6486 6486 	%argrw{"r"}
	neq		$tmp2535 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2534 $tmp2535 	%argrw{"wr"}
	if		$tmp2534 6500 6500 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2536 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2537 $tmp2536 $const2 	%argrw{"wrr"}
	if		$tmp2537 6490 6493 	%argrw{"r"}
	eq		$tmp2538 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2539 $tmp2538 $const2 	%argrw{"wrr"}
	assign		$tmp2537 $tmp2539 	%argrw{"wr"}
	if		$tmp2537 6500 6500 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2540 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2540 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2541 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2541 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2542 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2542 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2531 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:848
#                     colors[g] = PxrTextureLookup(filename4, txcoords, txparams);
	aassign		colors ___818_g $tmp2531 	%filename{"PxrMultiTexture.osl"} %line{848} %argrw{"wrr"}
# PxrMultiTexture.osl:850
#                 else if (texId == 5)
	eq		$tmp2543 ___820_texId $const35 	%line{850} %argrw{"wrr"}
	if		$tmp2543 6536 6670 	%argrw{"r"}
# PxrMultiTexture.osl:852
#                     colors[g] = PxrTextureLookup(filename5, txcoords, txparams);
	functioncall	$const19 6535 	%line{852} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2545 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename5 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2545 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2546 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2546 6514 6514 	%argrw{"r"}
	assign		$tmp2544 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename5 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2547 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2547 6520 6520 	%argrw{"r"}
	neq		$tmp2548 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2547 $tmp2548 	%argrw{"wr"}
	if		$tmp2547 6534 6534 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2549 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2550 $tmp2549 $const2 	%argrw{"wrr"}
	if		$tmp2550 6524 6527 	%argrw{"r"}
	eq		$tmp2551 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2552 $tmp2551 $const2 	%argrw{"wrr"}
	assign		$tmp2550 $tmp2552 	%argrw{"wr"}
	if		$tmp2550 6534 6534 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2553 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2553 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2554 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2554 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2555 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2555 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2544 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:852
#                     colors[g] = PxrTextureLookup(filename5, txcoords, txparams);
	aassign		colors ___818_g $tmp2544 	%filename{"PxrMultiTexture.osl"} %line{852} %argrw{"wrr"}
# PxrMultiTexture.osl:854
#                 else if (texId == 6)
	eq		$tmp2556 ___820_texId $const36 	%line{854} %argrw{"wrr"}
	if		$tmp2556 6570 6670 	%argrw{"r"}
# PxrMultiTexture.osl:856
#                     colors[g] = PxrTextureLookup(filename6, txcoords, txparams);
	functioncall	$const19 6569 	%line{856} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2558 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename6 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2558 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2559 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2559 6548 6548 	%argrw{"r"}
	assign		$tmp2557 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename6 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2560 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2560 6554 6554 	%argrw{"r"}
	neq		$tmp2561 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2560 $tmp2561 	%argrw{"wr"}
	if		$tmp2560 6568 6568 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2562 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2563 $tmp2562 $const2 	%argrw{"wrr"}
	if		$tmp2563 6558 6561 	%argrw{"r"}
	eq		$tmp2564 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2565 $tmp2564 $const2 	%argrw{"wrr"}
	assign		$tmp2563 $tmp2565 	%argrw{"wr"}
	if		$tmp2563 6568 6568 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2566 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2566 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2567 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2567 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2568 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2568 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2557 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:856
#                     colors[g] = PxrTextureLookup(filename6, txcoords, txparams);
	aassign		colors ___818_g $tmp2557 	%filename{"PxrMultiTexture.osl"} %line{856} %argrw{"wrr"}
# PxrMultiTexture.osl:858
#                 else if (texId == 7)
	eq		$tmp2569 ___820_texId $const37 	%line{858} %argrw{"wrr"}
	if		$tmp2569 6604 6670 	%argrw{"r"}
# PxrMultiTexture.osl:860
#                     colors[g] = PxrTextureLookup(filename7, txcoords, txparams);
	functioncall	$const19 6603 	%line{860} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2571 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename7 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2571 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2572 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2572 6582 6582 	%argrw{"r"}
	assign		$tmp2570 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename7 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2573 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2573 6588 6588 	%argrw{"r"}
	neq		$tmp2574 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2573 $tmp2574 	%argrw{"wr"}
	if		$tmp2573 6602 6602 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2575 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2576 $tmp2575 $const2 	%argrw{"wrr"}
	if		$tmp2576 6592 6595 	%argrw{"r"}
	eq		$tmp2577 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2578 $tmp2577 $const2 	%argrw{"wrr"}
	assign		$tmp2576 $tmp2578 	%argrw{"wr"}
	if		$tmp2576 6602 6602 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2579 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2579 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2580 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2580 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2581 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2581 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2570 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:860
#                     colors[g] = PxrTextureLookup(filename7, txcoords, txparams);
	aassign		colors ___818_g $tmp2570 	%filename{"PxrMultiTexture.osl"} %line{860} %argrw{"wrr"}
# PxrMultiTexture.osl:862
#                 else if (texId == 8)
	eq		$tmp2582 ___820_texId $const38 	%line{862} %argrw{"wrr"}
	if		$tmp2582 6638 6670 	%argrw{"r"}
# PxrMultiTexture.osl:864
#                     colors[g] = PxrTextureLookup(filename8, txcoords, txparams);
	functioncall	$const19 6637 	%line{864} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2584 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename8 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2584 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2585 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2585 6616 6616 	%argrw{"r"}
	assign		$tmp2583 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename8 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2586 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2586 6622 6622 	%argrw{"r"}
	neq		$tmp2587 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2586 $tmp2587 	%argrw{"wr"}
	if		$tmp2586 6636 6636 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2588 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2589 $tmp2588 $const2 	%argrw{"wrr"}
	if		$tmp2589 6626 6629 	%argrw{"r"}
	eq		$tmp2590 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2591 $tmp2590 $const2 	%argrw{"wrr"}
	assign		$tmp2589 $tmp2591 	%argrw{"wr"}
	if		$tmp2589 6636 6636 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2592 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2592 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2593 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2593 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2594 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2594 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2583 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:864
#                     colors[g] = PxrTextureLookup(filename8, txcoords, txparams);
	aassign		colors ___818_g $tmp2583 	%filename{"PxrMultiTexture.osl"} %line{864} %argrw{"wrr"}
# PxrMultiTexture.osl:868
#                     colors[g] = PxrTextureLookup(filename9, txcoords, txparams);
	functioncall	$const19 6669 	%line{868} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:325
#     int success = 0;
	assign		___679_success $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{325} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:326
#     int nchannels = 0;
	assign		___679_nchannels $const2 	%line{326} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:327
#     color finalResult = 0;
	assign		___679_finalResult $const2 	%line{327} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:333
#                            "blur", max(coords.blur, params.blur),
	max		$tmp2596 ___848_txcoords.blur txparams.blur 	%line{333} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:329
#     color result = texture(filename,
	texture		___679_result filename9 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 $tmp2596 $const22 txparams.missingcolor $const23 txparams.interp $const24 txparams.width 	%line{329} %argrw{"wrrrrrrrrrrrrrrrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:339
#     if (result == params.missingcolor) return result;
	eq		$tmp2597 ___679_result txparams.missingcolor 	%line{339} %argrw{"wrr"}
	if		$tmp2597 6648 6648 	%argrw{"r"}
	assign		$tmp2595 ___679_result 	%argrw{"wr"}
	return
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:342
#     finalResult = result;
	assign		___679_finalResult ___679_result 	%line{342} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:345
#     success = gettextureinfo(filename, "channels", nchannels);
	gettextureinfo	___679_success filename9 $const25 ___679_nchannels 	%line{345} %argrw{"wrrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:346
#     if (success && nchannels)
	neq		$tmp2598 ___679_success $const2 	%line{346} %argrw{"wrr"}
	if		$tmp2598 6654 6654 	%argrw{"r"}
	neq		$tmp2599 ___679_nchannels $const2 	%argrw{"wrr"}
	assign		$tmp2598 $tmp2599 	%argrw{"wr"}
	if		$tmp2598 6668 6668 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:348
#         if (nchannels == 1 || nchannels == 2)
	eq		$tmp2600 ___679_nchannels $const3 	%line{348} %argrw{"wrr"}
	neq		$tmp2601 $tmp2600 $const2 	%argrw{"wrr"}
	if		$tmp2601 6658 6661 	%argrw{"r"}
	eq		$tmp2602 ___679_nchannels $const4 	%argrw{"wrr"}
	neq		$tmp2603 $tmp2602 $const2 	%argrw{"wrr"}
	assign		$tmp2601 $tmp2603 	%argrw{"wr"}
	if		$tmp2601 6668 6668 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:351
#             finalResult[0] = result[0];
	compref		$tmp2604 ___679_result $const2 	%line{351} %argrw{"wrr"}
	compassign	___679_finalResult $const2 $tmp2604 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:352
#             finalResult[1] = result[0];
	compref		$tmp2605 ___679_result $const2 	%line{352} %argrw{"wrr"}
	compassign	___679_finalResult $const3 $tmp2605 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:353
#             finalResult[2] = result[0];
	compref		$tmp2606 ___679_result $const2 	%line{353} %argrw{"wrr"}
	compassign	___679_finalResult $const4 $tmp2606 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:357
#     return finalResult;
	assign		$tmp2595 ___679_finalResult 	%line{357} %argrw{"wr"}
# PxrMultiTexture.osl:868
#                     colors[g] = PxrTextureLookup(filename9, txcoords, txparams);
	aassign		colors ___818_g $tmp2595 	%filename{"PxrMultiTexture.osl"} %line{868} %argrw{"wrr"}
# PxrMultiTexture.osl:870
#                 if (linearize) PxrLinearizeSRGB(colors[g]);
	if		linearize 6696 6696 	%line{870} %argrw{"r"}
	aref		$tmp2607 colors ___818_g 	%argrw{"wrr"}
	functioncall	$const26 6695 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	functioncall	$const27 6677 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{222} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:215
#     int foo = 0;
	assign		___664_foo $const2 	%line{215} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:216
#     getattribute("user:ocioenabled", foo);
	getattribute	$tmp2609 $const28 ___664_foo 	%line{216} %argrw{"wrw"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:217
#     return foo;
	assign		$tmp2608 ___664_foo 	%line{217} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:222
#     if (!ocioEnabled())
	eq		$tmp2610 $tmp2608 $const2 	%line{222} %argrw{"wrr"}
	if		$tmp2610 6695 6695 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	for		$tmp2612 6681 6683 6694 6695 	%line{224} %argrw{"r"}
	assign		___667_i $const2 	%argrw{"wr"}
	lt		$tmp2611 ___667_i $const5 	%argrw{"wrr"}
	neq		$tmp2612 $tmp2611 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:226
#             if (inout[i] < 0.04045)
	compref		$tmp2613 $tmp2607 ___667_i 	%line{226} %argrw{"wrr"}
	lt		$tmp2614 $tmp2613 $const29 	%argrw{"wrr"}
	if		$tmp2614 6689 6694 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:227
#                 inout[i] = inout[i] * 0.07739938;
	compref		$tmp2615 $tmp2607 ___667_i 	%line{227} %argrw{"wrr"}
	mul		$tmp2616 $tmp2615 $const30 	%argrw{"wrr"}
	compassign	$tmp2607 ___667_i $tmp2616 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:229
#                 inout[i] = pow((inout[i] + 0.055) * 0.947867299, 2.4);
	compref		$tmp2618 $tmp2607 ___667_i 	%line{229} %argrw{"wrr"}
	add		$tmp2619 $tmp2618 $const31 	%argrw{"wrr"}
	mul		$tmp2620 $tmp2619 $const32 	%argrw{"wrr"}
	pow		$tmp2617 $tmp2620 $const33 	%argrw{"wrr"}
	compassign	$tmp2607 ___667_i $tmp2617 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:224
#         for (int i = 0; i < 3; ++i)
	add		___667_i ___667_i $const3 	%line{224} %argrw{"wrr"}
# PxrMultiTexture.osl:870
#                 if (linearize) PxrLinearizeSRGB(colors[g]);
	aassign		colors ___818_g $tmp2607 	%filename{"PxrMultiTexture.osl"} %line{870} %argrw{"wrr"}
# PxrMultiTexture.osl:873
#                 if (isconnected(resultNG) && texturesAreNormalMaps)
	isconnected	$tmp2621 resultNG 	%line{873} %argrw{"wr"}
	neq		$tmp2622 $tmp2621 $const2 	%argrw{"wrr"}
	if		$tmp2622 6701 6701 	%argrw{"r"}
	neq		$tmp2623 texturesAreNormalMaps $const2 	%argrw{"wrr"}
	assign		$tmp2622 $tmp2623 	%argrw{"wr"}
	if		$tmp2622 6768 6768 	%argrw{"r"}
# PxrMultiTexture.osl:875
#                     vector tbn = colors[g];
	aref		___859_tbn colors ___818_g 	%line{875} %argrw{"wrr"}
# PxrMultiTexture.osl:876
#                     setupNormalMap(nMap, tbn);
	functioncall	$const102 6734 	%line{876} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:144
#     color tsNormal = nmap * 2.0 - 1.0;
	mul		$tmp2624 ___859_tbn $const68 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{144} %argrw{"wrr"}
	sub		___720_tsNormal $tmp2624 $const9 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:146
#     tsNormal[0] = - tsNormal[0];
	compref		$tmp2625 ___720_tsNormal $const2 	%line{146} %argrw{"wrr"}
	neg		$tmp2626 $tmp2625 	%argrw{"wr"}
	compassign	___720_tsNormal $const2 $tmp2626 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:147
#     tsNormal[1] = - tsNormal[1];
	compref		$tmp2627 ___720_tsNormal $const3 	%line{147} %argrw{"wrr"}
	neg		$tmp2628 $tmp2627 	%argrw{"wr"}
	compassign	___720_tsNormal $const3 $tmp2628 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:150
#     if (nmp.orientation == k_opengl)
	eq		$tmp2629 nMap.orientation $const2 	%line{150} %argrw{"wrr"}
	if		$tmp2629 6717 6733 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:152
#         tsNormal[0] = -tsNormal[0];
	compref		$tmp2630 ___720_tsNormal $const2 	%line{152} %argrw{"wrr"}
	neg		$tmp2631 $tmp2630 	%argrw{"wr"}
	compassign	___720_tsNormal $const2 $tmp2631 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:154
#     else if (nmp.orientation == k_directx)
	eq		$tmp2632 nMap.orientation $const3 	%line{154} %argrw{"wrr"}
	if		$tmp2632 6725 6733 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:156
#         tsNormal[0] = -tsNormal[0];
	compref		$tmp2633 ___720_tsNormal $const2 	%line{156} %argrw{"wrr"}
	neg		$tmp2634 $tmp2633 	%argrw{"wr"}
	compassign	___720_tsNormal $const2 $tmp2634 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:157
#         tsNormal[1] = -tsNormal[1];
	compref		$tmp2635 ___720_tsNormal $const3 	%line{157} %argrw{"wrr"}
	neg		$tmp2636 $tmp2635 	%argrw{"wr"}
	compassign	___720_tsNormal $const3 $tmp2636 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:161
#         if (nmp.flipX)
	if		nMap.flipX 6729 6729 	%line{161} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:162
#             tsNormal[0] = -tsNormal[0];
	compref		$tmp2637 ___720_tsNormal $const2 	%line{162} %argrw{"wrr"}
	neg		$tmp2638 $tmp2637 	%argrw{"wr"}
	compassign	___720_tsNormal $const2 $tmp2638 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:163
#         if (nmp.flipY)
	if		nMap.flipY 6733 6733 	%line{163} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:164
#             tsNormal[1] = -tsNormal[1];
	compref		$tmp2639 ___720_tsNormal $const3 	%line{164} %argrw{"wrr"}
	neg		$tmp2640 $tmp2639 	%argrw{"wr"}
	compassign	___720_tsNormal $const3 $tmp2640 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:166
#     nmap = tsNormal;
	assign		___859_tbn ___720_tsNormal 	%line{166} %argrw{"wr"}
# PxrMultiTexture.osl:877
#                     grads[g] = SurfgradFromTBN(TspaceNormalToDerivative(tbn),
	functioncall	$const95 6761 	%filename{"PxrMultiTexture.osl"} %line{877} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:76
# 	float scale = 1.0 / 128.0;
	assign		___715_scale $const96 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:80
# 	color vMa = abs(vM);
	abs		___715_vMa ___859_tbn 	%line{80} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:81
# 	float z_ma = max(vMa[2], scale * max(vMa[0], vMa[1]));
	compref		$tmp2643 ___715_vMa $const4 	%line{81} %argrw{"wrr"}
	compref		$tmp2645 ___715_vMa $const2 	%argrw{"wrr"}
	compref		$tmp2646 ___715_vMa $const3 	%argrw{"wrr"}
	max		$tmp2644 $tmp2645 $tmp2646 	%argrw{"wrr"}
	mul		$tmp2647 ___715_scale $tmp2644 	%argrw{"wrr"}
	max		___715_z_ma $tmp2643 $tmp2647 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:84
# 	int gFlipVertDeriv = 1;
	assign		___715_gFlipVertDeriv $const3 	%line{84} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:85
# 	float s = gFlipVertDeriv ? -1.0 : 1.0;
	if		___715_gFlipVertDeriv 6746 6747 	%line{85} %argrw{"r"}
	assign		___715_s $const89 	%argrw{"wr"}
	assign		___715_s $const9 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	compref		$tmp2649.x ___859_tbn $const2 	%line{86} %argrw{"wrr"}
	compref		$tmp2650 ___859_tbn $const3 	%argrw{"wrr"}
	mul		$tmp2649.y ___715_s $tmp2650 	%argrw{"wrr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const97 6753 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:55
#     return float2(-a.x, -a.y);
	neg		$tmp2648.x $tmp2649.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{55} %argrw{"wr"}
	neg		$tmp2648.y $tmp2649.y 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const98 6760 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:146
#     float b_inv = 1.0/b;
	div		___708_b_inv $const9 ___715_z_ma 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{146} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:147
#     return a * float2(b_inv, b_inv);
	assign		$tmp2651.x ___708_b_inv 	%line{147} %argrw{"wr"}
	assign		$tmp2651.y ___708_b_inv 	%argrw{"wr"}
# PxrMultiTexture.osl:1037
# 
	functioncall	$const93 6760 	%filename{"PxrMultiTexture.osl"} %line{1037} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h:110
#     return float2(a.x * b.x, a.y * b.y);
	mul		$tmp2642.x $tmp2648.x $tmp2651.x 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/float2.h"} %line{110} %argrw{"wrr"}
	mul		$tmp2642.y $tmp2648.y $tmp2651.y 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:86
# 	return -float2(vM[0], s * vM[1]) / z_ma;
	return	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{86}
# PxrMultiTexture.osl:878
#                                                manifoldMulti.Tn[g], manifoldMulti.Bn[g]);
	aref		$tmp2652 manifoldMulti.Tn ___818_g 	%filename{"PxrMultiTexture.osl"} %line{878} %argrw{"wrr"}
	aref		$tmp2653 manifoldMulti.Bn ___818_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:877
#                     grads[g] = SurfgradFromTBN(TspaceNormalToDerivative(tbn),
	functioncall	$const99 6767 	%line{877} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:92
#     return deriv.x * vT + deriv.y * vB;
	mul		$tmp2654 $tmp2642.x $tmp2652 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{92} %argrw{"wrr"}
	mul		$tmp2655 $tmp2642.y $tmp2653 	%argrw{"wrr"}
	add		$tmp2641 $tmp2654 $tmp2655 	%argrw{"wrr"}
# PxrMultiTexture.osl:877
#                     grads[g] = SurfgradFromTBN(TspaceNormalToDerivative(tbn),
	aassign		grads ___818_g $tmp2641 	%filename{"PxrMultiTexture.osl"} %line{877} %argrw{"wrr"}
# PxrMultiTexture.osl:881
#                 if (needAlpha)
	if		needAlpha 6831 6831 	%line{881} %argrw{"r"}
# PxrMultiTexture.osl:883
#                     txparams.firstchannel += 3;
	add		txparams.firstchannel txparams.firstchannel $const5 	%line{883} %argrw{"wrr"}
	assign		txparams.firstchannel txparams.firstchannel 	%argrw{"wr"}
# PxrMultiTexture.osl:884
#                     if (texId == 0) // This if-else awkwardness is to work-around XPU's texturing limitations
	eq		$tmp2656 ___820_texId $const2 	%line{884} %argrw{"wrr"}
	if		$tmp2656 6777 6831 	%argrw{"r"}
# PxrMultiTexture.osl:886
#                         alphas[g] = PxrTextureLookup(filename0, txcoords, txparams);
	functioncall	$const19 6776 	%line{886} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2657 filename0 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:886
#                         alphas[g] = PxrTextureLookup(filename0, txcoords, txparams);
	aassign		alphas ___818_g $tmp2657 	%filename{"PxrMultiTexture.osl"} %line{886} %argrw{"wrr"}
# PxrMultiTexture.osl:888
#                     else if (texId == 1)
	eq		$tmp2658 ___820_texId $const3 	%line{888} %argrw{"wrr"}
	if		$tmp2658 6783 6831 	%argrw{"r"}
# PxrMultiTexture.osl:890
#                         alphas[g] = PxrTextureLookup(filename1, txcoords, txparams);
	functioncall	$const19 6782 	%line{890} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2659 filename1 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:890
#                         alphas[g] = PxrTextureLookup(filename1, txcoords, txparams);
	aassign		alphas ___818_g $tmp2659 	%filename{"PxrMultiTexture.osl"} %line{890} %argrw{"wrr"}
# PxrMultiTexture.osl:892
#                     else if (texId == 2)
	eq		$tmp2660 ___820_texId $const4 	%line{892} %argrw{"wrr"}
	if		$tmp2660 6789 6831 	%argrw{"r"}
# PxrMultiTexture.osl:894
#                         alphas[g] = PxrTextureLookup(filename2, txcoords, txparams);
	functioncall	$const19 6788 	%line{894} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2661 filename2 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:894
#                         alphas[g] = PxrTextureLookup(filename2, txcoords, txparams);
	aassign		alphas ___818_g $tmp2661 	%filename{"PxrMultiTexture.osl"} %line{894} %argrw{"wrr"}
# PxrMultiTexture.osl:896
#                     else if (texId == 3)
	eq		$tmp2662 ___820_texId $const5 	%line{896} %argrw{"wrr"}
	if		$tmp2662 6795 6831 	%argrw{"r"}
# PxrMultiTexture.osl:898
#                         alphas[g] = PxrTextureLookup(filename3, txcoords, txparams);
	functioncall	$const19 6794 	%line{898} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2663 filename3 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:898
#                         alphas[g] = PxrTextureLookup(filename3, txcoords, txparams);
	aassign		alphas ___818_g $tmp2663 	%filename{"PxrMultiTexture.osl"} %line{898} %argrw{"wrr"}
# PxrMultiTexture.osl:900
#                     else if (texId == 4)
	eq		$tmp2664 ___820_texId $const34 	%line{900} %argrw{"wrr"}
	if		$tmp2664 6801 6831 	%argrw{"r"}
# PxrMultiTexture.osl:902
#                         alphas[g] = PxrTextureLookup(filename4, txcoords, txparams);
	functioncall	$const19 6800 	%line{902} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2665 filename4 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:902
#                         alphas[g] = PxrTextureLookup(filename4, txcoords, txparams);
	aassign		alphas ___818_g $tmp2665 	%filename{"PxrMultiTexture.osl"} %line{902} %argrw{"wrr"}
# PxrMultiTexture.osl:904
#                     else if (texId == 5)
	eq		$tmp2666 ___820_texId $const35 	%line{904} %argrw{"wrr"}
	if		$tmp2666 6807 6831 	%argrw{"r"}
# PxrMultiTexture.osl:906
#                         alphas[g] = PxrTextureLookup(filename5, txcoords, txparams);
	functioncall	$const19 6806 	%line{906} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2667 filename5 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:906
#                         alphas[g] = PxrTextureLookup(filename5, txcoords, txparams);
	aassign		alphas ___818_g $tmp2667 	%filename{"PxrMultiTexture.osl"} %line{906} %argrw{"wrr"}
# PxrMultiTexture.osl:908
#                     else if (texId == 6)
	eq		$tmp2668 ___820_texId $const36 	%line{908} %argrw{"wrr"}
	if		$tmp2668 6813 6831 	%argrw{"r"}
# PxrMultiTexture.osl:910
#                         alphas[g] = PxrTextureLookup(filename6, txcoords, txparams);
	functioncall	$const19 6812 	%line{910} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2669 filename6 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:910
#                         alphas[g] = PxrTextureLookup(filename6, txcoords, txparams);
	aassign		alphas ___818_g $tmp2669 	%filename{"PxrMultiTexture.osl"} %line{910} %argrw{"wrr"}
# PxrMultiTexture.osl:912
#                     else if (texId == 7)
	eq		$tmp2670 ___820_texId $const37 	%line{912} %argrw{"wrr"}
	if		$tmp2670 6819 6831 	%argrw{"r"}
# PxrMultiTexture.osl:914
#                         alphas[g] = PxrTextureLookup(filename7, txcoords, txparams);
	functioncall	$const19 6818 	%line{914} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2671 filename7 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:914
#                         alphas[g] = PxrTextureLookup(filename7, txcoords, txparams);
	aassign		alphas ___818_g $tmp2671 	%filename{"PxrMultiTexture.osl"} %line{914} %argrw{"wrr"}
# PxrMultiTexture.osl:916
#                     else if (texId == 8)
	eq		$tmp2672 ___820_texId $const38 	%line{916} %argrw{"wrr"}
	if		$tmp2672 6825 6831 	%argrw{"r"}
# PxrMultiTexture.osl:918
#                         alphas[g] = PxrTextureLookup(filename8, txcoords, txparams);
	functioncall	$const19 6824 	%line{918} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2673 filename8 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:918
#                         alphas[g] = PxrTextureLookup(filename8, txcoords, txparams);
	aassign		alphas ___818_g $tmp2673 	%filename{"PxrMultiTexture.osl"} %line{918} %argrw{"wrr"}
# PxrMultiTexture.osl:920
#                     else if (texId == 9)
	eq		$tmp2674 ___820_texId $const39 	%line{920} %argrw{"wrr"}
	if		$tmp2674 6831 6831 	%argrw{"r"}
# PxrMultiTexture.osl:922
#                         alphas[g] = PxrTextureLookup(filename9, txcoords, txparams);
	functioncall	$const19 6830 	%line{922} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:363
#     color missingalpha = params.missingalpha;
	assign		___682_missingalpha txparams.missingalpha 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h"} %line{363} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLTexture.h:364
#     return texture(filename,
	texture		$tmp2675 filename9 ___848_txcoords.s ___848_txcoords.t ___848_txcoords.dsdx ___848_txcoords.dtdx ___848_txcoords.dsdy ___848_txcoords.dtdy $const20 txparams.firstchannel $const21 txparams.blur $const22 ___682_missingalpha $const23 txparams.interp $const24 txparams.width 	%line{364} %argrw{"wrrrrrrrrrrrrrrrrr"}
# PxrMultiTexture.osl:922
#                         alphas[g] = PxrTextureLookup(filename9, txcoords, txparams);
	aassign		alphas ___818_g $tmp2675 	%filename{"PxrMultiTexture.osl"} %line{922} %argrw{"wrr"}
# PxrMultiTexture.osl:929
#             if (randomize)
	if		randomize 7169 7169 	%line{929} %argrw{"r"}
# PxrMultiTexture.osl:931
#                 point ps = point(idf[g][0] + objSeed,
	aref		$tmp2677 idf ___818_g 	%line{931} %argrw{"wrr"}
	compref		$tmp2676 $tmp2677 $const2 	%argrw{"wrr"}
	add		$tmp2678 $tmp2676 objSeed 	%argrw{"wrr"}
# PxrMultiTexture.osl:932
#                                  idf[g][1] + objSeed,
	aref		$tmp2680 idf ___818_g 	%line{932} %argrw{"wrr"}
	compref		$tmp2679 $tmp2680 $const3 	%argrw{"wrr"}
	add		$tmp2681 $tmp2679 objSeed 	%argrw{"wrr"}
# PxrMultiTexture.osl:933
#                                  idf[g][0] + idf[g][1] + objSeed);
	aref		$tmp2683 idf ___818_g 	%line{933} %argrw{"wrr"}
	compref		$tmp2682 $tmp2683 $const2 	%argrw{"wrr"}
	aref		$tmp2685 idf ___818_g 	%argrw{"wrr"}
	compref		$tmp2684 $tmp2685 $const3 	%argrw{"wrr"}
	add		$tmp2686 $tmp2682 $tmp2684 	%argrw{"wrr"}
	add		$tmp2687 $tmp2686 objSeed 	%argrw{"wrr"}
# PxrMultiTexture.osl:931
#                 point ps = point(idf[g][0] + objSeed,
	point		___871_ps $tmp2678 $tmp2681 $tmp2687 	%line{931} %argrw{"wrrr"}
# PxrMultiTexture.osl:934
#                 point r = matchCppPattern ? rxcellnoise(ps) : noise("cell", ps);
	if		matchCppPattern 7084 7085 	%line{934} %argrw{"r"}
	functioncall	$const56 7084 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:954
#     noise_parameters np = {3, 3, INPUT3W(seed), point(0), NONPERIODIC};
	assign		___621_np.domain $const5 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h"} %line{954} %argrw{"wr"}
	assign		___621_np.range $const5 	%argrw{"wr"}
	compref		$tmp2689 ___871_ps $const2 	%argrw{"wrr"}
	fmod		$tmp2688 $tmp2689 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const2 $tmp2688 	%argrw{"wrr"}
	compref		$tmp2691 ___871_ps $const3 	%argrw{"wrr"}
	fmod		$tmp2690 $tmp2691 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const3 $tmp2690 	%argrw{"wrr"}
	compref		$tmp2693 ___871_ps $const4 	%argrw{"wrr"}
	fmod		$tmp2692 $tmp2693 $const55 	%argrw{"wrr"}
	aassign		___621_np.input $const4 $tmp2692 	%argrw{"wrr"}
	aassign		___621_np.input $const5 $const2 	%argrw{"wrr"}
	assign		___621_np.result $const6 	%argrw{"wr"}
	assign		___621_np.periodic $const2 	%argrw{"wr"}
	assign		___621_np.period $const57 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:955
#     rx_cell_noise(np);
	functioncall	$const58 7080 	%line{955} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:68
#     float rxcellrandtable[4096] = {
	assign		___558_rxcellrandtable $const59 	%line{68} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:582
#     int rxcellpermute[4096] = {
	assign		___558_rxcellpermute $const60 	%line{582} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:904
#     int k = 0;
	assign		___558_k $const2 	%line{904} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:905
#     if (np.domain == 1)
	eq		$tmp2694 ___621_np.domain $const3 	%line{905} %argrw{"wrr"}
	if		$tmp2694 6894 7080 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:907
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp2695 ___621_np.input $const2 	%line{907} %argrw{"wrr"}
	add		___558_v0 $tmp2695 $const61 	%argrw{"wrr"}
	lt		$tmp2696 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2696 6877 6881 	%argrw{"r"}
	lt		$tmp2697 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2697 6875 6877 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp2698 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp2698 $const3 	%argrw{"wrr"}
	gt		$tmp2699 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2699 6880 6881 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	for		$tmp2701 6883 6885 6891 6894 	%line{908} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp2700 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp2701 $tmp2700 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:910
#             v0 = rxcellrandtable[CELLPERMUTE(int00)];
	bitand		$tmp2702 ___558_int00 $const64 	%line{910} %argrw{"wrr"}
	aref		$tmp2703 ___558_rxcellpermute $tmp2702 	%argrw{"wrr"}
	aref		___558_v0 ___558_rxcellrandtable $tmp2703 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:911
#             np.result[k++] = v0;
	assign		$tmp2704 ___558_k 	%line{911} %argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp2704 ___558_v0 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:908
#         for (i = np.range; i > 0; i--, int00 += 7)
	assign		$tmp2705 ___558_i 	%line{908} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:914
#     else if (np.domain == 2)
	eq		$tmp2706 ___621_np.domain $const4 	%line{914} %argrw{"wrr"}
	if		$tmp2706 6939 7080 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:916
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp2707 ___621_np.input $const2 	%line{916} %argrw{"wrr"}
	add		___558_v0 $tmp2707 $const61 	%argrw{"wrr"}
	lt		$tmp2708 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2708 6905 6909 	%argrw{"r"}
	lt		$tmp2709 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2709 6903 6905 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp2710 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp2710 $const3 	%argrw{"wrr"}
	gt		$tmp2711 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2711 6908 6909 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:917
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp2712 ___621_np.input $const3 	%line{917} %argrw{"wrr"}
	add		___558_v0 $tmp2712 $const61 	%argrw{"wrr"}
	lt		$tmp2713 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2713 6918 6922 	%argrw{"r"}
	lt		$tmp2714 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2714 6916 6918 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp2715 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp2715 $const3 	%argrw{"wrr"}
	gt		$tmp2716 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2716 6921 6922 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	for		$tmp2718 6924 6926 6935 6939 	%line{918} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp2717 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp2718 $tmp2717 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:920
#             iy = CELLPERMUTE(int01);
	bitand		$tmp2719 ___558_int01 $const64 	%line{920} %argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp2719 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:921
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(iy + int00)];
	add		$tmp2720 ___558_iy ___558_int00 	%line{921} %argrw{"wrr"}
	bitand		$tmp2721 $tmp2720 $const64 	%argrw{"wrr"}
	aref		$tmp2722 ___558_rxcellpermute $tmp2721 	%argrw{"wrr"}
	aref		$tmp2723 ___558_rxcellrandtable $tmp2722 	%argrw{"wrr"}
	assign		$tmp2724 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp2724 $tmp2723 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:918
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7)
	assign		$tmp2725 ___558_i 	%line{918} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:924
#     else if (np.domain == 3)
	eq		$tmp2726 ___621_np.domain $const5 	%line{924} %argrw{"wrr"}
	if		$tmp2726 7001 7080 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:926
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp2727 ___621_np.input $const2 	%line{926} %argrw{"wrr"}
	add		___558_v0 $tmp2727 $const61 	%argrw{"wrr"}
	lt		$tmp2728 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2728 6950 6954 	%argrw{"r"}
	lt		$tmp2729 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2729 6948 6950 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp2730 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp2730 $const3 	%argrw{"wrr"}
	gt		$tmp2731 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2731 6953 6954 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:927
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp2732 ___621_np.input $const3 	%line{927} %argrw{"wrr"}
	add		___558_v0 $tmp2732 $const61 	%argrw{"wrr"}
	lt		$tmp2733 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2733 6963 6967 	%argrw{"r"}
	lt		$tmp2734 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2734 6961 6963 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp2735 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp2735 $const3 	%argrw{"wrr"}
	gt		$tmp2736 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2736 6966 6967 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:928
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp2737 ___621_np.input $const4 	%line{928} %argrw{"wrr"}
	add		___558_v0 $tmp2737 $const61 	%argrw{"wrr"}
	lt		$tmp2738 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2738 6976 6980 	%argrw{"r"}
	lt		$tmp2739 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2739 6974 6976 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp2740 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp2740 $const3 	%argrw{"wrr"}
	gt		$tmp2741 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2741 6979 6980 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	for		$tmp2743 6982 6984 6996 7001 	%line{929} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp2742 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp2743 $tmp2742 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:931
#             iz = CELLPERMUTE(int02);
	bitand		$tmp2744 ___558_int02 $const64 	%line{931} %argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp2744 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:932
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp2745 ___558_int01 ___558_iz 	%line{932} %argrw{"wrr"}
	bitand		$tmp2746 $tmp2745 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp2746 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:933
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp2747 ___558_int00 ___558_iy 	%line{933} %argrw{"wrr"}
	bitand		$tmp2748 $tmp2747 $const64 	%argrw{"wrr"}
	aref		$tmp2749 ___558_rxcellpermute $tmp2748 	%argrw{"wrr"}
	aref		$tmp2750 ___558_rxcellrandtable $tmp2749 	%argrw{"wrr"}
	assign		$tmp2751 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp2751 $tmp2750 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:929
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3)
	assign		$tmp2752 ___558_i 	%line{929} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:936
#     else if (np.domain == 4)
	eq		$tmp2753 ___621_np.domain $const34 	%line{936} %argrw{"wrr"}
	if		$tmp2753 7080 7080 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:938
#         SETUP_CELL_DOMAIN(0, int00);
	aref		$tmp2754 ___621_np.input $const2 	%line{938} %argrw{"wrr"}
	add		___558_v0 $tmp2754 $const61 	%argrw{"wrr"}
	lt		$tmp2755 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2755 7012 7016 	%argrw{"r"}
	lt		$tmp2756 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2756 7010 7012 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		$tmp2757 ___558_v0 	%argrw{"wr"}
	sub		___558_int00 $tmp2757 $const3 	%argrw{"wrr"}
	gt		$tmp2758 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2758 7015 7016 	%argrw{"r"}
	assign		___558_int00 $const2 	%argrw{"wr"}
	assign		___558_int00 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:939
#         SETUP_CELL_DOMAIN(1, int01);
	aref		$tmp2759 ___621_np.input $const3 	%line{939} %argrw{"wrr"}
	add		___558_v0 $tmp2759 $const61 	%argrw{"wrr"}
	lt		$tmp2760 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2760 7025 7029 	%argrw{"r"}
	lt		$tmp2761 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2761 7023 7025 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		$tmp2762 ___558_v0 	%argrw{"wr"}
	sub		___558_int01 $tmp2762 $const3 	%argrw{"wrr"}
	gt		$tmp2763 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2763 7028 7029 	%argrw{"r"}
	assign		___558_int01 $const2 	%argrw{"wr"}
	assign		___558_int01 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:940
#         SETUP_CELL_DOMAIN(2, int02);
	aref		$tmp2764 ___621_np.input $const4 	%line{940} %argrw{"wrr"}
	add		___558_v0 $tmp2764 $const61 	%argrw{"wrr"}
	lt		$tmp2765 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2765 7038 7042 	%argrw{"r"}
	lt		$tmp2766 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2766 7036 7038 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		$tmp2767 ___558_v0 	%argrw{"wr"}
	sub		___558_int02 $tmp2767 $const3 	%argrw{"wrr"}
	gt		$tmp2768 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2768 7041 7042 	%argrw{"r"}
	assign		___558_int02 $const2 	%argrw{"wr"}
	assign		___558_int02 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:941
#         SETUP_CELL_DOMAIN(3, int03);
	aref		$tmp2769 ___621_np.input $const5 	%line{941} %argrw{"wrr"}
	add		___558_v0 $tmp2769 $const61 	%argrw{"wrr"}
	lt		$tmp2770 ___558_v0 $const18 	%argrw{"wrr"}
	if		$tmp2770 7051 7055 	%argrw{"r"}
	lt		$tmp2771 ___558_v0 $const62 	%argrw{"wrr"}
	if		$tmp2771 7049 7051 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		$tmp2772 ___558_v0 	%argrw{"wr"}
	sub		___558_int03 $tmp2772 $const3 	%argrw{"wrr"}
	gt		$tmp2773 ___558_v0 $const63 	%argrw{"wrr"}
	if		$tmp2773 7054 7055 	%argrw{"r"}
	assign		___558_int03 $const2 	%argrw{"wr"}
	assign		___558_int03 ___558_v0 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	for		$tmp2775 7057 7059 7074 7080 	%line{942} %argrw{"r"}
	assign		___558_i ___621_np.range 	%argrw{"wr"}
	gt		$tmp2774 ___558_i $const2 	%argrw{"wrr"}
	neq		$tmp2775 $tmp2774 $const2 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:944
#             iz = CELLPERMUTE(int02 + CELLPERMUTE(int03));
	bitand		$tmp2776 ___558_int03 $const64 	%line{944} %argrw{"wrr"}
	aref		$tmp2777 ___558_rxcellpermute $tmp2776 	%argrw{"wrr"}
	add		$tmp2778 ___558_int02 $tmp2777 	%argrw{"wrr"}
	bitand		$tmp2779 $tmp2778 $const64 	%argrw{"wrr"}
	aref		___558_iz ___558_rxcellpermute $tmp2779 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:945
#             iy = CELLPERMUTE(int01 + iz);
	add		$tmp2780 ___558_int01 ___558_iz 	%line{945} %argrw{"wrr"}
	bitand		$tmp2781 $tmp2780 $const64 	%argrw{"wrr"}
	aref		___558_iy ___558_rxcellpermute $tmp2781 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:946
#             np.result[k++] = rxcellrandtable[CELLPERMUTE(int00 + iy)];
	add		$tmp2782 ___558_int00 ___558_iy 	%line{946} %argrw{"wrr"}
	bitand		$tmp2783 $tmp2782 $const64 	%argrw{"wrr"}
	aref		$tmp2784 ___558_rxcellpermute $tmp2783 	%argrw{"wrr"}
	aref		$tmp2785 ___558_rxcellrandtable $tmp2784 	%argrw{"wrr"}
	assign		$tmp2786 ___558_k 	%argrw{"wr"}
	add		___558_k ___558_k $const3 	%argrw{"wrr"}
	compassign	___621_np.result $tmp2786 $tmp2785 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:942
#         for (i = np.range; i > 0; i--, int00 += 7, int01 += 7, int02 += 3, int03 += 15)
	assign		$tmp2787 ___558_i 	%line{942} %argrw{"wr"}
	sub		___558_i ___558_i $const3 	%argrw{"wrr"}
	add		___558_int00 ___558_int00 $const37 	%argrw{"wrr"}
	add		___558_int01 ___558_int01 $const37 	%argrw{"wrr"}
	add		___558_int02 ___558_int02 $const5 	%argrw{"wrr"}
	add		___558_int03 ___558_int03 $const65 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/rmanCellNoise.h:956
#     return point(np.result[0], np.result[1], np.result[2]);
	compref		$tmp2788 ___621_np.result $const2 	%line{956} %argrw{"wrr"}
	compref		$tmp2789 ___621_np.result $const3 	%argrw{"wrr"}
	compref		$tmp2790 ___621_np.result $const4 	%argrw{"wrr"}
	point		___871_r $tmp2788 $tmp2789 $tmp2790 	%argrw{"wrrr"}
# PxrMultiTexture.osl:934
#                 point r = matchCppPattern ? rxcellnoise(ps) : noise("cell", ps);
	noise		___871_r $const66 ___871_ps 	%filename{"PxrMultiTexture.osl"} %line{934} %argrw{"wrr"}
# PxrMultiTexture.osl:936
#                 randomizeHLSG(hueMode, saturationMode, luminanceMode, gammaMode,
	functioncall	$const103 7130 	%line{936} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:130
#     float g = (rnd[0] + rnd[1] + rnd[2]) * 0.333333;
	compref		$tmp2791 ___871_r $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h"} %line{130} %argrw{"wrr"}
	compref		$tmp2792 ___871_r $const3 	%argrw{"wrr"}
	add		$tmp2793 $tmp2791 $tmp2792 	%argrw{"wrr"}
	compref		$tmp2794 ___871_r $const4 	%argrw{"wrr"}
	add		$tmp2795 $tmp2793 $tmp2794 	%argrw{"wrr"}
	mul		___802_g $tmp2795 $const104 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:131
#     hue *= (hueMode == k_rnd_centered) ? rnd[0] - 0.5 :
	eq		$tmp2797 hueMode $const2 	%line{131} %argrw{"wrr"}
	if		$tmp2797 7096 7101 	%argrw{"r"}
	compref		$tmp2798 ___871_r $const2 	%argrw{"wrr"}
	sub		$tmp2796 $tmp2798 $const78 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:132
#            (hueMode == k_rnd_additive) ? rnd[0] : -rnd[0];
	eq		$tmp2799 hueMode $const3 	%line{132} %argrw{"wrr"}
	if		$tmp2799 7099 7101 	%argrw{"r"}
	compref		$tmp2796 ___871_r $const2 	%argrw{"wrr"}
	compref		$tmp2800 ___871_r $const2 	%argrw{"wrr"}
	neg		$tmp2796 $tmp2800 	%argrw{"wr"}
	mul		rHue rHue $tmp2796 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:133
#     sat *= (satMode == k_rnd_centered) ? rnd[1] - 0.5 :
	eq		$tmp2802 saturationMode $const2 	%line{133} %argrw{"wrr"}
	if		$tmp2802 7106 7111 	%argrw{"r"}
	compref		$tmp2803 ___871_r $const3 	%argrw{"wrr"}
	sub		$tmp2801 $tmp2803 $const78 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:134
#            (satMode == k_rnd_additive) ? rnd[1] : -rnd[1];
	eq		$tmp2804 saturationMode $const3 	%line{134} %argrw{"wrr"}
	if		$tmp2804 7109 7111 	%argrw{"r"}
	compref		$tmp2801 ___871_r $const3 	%argrw{"wrr"}
	compref		$tmp2805 ___871_r $const3 	%argrw{"wrr"}
	neg		$tmp2801 $tmp2805 	%argrw{"wr"}
	mul		rSat rSat $tmp2801 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:135
#     lum *= (lumMode == k_rnd_centered) ? rnd[2] - 0.5 :
	eq		$tmp2807 luminanceMode $const2 	%line{135} %argrw{"wrr"}
	if		$tmp2807 7116 7121 	%argrw{"r"}
	compref		$tmp2808 ___871_r $const4 	%argrw{"wrr"}
	sub		$tmp2806 $tmp2808 $const78 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:136
#            (lumMode == k_rnd_additive) ? rnd[2] : -rnd[2];
	eq		$tmp2809 luminanceMode $const3 	%line{136} %argrw{"wrr"}
	if		$tmp2809 7119 7121 	%argrw{"r"}
	compref		$tmp2806 ___871_r $const4 	%argrw{"wrr"}
	compref		$tmp2810 ___871_r $const4 	%argrw{"wrr"}
	neg		$tmp2806 $tmp2810 	%argrw{"wr"}
	mul		rLum rLum $tmp2806 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:137
#     gam *= (gamMode == k_rnd_centered) ? g - 0.5 :
	eq		$tmp2812 gammaMode $const2 	%line{137} %argrw{"wrr"}
	if		$tmp2812 7125 7129 	%argrw{"r"}
	sub		$tmp2811 ___802_g $const78 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:138
#            (gamMode == k_rnd_additive) ? g : -g;
	eq		$tmp2813 gammaMode $const3 	%line{138} %argrw{"wrr"}
	if		$tmp2813 7128 7129 	%argrw{"r"}
	assign		$tmp2811 ___802_g 	%argrw{"wr"}
	neg		$tmp2811 ___802_g 	%argrw{"wr"}
	mul		rGam rGam $tmp2811 	%argrw{"wrr"}
# PxrMultiTexture.osl:938
#                 colors[g] = varyColor(colors[g], rHue, rSat, rLum, rGam);
	aref		$tmp2815 colors ___818_g 	%filename{"PxrMultiTexture.osl"} %line{938} %argrw{"wrr"}
	functioncall	$const105 7168 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:144
#     color out = in;
	assign		___803_out $tmp2815 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h"} %line{144} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:145
#     if (hue || sat || lum)
	neq		$tmp2816 rHue $const18 	%line{145} %argrw{"wrr"}
	if		$tmp2816 7135 7137 	%argrw{"r"}
	neq		$tmp2817 rSat $const18 	%argrw{"wrr"}
	assign		$tmp2816 $tmp2817 	%argrw{"wr"}
	neq		$tmp2818 $tmp2816 $const2 	%argrw{"wrr"}
	if		$tmp2818 7139 7141 	%argrw{"r"}
	neq		$tmp2819 rLum $const18 	%argrw{"wrr"}
	assign		$tmp2818 $tmp2819 	%argrw{"wr"}
	if		$tmp2818 7161 7161 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:147
#         color hsl = transformc("rgb", "hsl", out);
	transformc	___804_hsl $const106 $const107 ___803_out 	%line{147} %argrw{"wrrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:148
#         hsl[0] = fmod(hsl[0] + hue, 1.0);
	compref		$tmp2821 ___804_hsl $const2 	%line{148} %argrw{"wrr"}
	add		$tmp2822 $tmp2821 rHue 	%argrw{"wrr"}
	fmod		$tmp2820 $tmp2822 $const9 	%argrw{"wrr"}
	compassign	___804_hsl $const2 $tmp2820 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:149
#         hsl[1] = clamp(hsl[1] + sat, 0.0, 1.0);
	compref		$tmp2824 ___804_hsl $const3 	%line{149} %argrw{"wrr"}
	add		$tmp2825 $tmp2824 rSat 	%argrw{"wrr"}
	functioncall	$const108 7152 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2826 $tmp2825 $const9 	%filename{"/Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp2823 $tmp2826 $const18 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:149
#         hsl[1] = clamp(hsl[1] + sat, 0.0, 1.0);
	compassign	___804_hsl $const3 $tmp2823 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h"} %line{149} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:150
#         hsl[2] = clamp(hsl[2] + lum, 0.0, 1.0);
	compref		$tmp2828 ___804_hsl $const4 	%line{150} %argrw{"wrr"}
	add		$tmp2829 $tmp2828 rLum 	%argrw{"wrr"}
	functioncall	$const108 7158 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2830 $tmp2829 $const9 	%filename{"/Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		$tmp2827 $tmp2830 $const18 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:150
#         hsl[2] = clamp(hsl[2] + lum, 0.0, 1.0);
	compassign	___804_hsl $const4 $tmp2827 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h"} %line{150} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:151
#         out = max(color(0), transformc("hsl", "rgb", hsl));
	transformc	$tmp2832 $const107 $const106 ___804_hsl 	%line{151} %argrw{"wrrr"}
	max		___803_out $const40 $tmp2832 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:153
#     if (gam)
	neq		$tmp2833 rGam $const18 	%line{153} %argrw{"wrr"}
	if		$tmp2833 7167 7167 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:155
#         out = pow(out, 1.0 / max(1.0e-4, 1.0 + gam));
	add		$tmp2835 $const9 rGam 	%line{155} %argrw{"wrr"}
	max		$tmp2834 $const61 $tmp2835 	%argrw{"wrr"}
	div		$tmp2836 $const9 $tmp2834 	%argrw{"wrr"}
	pow		___803_out ___803_out $tmp2836 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLRandomize.h:157
#     return out;
	assign		$tmp2814 ___803_out 	%line{157} %argrw{"wr"}
# PxrMultiTexture.osl:938
#                 colors[g] = varyColor(colors[g], rHue, rSat, rLum, rGam);
	aassign		colors ___818_g $tmp2814 	%filename{"PxrMultiTexture.osl"} %line{938} %argrw{"wrr"}
# PxrMultiTexture.osl:943
#             colors[g] = 0;
	assign		$tmp2837 $const2 	%line{943} %argrw{"wr"}
	aassign		colors ___818_g $tmp2837 	%argrw{"wrr"}
# PxrMultiTexture.osl:944
#             alphas[g] = 0;
	aassign		alphas ___818_g $const2 	%line{944} %argrw{"wrr"}
# PxrMultiTexture.osl:945
#             grads[g] = 0;
	assign		$tmp2838 $const2 	%line{945} %argrw{"wr"}
	aassign		grads ___818_g $tmp2838 	%argrw{"wrr"}
# PxrMultiTexture.osl:639
#     for (int g = 0; g < NUM_STGRPS; g++)
	assign		$tmp2839 ___818_g 	%line{639} %argrw{"wr"}
	add		___818_g ___818_g $const3 	%argrw{"wrr"}
# PxrMultiTexture.osl:950
#     resultRGB = 0.0;
	assign		resultRGB $const18 	%line{950} %argrw{"wr"}
# PxrMultiTexture.osl:952
#     if (blendingContrast > 0)
	gt		$tmp2840 blendingContrast $const2 	%line{952} %argrw{"wrr"}
	if		$tmp2840 7227 7253 	%argrw{"r"}
# PxrMultiTexture.osl:955
#         HexTileColor hcol = HEXTILECOLOR_ZERO;
	assign		___873_hcol.value $const40 	%line{955} %argrw{"wr"}
	assign		___873_hcol.norm $const18 	%argrw{"wr"}
	assign		___873_hcol.powerGtoT $const40 	%argrw{"wr"}
# PxrMultiTexture.osl:956
#         for (int g = 0; g < NUM_STGRPS; g++)
	for		$tmp2842 7184 7186 7215 7217 	%line{956} %argrw{"r"}
	assign		___874_g $const2 	%argrw{"wr"}
	lt		$tmp2841 ___874_g $const34 	%argrw{"wrr"}
	neq		$tmp2842 $tmp2841 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:958
#             if (enable[g])
	aref		$tmp2843 enable ___874_g 	%line{958} %argrw{"wrr"}
	if		$tmp2843 7215 7215 	%argrw{"r"}
# PxrMultiTexture.osl:960
#                 resultRGB += idf[g][2] * sta[g][2] * colors[g];
	aref		$tmp2845 idf ___874_g 	%line{960} %argrw{"wrr"}
	compref		$tmp2844 $tmp2845 $const4 	%argrw{"wrr"}
	aref		$tmp2847 sta ___874_g 	%argrw{"wrr"}
	compref		$tmp2846 $tmp2847 $const4 	%argrw{"wrr"}
	mul		$tmp2848 $tmp2844 $tmp2846 	%argrw{"wrr"}
	aref		$tmp2849 colors ___874_g 	%argrw{"wrr"}
	mul		$tmp2850 $tmp2848 $tmp2849 	%argrw{"wrr"}
	add		resultRGB resultRGB $tmp2850 	%argrw{"wrr"}
# PxrMultiTexture.osl:961
#                 hexTileAccumulate(colors[g], idf[g][2] * sta[g][2],
	aref		$tmp2851 colors ___874_g 	%line{961} %argrw{"wrr"}
	aref		$tmp2853 idf ___874_g 	%argrw{"wrr"}
	compref		$tmp2852 $tmp2853 $const4 	%argrw{"wrr"}
	aref		$tmp2855 sta ___874_g 	%argrw{"wrr"}
	compref		$tmp2854 $tmp2855 $const4 	%argrw{"wrr"}
	mul		$tmp2856 $tmp2852 $tmp2854 	%argrw{"wrr"}
# PxrMultiTexture.osl:962
#                                     hexTex[g], hcol);
	aref		$tmp2857.powerTtoG hexTex.powerTtoG ___874_g 	%line{962} %argrw{"wrr"}
	aref		$tmp2857.powerGtoT hexTex.powerGtoT ___874_g 	%argrw{"wrr"}
# PxrMultiTexture.osl:961
#                 hexTileAccumulate(colors[g], idf[g][2] * sta[g][2],
	functioncall	$const100 7215 	%line{961} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:274
#     result.value += pow(tex, htx.powerTtoG) * weight;
	pow		$tmp2858 $tmp2851 $tmp2857.powerTtoG 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{274} %argrw{"wrr"}
	mul		$tmp2859 $tmp2858 $tmp2856 	%argrw{"wrr"}
	add		___873_hcol.value ___873_hcol.value $tmp2859 	%argrw{"wrr"}
	assign		___873_hcol.value ___873_hcol.value 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:275
#     result.norm += weight * weight;
	mul		$tmp2860 $tmp2856 $tmp2856 	%line{275} %argrw{"wrr"}
	add		___873_hcol.norm ___873_hcol.norm $tmp2860 	%argrw{"wrr"}
	assign		___873_hcol.norm ___873_hcol.norm 	%argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:276
#     result.powerGtoT += htx.powerGtoT * weight;
	mul		$tmp2861 $tmp2857.powerGtoT $tmp2856 	%line{276} %argrw{"wrr"}
	add		___873_hcol.powerGtoT ___873_hcol.powerGtoT $tmp2861 	%argrw{"wrr"}
	assign		___873_hcol.powerGtoT ___873_hcol.powerGtoT 	%argrw{"wr"}
# PxrMultiTexture.osl:956
#         for (int g = 0; g < NUM_STGRPS; g++)
	assign		$tmp2862 ___874_g 	%filename{"PxrMultiTexture.osl"} %line{956} %argrw{"wr"}
	add		___874_g ___874_g $const3 	%argrw{"wrr"}
# PxrMultiTexture.osl:965
#         color corrected  = hexTileFinalColor(hcol);
	functioncall	$const101 7226 	%line{965} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:284
#     float norm = 1.0 / sqrt(in.norm);
	sqrt		$tmp2863 ___873_hcol.norm 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{284} %argrw{"wr"}
	div		___748_norm $const9 $tmp2863 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:285
#     color result = norm * (in.value - HEXT_GCENTER) + HEXT_GCENTER;
	sub		$tmp2865 ___873_hcol.value $const81 	%line{285} %argrw{"wrr"}
	mul		$tmp2866 ___748_norm $tmp2865 	%argrw{"wrr"}
	add		___748_result $tmp2866 $const81 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:287
#     result = max(result, color(0.0));
	max		___748_result ___748_result $const40 	%line{287} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:290
#     result = pow(result, in.powerGtoT);
	pow		___748_result ___748_result ___873_hcol.powerGtoT 	%line{290} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:291
#     return result;
	assign		___873_corrected ___748_result 	%line{291} %argrw{"wr"}
# PxrMultiTexture.osl:967
#         resultRGB = mix(resultRGB, corrected, blendingContrast);
	mix		resultRGB resultRGB ___873_corrected blendingContrast 	%filename{"PxrMultiTexture.osl"} %line{967} %argrw{"wrrr"}
# PxrMultiTexture.osl:972
#         for (int g = 0; g < NUM_STGRPS; g++)
	for		$tmp2870 7229 7231 7251 7253 	%line{972} %argrw{"r"}
	assign		___878_g $const2 	%argrw{"wr"}
	lt		$tmp2869 ___878_g $const34 	%argrw{"wrr"}
	neq		$tmp2870 $tmp2869 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:974
#             if (enable[g])
	aref		$tmp2871 enable ___878_g 	%line{974} %argrw{"wrr"}
	if		$tmp2871 7251 7251 	%argrw{"r"}
# PxrMultiTexture.osl:976
#                 resultRGB += idf[g][2] * sta[g][2] * colors[g];
	aref		$tmp2873 idf ___878_g 	%line{976} %argrw{"wrr"}
	compref		$tmp2872 $tmp2873 $const4 	%argrw{"wrr"}
	aref		$tmp2875 sta ___878_g 	%argrw{"wrr"}
	compref		$tmp2874 $tmp2875 $const4 	%argrw{"wrr"}
	mul		$tmp2876 $tmp2872 $tmp2874 	%argrw{"wrr"}
	aref		$tmp2877 colors ___878_g 	%argrw{"wrr"}
	mul		$tmp2878 $tmp2876 $tmp2877 	%argrw{"wrr"}
	add		resultRGB resultRGB $tmp2878 	%argrw{"wrr"}
# PxrMultiTexture.osl:977
#                 if (isconnected(resultNG))
	isconnected	$tmp2879 resultNG 	%line{977} %argrw{"wr"}
	if		$tmp2879 7251 7251 	%argrw{"r"}
# PxrMultiTexture.osl:978
#                     resultNG += idf[g][2] * sta[g][2] * grads[g];
	aref		$tmp2881 idf ___878_g 	%line{978} %argrw{"wrr"}
	compref		$tmp2880 $tmp2881 $const4 	%argrw{"wrr"}
	aref		$tmp2883 sta ___878_g 	%argrw{"wrr"}
	compref		$tmp2882 $tmp2883 $const4 	%argrw{"wrr"}
	mul		$tmp2884 $tmp2880 $tmp2882 	%argrw{"wrr"}
	aref		$tmp2885 grads ___878_g 	%argrw{"wrr"}
	mul		$tmp2886 $tmp2884 $tmp2885 	%argrw{"wrr"}
	add		resultNG resultNG $tmp2886 	%argrw{"wrr"}
# PxrMultiTexture.osl:972
#         for (int g = 0; g < NUM_STGRPS; g++)
	assign		$tmp2887 ___878_g 	%line{972} %argrw{"wr"}
	add		___878_g ___878_g $const3 	%argrw{"wrr"}
# PxrMultiTexture.osl:983
#     if (needAlpha)
	if		needAlpha 7271 7271 	%line{983} %argrw{"r"}
# PxrMultiTexture.osl:985
#         resultA = 0.0;
	assign		resultA $const18 	%line{985} %argrw{"wr"}
# PxrMultiTexture.osl:986
#         for (int g=0; g<numRequested; g++)
	for		$tmp2889 7257 7259 7266 7268 	%line{986} %argrw{"r"}
	assign		___882_g $const2 	%argrw{"wr"}
	lt		$tmp2888 ___882_g numRequested 	%argrw{"wrr"}
	neq		$tmp2889 $tmp2888 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:988
#             if (enable[g])
	aref		$tmp2890 enable ___882_g 	%line{988} %argrw{"wrr"}
	if		$tmp2890 7266 7266 	%argrw{"r"}
# PxrMultiTexture.osl:989
#                 resultA += sta[g][2] * alphas[g];
	aref		$tmp2892 sta ___882_g 	%line{989} %argrw{"wrr"}
	compref		$tmp2891 $tmp2892 $const4 	%argrw{"wrr"}
	aref		$tmp2893 alphas ___882_g 	%argrw{"wrr"}
	mul		$tmp2894 $tmp2891 $tmp2893 	%argrw{"wrr"}
	add		resultA resultA $tmp2894 	%argrw{"wrr"}
# PxrMultiTexture.osl:986
#         for (int g=0; g<numRequested; g++)
	assign		$tmp2895 ___882_g 	%line{986} %argrw{"wr"}
	add		___882_g ___882_g $const3 	%argrw{"wrr"}
# PxrMultiTexture.osl:991
#         resultA = clamp( resultA, 0.0, 1.0);
	functioncall	$const108 7271 	%line{991} %argrw{"r"}
# /Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h:141
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp2896 resultA $const9 	%filename{"/Users/Shared/build/ratbuild/rman/_built/osxSonoma_x86-64_clang15_external_release/include/shaders/stdosl.h"} %line{141} %argrw{"wrr"}
	max		resultA $tmp2896 $const18 	%argrw{"wrr"}
# PxrMultiTexture.osl:995
#     if (showGrid)
	if		showGrid 7329 7329 	%filename{"PxrMultiTexture.osl"} %line{995} %argrw{"r"}
# PxrMultiTexture.osl:997
#         float mask = 0;
	assign		___884_mask $const2 	%line{997} %argrw{"wr"}
# PxrMultiTexture.osl:998
#         for (int i=0; i<NUM_STGRPS; i++)
	for		$tmp2898 7275 7277 7326 7328 	%line{998} %argrw{"r"}
	assign		___885_i $const2 	%argrw{"wr"}
	lt		$tmp2897 ___885_i $const34 	%argrw{"wrr"}
	neq		$tmp2898 $tmp2897 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:1000
#             if (doHexTile)
	if		doHexTile 7308 7326 	%line{1000} %argrw{"r"}
# PxrMultiTexture.osl:1002
#                 if (validHexTileData(hexData[i]))
	aref		$tmp2900.s hexData.s ___885_i 	%line{1002} %argrw{"wrr"}
	aref		$tmp2900.t hexData.t ___885_i 	%argrw{"wrr"}
	aref		$tmp2900.w hexData.w ___885_i 	%argrw{"wrr"}
	aref		$tmp2900.r hexData.r ___885_i 	%argrw{"wrr"}
	functioncall	$const41 7288 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:78
#     return hxt.w == INVALID_HEXTILE_WEIGHT ? 0 : 1;
	eq		$tmp2902 $tmp2900.w $const7 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{78} %argrw{"wrr"}
	if		$tmp2902 7286 7287 	%argrw{"r"}
	assign		$tmp2899 $const2 	%argrw{"wr"}
	assign		$tmp2899 $const3 	%argrw{"wr"}
	return
# PxrMultiTexture.osl:1002
#                 if (validHexTileData(hexData[i]))
	if		$tmp2899 7308 7308 	%filename{"PxrMultiTexture.osl"} %line{1002} %argrw{"r"}
# PxrMultiTexture.osl:1003
#                     mask = max(mask, hexTileGrid(hexData[i]) * sta[i][2]);
	aref		$tmp2904.s hexData.s ___885_i 	%line{1003} %argrw{"wrr"}
	aref		$tmp2904.t hexData.t ___885_i 	%argrw{"wrr"}
	aref		$tmp2904.w hexData.w ___885_i 	%argrw{"wrr"}
	aref		$tmp2904.r hexData.r ___885_i 	%argrw{"wrr"}
	functioncall	$const109 7304 	%argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:239
#     float minw = min(hexData.w[0], min(hexData.w[1], hexData.w[2]));
	compref		$tmp2905 $tmp2904.w $const2 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h"} %line{239} %argrw{"wrr"}
	compref		$tmp2907 $tmp2904.w $const3 	%argrw{"wrr"}
	compref		$tmp2908 $tmp2904.w $const4 	%argrw{"wrr"}
	min		$tmp2906 $tmp2907 $tmp2908 	%argrw{"wrr"}
	min		___745_minw $tmp2905 $tmp2906 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:240
#     float grid = step(1.0 - filterwidth(minw), 1.0 - minw);
	filterwidth	$tmp2909 ___745_minw 	%line{240} %argrw{"wr"} %argderivs{1}
	sub		$tmp2910 $const9 $tmp2909 	%argrw{"wrr"}
	sub		$tmp2911 $const9 ___745_minw 	%argrw{"wrr"}
	step		___745_grid $tmp2910 $tmp2911 	%argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLHexTile.h:242
#     return grid;
	assign		$tmp2903 ___745_grid 	%line{242} %argrw{"wr"}
# PxrMultiTexture.osl:1003
#                     mask = max(mask, hexTileGrid(hexData[i]) * sta[i][2]);
	aref		$tmp2913 sta ___885_i 	%filename{"PxrMultiTexture.osl"} %line{1003} %argrw{"wrr"}
	compref		$tmp2912 $tmp2913 $const4 	%argrw{"wrr"}
	mul		$tmp2914 $tmp2903 $tmp2912 	%argrw{"wrr"}
	max		___884_mask ___884_mask $tmp2914 	%argrw{"wrr"}
# PxrMultiTexture.osl:1007
#                 for (int j=0; j<2; j++)
	for		$tmp2916 7310 7312 7324 7326 	%line{1007} %argrw{"r"}
	assign		___889_j $const2 	%argrw{"wr"}
	lt		$tmp2915 ___889_j $const4 	%argrw{"wrr"}
	neq		$tmp2916 $tmp2915 $const2 	%argrw{"wrr"}
# PxrMultiTexture.osl:1009
#                     float f = fmod(100000.0 + sta[i][j], 1.0);
	aref		$tmp2918 sta ___885_i 	%line{1009} %argrw{"wrr"}
	compref		$tmp2917 $tmp2918 ___889_j 	%argrw{"wrr"}
	add		$tmp2919 $const110 $tmp2917 	%argrw{"wrr"}
	fmod		___890_f $tmp2919 $const9 	%argrw{"wrr"}
# PxrMultiTexture.osl:1010
#                     float fw = 2.0 * filterwidth(f);
	filterwidth	$tmp2920 ___890_f 	%line{1010} %argrw{"wr"} %argderivs{1}
	mul		___890_fw $const68 $tmp2920 	%argrw{"wrr"}
# PxrMultiTexture.osl:1011
#                     mask = max(mask, step(1.0 - fw, f) * sta[i][2]);
	sub		$tmp2922 $const9 ___890_fw 	%line{1011} %argrw{"wrr"}
	step		$tmp2921 $tmp2922 ___890_f 	%argrw{"wrr"}
	aref		$tmp2924 sta ___885_i 	%argrw{"wrr"}
	compref		$tmp2923 $tmp2924 $const4 	%argrw{"wrr"}
	mul		$tmp2925 $tmp2921 $tmp2923 	%argrw{"wrr"}
	max		___884_mask ___884_mask $tmp2925 	%argrw{"wrr"}
# PxrMultiTexture.osl:1007
#                 for (int j=0; j<2; j++)
	assign		$tmp2926 ___889_j 	%line{1007} %argrw{"wr"}
	add		___889_j ___889_j $const3 	%argrw{"wrr"}
# PxrMultiTexture.osl:998
#         for (int i=0; i<NUM_STGRPS; i++)
	assign		$tmp2927 ___885_i 	%line{998} %argrw{"wr"}
	add		___885_i ___885_i $const3 	%argrw{"wrr"}
# PxrMultiTexture.osl:1015
#         resultRGB = mix(resultRGB, gridColor, mask);
	mix		resultRGB resultRGB gridColor ___884_mask 	%line{1015} %argrw{"wrrr"}
# PxrMultiTexture.osl:1019
#     if (isconnected(resultNG) && !texturesAreNormalMaps)
	isconnected	$tmp2928 resultNG 	%line{1019} %argrw{"wr"}
	neq		$tmp2929 $tmp2928 $const2 	%argrw{"wrr"}
	if		$tmp2929 7335 7335 	%argrw{"r"}
	eq		$tmp2930 texturesAreNormalMaps $const2 	%argrw{"wrr"}
	neq		$tmp2931 $tmp2930 $const2 	%argrw{"wrr"}
	assign		$tmp2929 $tmp2931 	%argrw{"wr"}
	if		$tmp2929 7349 7349 	%argrw{"r"}
# PxrMultiTexture.osl:1022
#         normal bumpN = normalize(calculatenormal(P + N * (luminance(resultRGB) - 0.5)));
	luminance	$tmp2933 resultRGB 	%line{1022} %argrw{"wr"}
	sub		$tmp2934 $tmp2933 $const78 	%argrw{"wrr"}
	mul		$tmp2935 N $tmp2934 	%argrw{"wrr"}
	add		$tmp2936 P $tmp2935 	%argrw{"wrr"}
	calculatenormal	$tmp2932 $tmp2936 	%argrw{"wr"} %argderivs{1}
	normalize	___891_bumpN $tmp2932 	%argrw{"wr"}
# PxrMultiTexture.osl:1023
#         resultNG = surfgradFromPerturbedNormal(bumpN, N);
	functioncall	$const111 7349 	%line{1023} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:100
# 	float k = dot(Nn, bN);
	dot		___717_k N ___891_bumpN 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{100} %argrw{"wrr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:101
# 	return (k * Nn - bN) / max(1.0e-8, abs(k));
	mul		$tmp2937 ___717_k N 	%line{101} %argrw{"wrr"}
	sub		$tmp2938 $tmp2937 ___891_bumpN 	%argrw{"wrr"}
	abs		$tmp2940 ___717_k 	%argrw{"wr"}
	max		$tmp2939 $const85 $tmp2940 	%argrw{"wrr"}
	div		resultNG $tmp2938 $tmp2939 	%argrw{"wrr"}
# PxrMultiTexture.osl:1027
#     resultRGB = Color_Saturate(resultRGB, saturation);
	functioncall	$const112 7354 	%filename{"PxrMultiTexture.osl"} %line{1027} %argrw{"r"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLColor.h:76
#     color tmpColor = inputColor;
	assign		___769_tmpColor resultRGB 	%filename{"/Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLColor.h"} %line{76} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLColor.h:77
#     float intensity = luminance(tmpColor);
	luminance	___769_intensity ___769_tmpColor 	%line{77} %argrw{"wr"}
# /Users/Shared/build/ratbuild/rmanshare/RIS/include/osl/PxrOSLColor.h:78
#     return mix(color(intensity), tmpColor, sat);
	assign		$tmp2941 ___769_intensity 	%line{78} %argrw{"wr"}
	mix		resultRGB $tmp2941 ___769_tmpColor saturation 	%argrw{"wrrr"}
# PxrMultiTexture.osl:1028
#     resultRGB = resultRGB * colorScale + colorOffset;
	mul		$tmp2942 resultRGB colorScale 	%filename{"PxrMultiTexture.osl"} %line{1028} %argrw{"wrr"}
	add		resultRGB $tmp2942 colorOffset 	%argrw{"wrr"}
# PxrMultiTexture.osl:1029
#     resultA = resultA * alphaScale + alphaOffset;
	mul		$tmp2943 resultA alphaScale 	%line{1029} %argrw{"wrr"}
	add		resultA $tmp2943 alphaOffset 	%argrw{"wrr"}
# PxrMultiTexture.osl:1032
#     resultR = resultRGB[0];
	compref		resultR resultRGB $const2 	%line{1032} %argrw{"wrr"}
# PxrMultiTexture.osl:1033
#     resultG = resultRGB[1];
	compref		resultG resultRGB $const3 	%line{1033} %argrw{"wrr"}
# PxrMultiTexture.osl:1034
#     resultB = resultRGB[2];
	compref		resultB resultRGB $const4 	%line{1034} %argrw{"wrr"}
	end
